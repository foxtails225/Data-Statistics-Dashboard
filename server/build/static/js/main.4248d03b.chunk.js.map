{"version":3,"sources":["API.ts","utils/styles.ts","utils/util.ts","pages/chart-panel/line-chart-section/index.tsx","pages/chart-panel/histogram-chart-section/index.tsx","pages/chart-panel/box-chart-section/index.tsx","pages/chart-panel/terrestrial-heatmap-chart/index.tsx","pages/cart-panel/analyze-regression-section/two-view-section/index.tsx","pages/cart-panel/analyze-regression-section/three-view-section/index.tsx","components/Button/MinusAddon.tsx","constants/index.ts","components/Select/index.tsx","components/Button/PlusAddon.tsx","pages/cart-panel/analyze-regression-section/charts-libs-section/selected-chart-section/index.tsx","pages/cart-panel/analyze-regression-section/charts-libs-section/index.tsx","components/Button/OptionAddon.tsx","pages/cart-panel/analyze-regression-section/index.tsx","pages/cart-panel/index.tsx","pages/chart-panel/index.tsx","pages/cart-dash-panel/analyze-regression-section/two-view-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/three-view-section/index.tsx","components/Button/DashAddon.tsx","pages/cart-dash-panel/analyze-regression-section/charts-libs-section/line-chart-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/charts-libs-section/histogram-chart-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/charts-libs-section/box-chart-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/charts-libs-section/selected-chart-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/charts-libs-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/header-section/modify-dialog/custom-accordion/index.tsx","pages/cart-dash-panel/analyze-regression-section/header-section/modify-dialog/create-system-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/header-section/modify-dialog/system-details-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/header-section/modify-dialog/model-details-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/header-section/modify-dialog/new-data-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/header-section/modify-dialog/index.tsx","pages/cart-dash-panel/analyze-regression-section/header-section/index.tsx","pages/cart-dash-panel/analyze-regression-section/index.tsx","pages/cart-dash-panel/index.tsx","pages/auth-panel/NoMatch.tsx","App.tsx","index.tsx"],"names":["getItems","params","a","axios","get","res","Error","getPlotItems","getCartItems","getSystems","getSystemVersion","getFileId","getModifySystems","getModifyVersions","getModifyAttrVersions","getModifyModels","changeDB","deleteRecord","post","deleteAll","migrate","createSystem","createVersion","createModel","uploadFile","formData","config","headers","processScripts","useStyles","makeStyles","theme","authcard","marginTop","minWidth","padding","spacing","link","paddingRight","color","textDecoration","cartCard","cartCardContent","paddingLeft","overflowX","height","backgroundColor","grey","chartCard","searchSelect","textAlignLast","tooltip","maxWidth","dialogDeep","palette","dashDialogDeep","dialogModify","dialogCloseBtn","position","right","top","zIndex","contentSection","maxHeight","overflow","label","fontSize","formControl","margin","useWindowSize","useState","width","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","LineChartSection","props","size","data","x","source","xTraces","y","yTraces","name","type","mode","marker","avgTraces","layout","title","showlegend","legend","orientation","xanchor","font","family","l","b","r","t","pad","xaxis","dataType","titlefont","showgrid","zerolinecolor","zerolinewidth","yaxis","displayModeBar","HistogramChartSection","split","join","BoxChartSection","boxpoints","INIT_SOURCE","heatmap","intrpl","TerrestrialHeatMap","setMode","setSource","then","catch","Grid","container","justify","alignItems","item","md","z","zeroline","range","tickmode","tick0","dtick","lat","lon","mapbox","center","style","zoom","mapboxAccessToken","hoverinfo","Box","borderColor","border","borderRadius","Button","variant","onClick","e","currentTarget","marginRight","TwoViewSection","checked","setChecked","setConfig","plot_rows","surface_rows","unpack","rows","key","map","row","configData","inclination","parseInt","inc","new_plot_rows","filter","new_surface_rows","show_surface","show_scatter","line","dot","autosize","hovermode","yAxisLabel","onHover","event","target","cursor","onUnhover","onDoubleClick","ThreeViewSection","opacity","alt","value","parseFloat","reset","scene","aspectratio","camera","eye","up","Math","max","zaxis","zAxisLabel","min","MinusAddon","IconButton","onSelected","id","Divider","MENU_ITEMS","as_needed_handoff","dataset","maximum_powee_handoff","INIT_PARAMS","Selection","Menu","anchorEl","keepMounted","open","Boolean","onClose","onAnchorEl","Constants","el","MenuItem","selected","includes","PlusAddon","createData","SelectedChartSection","textAlign","Typography","Table","aria-label","TableHead","TableRow","TableCell","TableBody","component","scope","ChartsLibsSection","setSelected","setAnchorEl","handleSelected","prevState","length","idx","dset","dataSet","Fragment","Card","marginLeft","CardContent","traces","Object","keys","OptionAddon","isOpen","setIsOpen","classes","left","className","isDash","onChart","plot_value","filename","Date","now","viewMethod","onViewMethod","fullWidth","flexItem","FormControl","InputLabel","Select","labelId","onChange","onInc","defaultValue","disabled","incs","Tooltip","gutterBottom","dangerouslySetInnerHTML","__html","placement","resetPlot","INIT_CHECK_STATUS","INIT_FILE_ID","AnalyzeRegressionSection","setViewMethod","setDataSet","systems","setSystems","versions","setVersions","setDot","fileId","setFileId","setTraces","setReset","version","forEach","ctype","gaps","durations","avgs","push","err","user_altitude","user_inclination","system","altitude","handleClick","points","minHeight","ToggleButtonGroup","preventDefault","onDataType","ToggleButton","onSystem","system_name","system_id","onVersion","onChecked","equation","maxAltitude","isLegend","isSub","Transition","React","forwardRef","ref","Slide","direction","CartPanel","dataSource","setDataSource","setSystem","setVersion","setInclination","setIncs","setDataType","isLoading","setIsLoading","setMaxAltitude","text","setText","metric","tmp","uniqueArray","Set","sort","Dialog","TransitionComponent","paper","CssBaseline","Close","DialogContent","dividers","m","selectedItem","INIT_MENUS","TabPanel","children","index","other","role","hidden","aria-labelledby","p","a11yProps","ChartPanel","tab","setTab","useTheme","Container","CardHeader","action","AppBar","Tabs","val","indicatorColor","textColor","Tab","axis","onChangeIndex","isChart","replace","Number","DashAddon","setTitle","csvTitle","xTrace","yTrace","avgTrace","onIndex","onSubChart","isSubChart","subChart","setSubChart","setIndex","PaperProps","Accordion","withStyles","root","boxShadow","borderBottom","display","expanded","MuiAccordion","AccordionSummary","marginBottom","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","CreateSystemSection","setValue","aria-describedby","TextField","required","DialogActions","SystemDetailsSection","isSystemOpen","setIsSystemOpen","attrVersion","setAttrVersion","attrVersions","setAttrVersions","fetchSystem","find","SYSTEM_ID","SYSTEM_NAME","SYSTEM_VERSION","SYSTEM_ATTRIBUTE_VERSION_ID","onChangeSystem","square","aria-controls","ModelDetailsSection","model","setModel","models","setModels","isNew","setIsNew","fetchModels","MODEL_ID","beam","BEAM_TYPE_STK","NewDataSection","element","document","getElementById","click","accept","files","FormData","append","onChangeUploadedItems","blue","uploadedItems","align","ModifyDialog","setExpanded","setUploadedItems","DialogTitle","disableTypography","handleChangeUploadedItems","HeaderSection","isModifyOpen","setIsModifyOpen","db","onSetDB","onRefresh","viewStyle","setDB","count","setCount","setIsChart","chartEl","useRef","isRefresh","database","getComputedStyle","current","fontWeight","CartDashPanel","setIsRefresh","NoMatch","to","App","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.4248d03b.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\n\r\ninterface IUploadedItem {\r\n  name: string;\r\n  size: number;\r\n}\r\n\r\n// const baseUrl: string = 'http://127.0.0.1:7000';\r\n\r\nexport const getItems = async (params: any) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-items', { params });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getPlotItems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-plot');\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getCartItems = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-cart', { params });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getSystems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-systems');\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getSystemVersion = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-system-version', {\r\n      params\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getFileId = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-file-id', { params });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getModifySystems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-modify-systems');\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getModifyVersions = async (params: { [key: string]: number | string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-modify-versions', {\r\n      params\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getModifyAttrVersions = async (params: { [key: string]: number }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-modify-attr-versions', {\r\n      params\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getModifyModels = async (params: { [key: string]: number }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/get-modify-models', {\r\n      params\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const changeDB = async (params: { [key: string]: string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get('/change-db', {\r\n      params\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deleteRecord = async (params: { [key: string]: string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post('/delete-record', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deleteAll = async (params: { [key: string]: string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post('/delete-all', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const migrate = async (params: { [key: string]: string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post('/migrate', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const createSystem = async (params: { [key: string]: string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post('/create-system', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const createVersion = async (params: { [key: string]: number | string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post('/create-version', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const createModel = async (params: { [key: string]: number | string }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post('/create-model', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const uploadFile = async (formData: FormData) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n    const res: AxiosResponse = await axios.post(\r\n      '/upload-file',\r\n      formData,\r\n      config\r\n    );\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const processScripts = async (params: { [key: string]: IUploadedItem[] }) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post('/process-scripts', params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  authcard: {\r\n    marginTop: \"10vh\",\r\n    minWidth: \"30vw\",\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  link: {\r\n    paddingRight: theme.spacing(2),\r\n    color: \"#3385ff\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  cartCard: {\r\n    padding: 0,\r\n  },\r\n\r\n  cartCardContent: {\r\n    paddingRight: 0,\r\n    paddingLeft: 0,\r\n    overflowX: \"hidden\",\r\n    height: \"82vh\",\r\n    backgroundColor: grey[50]\r\n  },\r\n\r\n  chartCard: {\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  searchSelect: {\r\n    textAlignLast: \"center\",\r\n  },\r\n\r\n  tooltip: {\r\n    maxWidth: \"500px\",\r\n  },\r\n\r\n  dialogDeep: {\r\n    minWidth: \"43vw !important\",\r\n    height: \"90vh !important\",\r\n    maxWidth: \"40vw !important\",\r\n    backgroundColor: theme.palette.grey[100],\r\n  },\r\n\r\n  dashDialogDeep: {\r\n    height: \"93vh !important\",\r\n    minWidth: \"80vw !important\",\r\n    maxWidth: \"80vw !important\",\r\n    backgroundColor: theme.palette.grey[100],\r\n  },\r\n\r\n  dialogModify: {\r\n    minWidth: \"40vw !important\",\r\n    maxWidth: \"40vw !important\",\r\n  },\r\n\r\n  dialogCloseBtn: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    zIndex: 100,\r\n  },\r\n\r\n  contentSection: {\r\n    backgroundColor: grey[500],\r\n    height: \"100%\",\r\n    maxHeight: \"55vh\",\r\n    overflow: \"auto\",\r\n  },\r\n\r\n  label: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined as any,\r\n    height: undefined as any,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction LineChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.source.xTraces,\r\n          y: props.source.yTraces,\r\n          name: \"Gap Event Duration\",\r\n          type: \"scatter\",\r\n          mode: \"lines+markers\",\r\n          marker: { color: \"red\" },\r\n        },\r\n        {\r\n          x: props.source.xTraces,\r\n          y: props.source.avgTraces,\r\n          name: \"Running Average\",\r\n          type: \"scatter\",\r\n          marker: { color: \"blue\" },\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.source.title}</b>`,\r\n        width: size.width * 0.37,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title:\r\n            props.dataType === \"coverage\"\r\n              ? \"Coverage Event Number\"\r\n              : \"Gap Event Number\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title:\r\n            props.dataType === \"coverage\"\r\n              ? \"Coverage Duration (Sec.)\"\r\n              : \"Gap Duration (Sec.)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LineChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction HistogramChartSection(props: any) {\r\n  const size = useWindowSize();\r\n  \r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          name: \"Duration\",\r\n          type: \"histogram\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split('_').join(' ')}</b>`,\r\n        width: size.width * 0.37,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Occurances\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HistogramChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction BoxChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          y: props.xTraces,\r\n          boxpoints: 'all',\r\n          name: \"\",\r\n          type: \"box\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split(\" \")[0]} Statistics</b>`,\r\n        width: size.width * 0.37,\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        yaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BoxChartSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { Grid, Button, Box } from \"@material-ui/core\";\r\n\r\nimport { getPlotItems } from \"../../../API\";\r\n\r\nconst INIT_SOURCE = {\r\n  heatmap: {},\r\n  intrpl: {},\r\n};\r\n\r\nfunction TerrestrialHeatMap() {\r\n  const [mode, setMode] = useState(\"heatmap\");\r\n  const [source, setSource] = useState(INIT_SOURCE as any);\r\n\r\n  useEffect(() => {\r\n    getPlotItems()\r\n      .then((res: any) => {\r\n        setSource(res.data);\r\n      })\r\n      .catch(() => setSource(INIT_SOURCE));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        {mode === \"heatmap\" ? (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.heatmap.x,\r\n                    y: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.heatmap.x,\r\n                    lon: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"densitymapbox\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.intrpl.x,\r\n                    y: source.intrpl.y,\r\n                    z: source.intrpl.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.intrpl.x,\r\n                    lon: source.intrpl.x,\r\n                    z: source.intrpl.z,\r\n                    type: \"densitymapbox\",\r\n                    hoverinfo: \"skip\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n      <Grid item md={6}>\r\n        <Box\r\n          borderColor=\"primary.main\"\r\n          border={2}\r\n          borderRadius={5}\r\n          padding={2}\r\n          style={{ zIndex: 1000 }}\r\n        >\r\n          <Button\r\n            name=\"heatmap\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\", marginRight: \"4%\" }}\r\n          >\r\n            {\"Non-Interpolated\"}\r\n          </Button>\r\n          <Button\r\n            name=\"intrpl\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\" }}\r\n          >\r\n            {\"Interpolated\"}\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TerrestrialHeatMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useWindowSize } from \"../../../../utils/util\";\r\n\r\nfunction TwoViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const size: any = useWindowSize();\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row: any) {\r\n      return row[key];\r\n    });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    const inclination = parseInt(props.inc);\r\n    const new_plot_rows = plot_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    const new_surface_rows = surface_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"lines\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.inc, props.dot]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        showlegend: false,\r\n        hovermode: \"closest\",\r\n        width: size * 0.37,\r\n        height: size * 0.37,\r\n        margin: {\r\n          l: 60,\r\n          r: 15,\r\n          b: 35,\r\n          t: 15,\r\n        },\r\n        xaxis: {\r\n          title: `Altitude (km), Inclination=${props.inc} deg`,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n        yaxis: {\r\n          title: props.yAxisLabel,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n      }}\r\n      onHover={(e: any) => (e.event.target.style.cursor = \"pointer\")}\r\n      onUnhover={(e: any) => (e.event.target.style.cursor = \"crosshair\")}\r\n      onClick={(e) => props.onClick(e)}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TwoViewSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport { useWindowSize } from '../../../../utils/util';\r\n\r\nfunction ThreeViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const size: any = useWindowSize();\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, 'altitude'),\r\n          y: unpack(plot_rows, 'inclination'),\r\n          z: unpack(plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'rgb(23, 190, 207)',\r\n            size: 2\r\n          }\r\n        },\r\n        {\r\n          x: unpack(surface_rows, 'altitude'),\r\n          y: unpack(surface_rows, 'inclination'),\r\n          z: unpack(surface_rows, 'value'),\r\n          name: 'Model surface',\r\n          opacity: 0.3,\r\n          type: 'mesh3d',\r\n          color: 'rgb(252, 154, 7)'\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === false && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, 'altitude'),\r\n          y: unpack(plot_rows, 'inclination'),\r\n          z: unpack(plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'rgb(23, 190, 207)',\r\n            size: 2\r\n          }\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === true && checked.show_scatter === false) {\r\n      configData = [\r\n        {\r\n          x: unpack(surface_rows, 'altitude'),\r\n          y: unpack(surface_rows, 'inclination'),\r\n          z: unpack(surface_rows, 'value'),\r\n          name: 'Model surface',\r\n          opacity: 0.3,\r\n          type: 'mesh3d',\r\n          color: 'rgb(252, 154, 7)'\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === false && checked.show_scatter === false) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          type: 'mesh3d'\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          mode: 'markers',\r\n          type: 'scatter3d'\r\n        },\r\n        {\r\n          x: [parseFloat(props.alt)],\r\n          y: [parseFloat(props.inc)],\r\n          z: [parseFloat(props.value)],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.reset, props.alt, props.inc, props.value]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        width: size * 0.37,\r\n        height: size * 0.37,\r\n        margin: {\r\n          l: 0,\r\n          r: 0,\r\n          b: 0,\r\n          t: 0\r\n        },\r\n        scene: {\r\n          aspectratio: {\r\n            x: 0.6,\r\n            y: 0.6,\r\n            z: 0.6\r\n          },\r\n          camera: {\r\n            center: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 0\r\n            },\r\n            eye: {\r\n              x: 0.9,\r\n              y: 0.9,\r\n              z: 0.9\r\n            },\r\n            up: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 1\r\n            }\r\n          },\r\n          xaxis: {\r\n            title: 'Altitude (km)',\r\n            type: 'linear',\r\n            range: [Math.max(...unpack(surface_rows, 'altitude')), 0],\r\n            zeroline: false\r\n          },\r\n          yaxis: {\r\n            title: 'Inclination (deg)',\r\n            type: 'linear',\r\n            range: [90, 0],\r\n            zeroline: false\r\n          },\r\n          zaxis: {\r\n            title: props.zAxisLabel,\r\n            type: 'linear',\r\n            range: [\r\n              Math.min(...unpack(surface_rows, 'value')),\r\n              Math.max(...unpack(surface_rows, 'value'))\r\n            ],\r\n            zeroline: false\r\n          }\r\n        },\r\n        showlegend: false\r\n      }}\r\n      onClick={(e) => props.onClick(e)}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThreeViewSection;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\n\r\nfunction MinusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={() => props.onSelected(props.id)}>\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MinusAddon;\r\n","interface MenuSubAttribute {\r\n  id: number;\r\n  dataset: string;\r\n  name: string;\r\n}\r\ninterface MenuSelecter {\r\n  [key: string]: Array<MenuSubAttribute>;\r\n}\r\ninterface DashParams {\r\n  [key: string]: number;\r\n}\r\n\r\nexport const MENU_ITEMS: MenuSelecter = {\r\n  as_needed_handoff: [\r\n    { id: 0, dataset: \"coverage\", name: \"Key Metrics\" },\r\n    { id: 1, dataset: \"coverage\", name: \"Running Average\" },\r\n    { id: 2, dataset: \"coverage_histogram\", name: \"Distribution\" },\r\n    { id: 3, dataset: \"coverage_histogram\", name: \"Statistics Chart\" },\r\n  ],\r\n  maximum_powee_handoff: [\r\n    { id: 0, dataset: \"gap\", name: \"Key Metrics\" },\r\n    { id: 1, dataset: \"gap\", name: \"Running Average\" },\r\n    { id: 2, dataset: \"gap_histogram\", name: \"Distribution\" },\r\n    { id: 3, dataset: \"gap_histogram\", name: \"Statistics Chart\" },\r\n  ],\r\n};\r\n\r\nexport const INIT_PARAMS: DashParams = {\r\n  altitude: 300,\r\n  availabilityThreshold: 0.999,\r\n  dataVolumeNeed: 0.1,\r\n  gapThreshold: 6,\r\n  inclination: 0,\r\n  latitude: 30,\r\n  launchYear: 2030,\r\n  longitude: 30,\r\n  navAccuracyNeed: 20,\r\n  powerAmplifier: 1,\r\n  value: 100,\r\n};\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\nimport * as Constants from \"../../constants\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nfunction Selection(props: any) {\r\n  return (\r\n    <Menu\r\n      anchorEl={props.anchorEl}\r\n      keepMounted\r\n      open={Boolean(props.anchorEl)}\r\n      onClose={() => props.onAnchorEl(null)}\r\n    >\r\n      {Constants.MENU_ITEMS[\"as_needed_handoff\"].map((el: any) => (\r\n        <MenuItem\r\n          id={el.id}\r\n          key={el.id}\r\n          onClick={() => props.onSelected(el.id)}\r\n          style={{ backgroundColor: props.selected.includes(el.id) ? grey[300] : \"\" }}\r\n        >\r\n          {el.name}\r\n        </MenuItem>\r\n      ))}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport { Grid, IconButton, Divider } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Selection from \"../Select\";\r\n\r\nfunction PlusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={(e) => props.onAnchorEl(e.currentTarget)}>\r\n            <AddCircleOutlineIcon />\r\n          </IconButton>\r\n          <Selection\r\n            selected={props.selected}\r\n            anchorEl={props.anchorEl}\r\n            onAnchorEl={(value: any) => props.onAnchorEl(value)}\r\n            onSelected={(value: any) => props.onSelected(value)}\r\n          />\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PlusAddon;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\n\r\nimport LineChartSection from \"../../../../chart-panel/line-chart-section\";\r\nimport HistogramChartSection from \"../../../../chart-panel/histogram-chart-section\";\r\nimport BoxChartSection from \"../../../../chart-panel/box-chart-section\";\r\n\r\nfunction createData(name: String, value: String) {\r\n  return { name, value };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Average (sec)\", \"xx\"),\r\n  createData(\"Time-Averaged Gap\", \"xx\"),\r\n  createData(\"Median (sec)\", \"xx\"),\r\n  createData(\"Maximum (minutes)\", \"xx\"),\r\n  createData(\"Minimum (sec)\", \"xx\"),\r\n  createData(\"Average # Gaps Per Orbit\", \"xx\"),\r\n  createData(\"Average # Gaps Per Day\", \"xx\"),\r\n];\r\n\r\nfunction SelectedChartSection(props: any) {\r\n  return (\r\n    <>\r\n      {props.id === 0 && (\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={10} style={{ textAlign: \"center\" }}>\r\n            <Typography variant=\"h6\">{`Key Metrics`}</Typography>\r\n          </Grid>\r\n          <Grid item md={10}>\r\n            <Table aria-label=\"simple table\" size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{`Gap Statistic`}</TableCell>\r\n                  <TableCell>{`Value`}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row: any) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell>{row.value}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {props.id === 1 && (\r\n        <LineChartSection source={props.data} dataType={props.dataType} />\r\n      )}\r\n      {props.id === 2 && <HistogramChartSection {...props.data} />}\r\n      {props.id === 3 && <BoxChartSection {...props.data} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectedChartSection;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Card, CardContent } from \"@material-ui/core\";\r\n\r\nimport MinusAddon from \"../../../../components/Button/MinusAddon\";\r\nimport PlusAddon from \"../../../../components/Button/PlusAddon\";\r\nimport SelectedChartSection from \"./selected-chart-section\";\r\nimport * as Constants from \"../../../../constants\";\r\n\r\nfunction ChartsLibsSection(props: any) {\r\n  const [selected, setSelected] = useState([1, 2, 3] as any);\r\n  const [anchorEl, setAnchorEl] = useState(null as any);\r\n\r\n  const handleSelected = (id: any, type: string) => {\r\n    if (!selected.includes(id) && type === \"add\") {\r\n      setSelected((prevState: any) => [...prevState, id]);\r\n    } else if (type === \"remove\") {\r\n      setSelected(selected.filter((item: any) => item !== id));\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selected.length === 0 && (\r\n        <PlusAddon\r\n          type={0}\r\n          selected={selected}\r\n          anchorEl={anchorEl}\r\n          onAnchorEl={(value: any) => setAnchorEl(value)}\r\n          onSelected={(value: any) => handleSelected(value, \"add\")}\r\n        />\r\n      )}\r\n      {selected.map((item: any, idx: number) => {\r\n        let dset = Constants.MENU_ITEMS[props.dataSet][item].dataset;\r\n        return (\r\n          <React.Fragment key={item}>\r\n            <MinusAddon\r\n              id={item}\r\n              type={0}\r\n              selected={selected}\r\n              anchorEl={anchorEl}\r\n              onAnchorEl={(value: any) => setAnchorEl(value)}\r\n              onSelected={(value: any) => handleSelected(value, \"remove\")}\r\n            />\r\n            <Grid item md={12}>\r\n              <Card style={{ marginLeft: \"2.5rem\", marginRight: \"2.5rem\" }}>\r\n                <CardContent>\r\n                  {props.traces[dset] &&\r\n                    Object.keys(props.traces[dset]).length > 0 && (\r\n                      <SelectedChartSection\r\n                        id={item}\r\n                        data={props.traces[dset]}\r\n                        dataType={props.dataType}\r\n                      />\r\n                    )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            {idx === selected.length - 1 && (\r\n              <PlusAddon\r\n                type={0}\r\n                selected={selected}\r\n                anchorEl={anchorEl}\r\n                onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                onSelected={(value: any) => handleSelected(value, \"add\")}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartsLibsSection;\r\n","import React, { useState } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nfunction OptionAddon (props: any) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n      <Grid item md={4}>\r\n        <Typography\r\n          component=\"p\"\r\n          style={{\r\n            textAlign: \"end\",\r\n            position: \"absolute\",\r\n            left: 10,\r\n            top: 10,\r\n          }}\r\n        >\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            className=\"mt-2 mb-2\"\r\n            style={{ fontSize: 11 }}\r\n          >\r\n            {`Graph Options`}\r\n            {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          </IconButton>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item md={6} />\r\n      {props.isDash && (\r\n        <Grid item md={1}>\r\n          <IconButton\r\n            style={{\r\n              padding: 0,\r\n              position: \"absolute\",\r\n              right: 10,\r\n              top: 10,\r\n            }}\r\n            onClick={() => props.onChart()}\r\n          >\r\n            <LaunchIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            style={{\r\n              padding: 0,\r\n              position: \"absolute\",\r\n              right: 50,\r\n              top: 12,\r\n            }}\r\n          >\r\n            <CSVLink\r\n              data={props.source.plot_value}\r\n              filename={`Plot-${Date.now()}.csv`}\r\n              className=\"btn btn-primary\"\r\n              target=\"_blank\"\r\n            >\r\n              <Typography component=\"p\" variant=\"body2\">\r\n                {\"csv\"}\r\n              </Typography>\r\n            </CSVLink>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n      {isOpen && (\r\n        <Grid item md={11}>\r\n          <Box\r\n            borderColor=\"primary.main\"\r\n            border={2}\r\n            borderRadius={5}\r\n            padding={2}\r\n          >\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n              <Grid item md={3}>\r\n                <Grid\r\n                  container\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item md={5}>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"2d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        backgroundColor:\r\n                          props.viewMethod !== \"3d_view\"\r\n                            ? grey[300]\r\n                            : \"inherit\",\r\n                      }}\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                      fullWidth\r\n                    >\r\n                      {\"2D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={7} />\r\n                  <Grid item md={5}>\r\n                    <Button\r\n                      name=\"3d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        backgroundColor:\r\n                          props.viewMethod === \"3d_view\"\r\n                            ? grey[300]\r\n                            : \"inherit\",\r\n                      }}\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                      fullWidth\r\n                    >\r\n                      {\"3D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={7} />\r\n                </Grid>\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={5} style={{ marginRight: 15 }}>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  className={classes.formControl}\r\n                  fullWidth\r\n                >\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">{`Inclination`}</InputLabel>\r\n                  <Select\r\n                    labelId=\"inclination-label\"\r\n                    id=\"inclination-label\"\r\n                    value={props.inc}\r\n                    onChange={(e) => props.onInc(e.target.value)}\r\n                    label=\"Inclination\"\r\n                    defaultValue=\"\"\r\n                    disabled={props.viewMethod === \"3d_view\"}\r\n                  >\r\n                    <MenuItem value=\"\" disabled>\r\n                      <em>{`None`}</em>\r\n                    </MenuItem>\r\n                    {props.incs.map((item: number) => (\r\n                      <MenuItem key={`inclination-${item}`} value={item}>\r\n                        {item}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={3}>\r\n                <Tooltip\r\n                  title={\r\n                    <Typography\r\n                      gutterBottom\r\n                      component=\"p\"\r\n                      variant=\"body1\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: \"Reset 3D plot\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  placement=\"top-start\"\r\n                  classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                  <span>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"Reset\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled={props.viewMethod === \"2d_view\" ? true : false}\r\n                      onClick={() => props.resetPlot()}\r\n                      fullWidth\r\n                    >\r\n                      {\"Reset\"}\r\n                    </Button>\r\n                  </span>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OptionAddon;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Card,\r\n  CardContent\r\n} from '@material-ui/core';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\nimport TwoViewSection from './two-view-section';\r\nimport ThreeViewSection from './three-view-section';\r\nimport ChartsLibsSection from './charts-libs-section';\r\nimport OptionAddon from '../../../components/Button/OptionAddon';\r\nimport { getItems, getSystems, getSystemVersion, getFileId } from '../../../API';\r\nimport useStyles from '../../../utils/styles';\r\n\r\nconst INIT_CHECK_STATUS = {\r\n  show_surface: true,\r\n  show_scatter: true\r\n};\r\n\r\nconst INIT_FILE_ID = [{ id: 1620 }, { id: 1729 }];\r\n\r\nfunction AnalyzeRegressionSection(props: any) {\r\n  const [viewMethod, setViewMethod] = useState('2d_view');\r\n  const [dataSet, setDataSet] = useState('as_needed_handoff' as any);\r\n  const [systems, setSystems] = useState([] as any);\r\n  const [versions, setVersions] = useState([] as any);\r\n  const [dot, setDot] = useState({ x: props.alt, y: props.value } as any);\r\n  const [fileId, setFileId] = useState(INIT_FILE_ID);\r\n  const [checked, setChecked] = useState(INIT_CHECK_STATUS);\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [reset, setReset] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n  const classes = useStyles();\r\n  const plot_rows = props.data.plot_value;\r\n  const surface_rows: Array<any> = [];\r\n  const zAxisLabel = props.data.label;\r\n\r\n  useEffect(() => {\r\n    if (fileId.length > 0)\r\n      getItems({\r\n        dataType: props.dataType,\r\n        fileId: fileId,\r\n        version: props.version\r\n      })\r\n        .then((res) => {\r\n          Object.keys(res.data).forEach((el) => {\r\n            let ctype: String = res.data[el]['type'];\r\n            let gaps: Array<any> = [];\r\n            let durations: Array<any> = [];\r\n            let avgs: Array<any> = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === 'line') {\r\n              res.data[el]['data'].forEach((item: Array<any>, idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[0]);\r\n                avgs.push(item[1]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: res.data[el]['title']\r\n                }\r\n              }));\r\n            } else if (ctype === 'histogram') {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: res.data[el]['data'],\r\n                  type: ctype,\r\n                  title: res.data[el]['title']\r\n                }\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n  }, [props.dataType, props.version, fileId]);\r\n\r\n  useEffect(() => {\r\n    getSystems()\r\n      .then((res: any) => setSystems(res.data))\r\n      .catch((err: any) => setSystems([]));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.inclination !== '') {\r\n      const params = {\r\n        user_altitude: dot.x,\r\n        user_inclination: props.inclination,\r\n        system: props.system,\r\n        version: props.version\r\n      };\r\n\r\n      getFileId(params)\r\n        .then((res: any) => setFileId(res.data))\r\n        .catch((err: any) => setFileId([]));\r\n    }\r\n  }, [props.inclination, dot, props.system, props.version]);\r\n\r\n  useEffect(() => {\r\n    setDot({\r\n      x: props.data.plot_value[0].altitude,\r\n      y: props.data.plot_value[0].value\r\n    });\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    if (props.system !== '') {\r\n      getSystemVersion({ system: props.system })\r\n        .then((res: any) => setVersions(res.data))\r\n        .catch((err: any) => setVersions([]));\r\n    }\r\n  }, [props.system]);\r\n\r\n  const handleCheck = (event: any) => {\r\n    const { name, checked } = event.currentTarget;\r\n    setChecked((prevState) => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const handleDataSetClick = (event: any) => {\r\n    event.preventDefault();\r\n    const { id, name } = event.currentTarget;\r\n\r\n    setDataSet(id);\r\n    props.onDataType(name);\r\n  };\r\n\r\n  const handleClick = (event: any) => {\r\n    if (event) {\r\n      const params = {\r\n        user_altitude: event.points[0].x,\r\n        user_inclination: props.inc,\r\n        system: props.system,\r\n        version: props.version\r\n      };\r\n\r\n      setDot({ x: event.points[0].x, y: event.points[0].y });\r\n      getFileId(params)\r\n        .then((res: any) => setFileId(res.data))\r\n        .catch((err: any) => setFileId([]));\r\n    }\r\n    setSelected(true);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n      <Grid item md={12}>\r\n        <Grid\r\n          container\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          style={{\r\n            backgroundColor: grey[300],\r\n            minHeight: '10vh'\r\n          }}\r\n        >\r\n          <Grid item md={5} style={{ marginLeft: 15 }}>\r\n            <ToggleButtonGroup value={dataSet} onChange={handleDataSetClick}>\r\n              <ToggleButton\r\n                id=\"as_needed_handoff\"\r\n                name=\"coverage\"\r\n                value=\"as_needed_handoff\"\r\n                size=\"small\"\r\n              >\r\n                {`RF Coverage (%)`}\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                id=\"maximum_powee_handoff\"\r\n                name=\"gap\"\r\n                value=\"maximum_powee_handoff\"\r\n                size=\"small\"\r\n              >\r\n                {`No Coverage (%)`}\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </Grid>\r\n          <Grid item md={3} style={{ marginLeft: '15px' }}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              fullWidth\r\n              disabled={viewMethod === '3d_view'}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{`System`}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={props.system}\r\n                onChange={(e) => props.onSystem(e.target.value)}\r\n                defaultValue=\"\"\r\n                label=\"System\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {systems.map((item: any) => (\r\n                  <MenuItem key={item.system_name} value={item.system_id}>\r\n                    {item.system_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              fullWidth\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{`Version`}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={props.version}\r\n                onChange={(e) => props.onVersion(e.target.value)}\r\n                defaultValue=\"\"\r\n                label=\"Version\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {versions.map((item: any) => (\r\n                  <MenuItem key={`version_${item.versions}`} value={item.versions}>\r\n                    {item.versions}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item md={12} style={{ textAlign: 'center', position: 'relative' }}>\r\n        <Typography variant=\"h6\">\r\n          {dataSet === 'as_needed_handoff'\r\n            ? `RF Coverage (%) vs. User Inclination`\r\n            : `No Coverage (%) vs. User Inclination`}\r\n        </Typography>\r\n        <OptionAddon\r\n          source={props.data}\r\n          checked={checked}\r\n          viewMethod={viewMethod}\r\n          inc={props.inclination}\r\n          incs={props.incs}\r\n          isDash={false}\r\n          onInc={(value: any) => props.onInc(value)}\r\n          onChecked={handleCheck}\r\n          resetPlot={() => setReset(!reset)}\r\n          onViewMethod={(e: any) => setViewMethod(e.currentTarget.name)}\r\n        />\r\n      </Grid>\r\n\r\n      {/* FIXME: check at the process of cart integration.\r\n      <Grid item md={12} style={{ zIndex: 1000 }}>\r\n        <MathJax.Provider>\r\n          <MathJax.Node formula={props.text} />\r\n        </MathJax.Provider>\r\n      </Grid> */}\r\n\r\n      <Grid item md={12}>\r\n        <Card style={{ marginLeft: '2.5rem', marginRight: '2.5rem' }}>\r\n          <CardContent>\r\n            {viewMethod === '3d_view' ? (\r\n              <Grid item md={12}>\r\n                <ThreeViewSection\r\n                  data={props.source}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                  value={props.value}\r\n                  reset={reset}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={props.source.plot_value}\r\n                  surface_rows={surface_rows}\r\n                  zAxisLabel={zAxisLabel}\r\n                  checked={checked}\r\n                  onClick={handleClick}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              <Grid item md={12}>\r\n                <TwoViewSection\r\n                  data={props.data}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                  value={props.value}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={plot_rows}\r\n                  surface_rows={surface_rows}\r\n                  yAxisLabel={zAxisLabel}\r\n                  dot={dot}\r\n                  checked={checked}\r\n                  onClick={handleClick}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      {selected && <></>}\r\n      {Object.keys(traces).length > 0 && (\r\n        <ChartsLibsSection traces={traces} dataSet={dataSet} dataType={props.dataType} />\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AnalyzeRegressionSection;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CssBaseline,\r\n  Slide,\r\n  Typography,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nimport { getCartItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport AnalyzeRegressionSection from \"./analyze-regression-section\";\r\n\r\nconst INIT_PARAMS = {\r\n  altitude: 300,\r\n  availabilityThreshold: 0.999,\r\n  dataVolumeNeed: 0.1,\r\n  gapThreshold: 6,\r\n  inclination: 0,\r\n  latitude: 30,\r\n  launchYear: 2030,\r\n  longitude: 30,\r\n  navAccuracyNeed: 20,\r\n  powerAmplifier: 1,\r\n  value: 100,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction CartPanel(props: any) {\r\n  const [source, setSource] = useState({} as any);\r\n  const [dataSource, setDataSource] = useState({} as any);\r\n  const [system, setSystem] = useState(5 as any);\r\n  const [version, setVersion] = useState(3 as any);\r\n  const [inclination, setInclination] = useState(\"\");\r\n  const [incs, setIncs] = useState([] as any);\r\n  const [dataType, setDataType] = useState(\"coverage\" as any);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [maxAltitude, setMaxAltitude] = useState(0);\r\n  const [text, setText] = useState(\"\");\r\n  const deepDive = \"system1/coverage\";\r\n  const metric = deepDive.split(\"/\")[1];\r\n  const missionType = \"orbital\";\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setText(\"\");\r\n    getCartItems({\r\n      type: missionType,\r\n      system: system,\r\n      version: version,\r\n      dataType,\r\n    })\r\n      .then((res: any) => {\r\n        setSource(res.data.data);\r\n        setDataSource(res.data.data);\r\n        setMaxAltitude(res.data.maxAltitude);\r\n        setText(res.data.text);\r\n\r\n        // TODO: active when used\r\n        // setTerrestrial(res.data.terrestrial);\r\n        // setCoefficients(res.data.coefficients);\r\n\r\n        if (Object.keys(res.data.data).includes(\"plot_value\")) {\r\n          let tmp = res.data.data.plot_value.map(\r\n            (item: any) => item[\"inclination\"]\r\n          );\r\n          let uniqueArray: Array<any> = [...new Set(tmp)];\r\n          setIncs(uniqueArray.sort());\r\n        }\r\n\r\n        // FIXME: there is no real data for it.\r\n        //\r\n        // setText(\r\n        //   props.equationsTex[system.replace(\" \", \"_\").toLowerCase()][metric](\r\n        //     data[\"coefficients\"][metric]\r\n        //   )\r\n        // );\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [system, version, dataType]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataSource).includes(\"plot_value\")) {\r\n      let data = dataSource.plot_value.filter(\r\n        (item: any) => item.inclination === inclination\r\n      );\r\n      setSource((prevState: any) => ({ ...prevState, plot_value: data }));\r\n    }\r\n  }, [inclination, dataSource]);\r\n\r\n  const equation = (inc: any, alt: any, metric: string) => {\r\n    // FIXME: activate in integration of cart.\r\n    //\r\n    // const altitude = parseFloat(alt);\r\n    // const inclination = parseFloat(inc);\r\n\r\n    // const coefs = coefficients[metric];\r\n    // const eqn = props.equations[system.replace(\" \", \"_\").toLowerCase()][metric];\r\n\r\n    // return eqn(coefs, altitude, inclination);\r\n    return inc;\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      onClose={() => props.onClose()}\r\n      classes={{ paper: classes.dialogDeep }}\r\n    >\r\n      <CssBaseline />\r\n      <MuiDialogTitle>\r\n        <Typography component=\"strong\" variant=\"h6\">\r\n          {\"Cart Integration Panel\"}\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"Close\"\r\n          className={classes.dialogCloseBtn}\r\n          onClick={() => props.onClose()}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </MuiDialogTitle>\r\n      <DialogContent\r\n        dividers={true}\r\n        style={{ paddingRight: 0, paddingLeft: 0, overflowX: \"hidden\" }}\r\n      >\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={12}>\r\n            {!isLoading &&\r\n              (missionType === \"orbital\" ? (\r\n                <AnalyzeRegressionSection\r\n                  equation={(x: any, y: any, m: any) => equation(x, y, m)}\r\n                  maxAltitude={maxAltitude}\r\n                  alt={INIT_PARAMS.altitude}\r\n                  inc={INIT_PARAMS.inclination}\r\n                  value={INIT_PARAMS.value}\r\n                  data={source}\r\n                  source={dataSource}\r\n                  dataType={dataType}\r\n                  selectedItem={metric}\r\n                  text={text}\r\n                  system={system}\r\n                  version={version}\r\n                  inclination={inclination}\r\n                  incs={incs}\r\n                  onInc={(value: any) => setInclination(value)}\r\n                  onSystem={(value: any) => setSystem(value)}\r\n                  onVersion={(value: any) => setVersion(value)}\r\n                  onDataType={(value: any) => setDataType(value)}\r\n                />\r\n              ) : (\r\n                <></>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default CartPanel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  CssBaseline,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Tab,\r\n  Tabs,\r\n  AppBar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { getItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport LineChartSection from \"./line-chart-section\";\r\nimport HistogramChartSection from \"./histogram-chart-section\";\r\nimport BoxChartSection from \"./box-chart-section\";\r\nimport TerrestrialHeatMap from \"./terrestrial-heatmap-chart\";\r\nimport CartPanel from \"../cart-panel\";\r\n\r\nconst INIT_MENUS = [\r\n  { id: \"as_needed_handoff\", name: \"Power below threshold handoff\" },\r\n  { id: \"maximum_powee_handoff\", name: \"Maximum power immediate handoff\" },\r\n];\r\n\r\nconst TabPanel = (props: any) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction ChartPanel() {\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selected, setSelected] = useState(\"none\");\r\n  const [tab, setTab] = useState(0);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (selected !== \"none\")\r\n      getItems(selected)\r\n        .then((res) => {\r\n          Object.keys(res.data).forEach((el) => {\r\n            let ctype: string = res.data[el][\"type\"];\r\n            let gaps: Array<any> = [];\r\n            let durations: Array<any> = [];\r\n            let avgs: Array<any> = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === \"line\") {\r\n              res.data[el][\"data\"].forEach((item: Array<any>, idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[0]);\r\n                avgs.push(item[1]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            } else if (ctype === \"histogram\") {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: res.data[el][\"data\"],\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n  }, [selected]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Container component=\"main\" maxWidth=\"lg\">\r\n          <CssBaseline />\r\n          <Card className={classes.chartCard}>\r\n            <CardHeader\r\n              title={\r\n                <Typography component=\"h1\" variant=\"h5\" className=\"m-3\">\r\n                  {`CART Data Statistics Dashboard (Prototype)`}\r\n                </Typography>\r\n              }\r\n              action={\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setIsOpen(true)}\r\n                >\r\n                  {\"Open Chart\"}\r\n                </Button>\r\n              }\r\n            />\r\n            <CardContent className=\"ml-3 mr-3\">\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={tab}\r\n                  onChange={(e, val) => setTab(val)}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"fullWidth\"\r\n                  aria-label=\"full width tabs example\"\r\n                >\r\n                  <Tab label=\"Data Statistics Dashboard\" {...a11yProps(0)} />\r\n                  <Tab label=\"Heat Map\" {...a11yProps(1)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews\r\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={tab}\r\n                onChangeIndex={(index: any) => setTab(index)}\r\n              >\r\n                <TabPanel value={tab} index={0}>\r\n                  <Grid\r\n                    container\r\n                    spacing={3}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item md={4}>\r\n                      <Select\r\n                        name=\"\"\r\n                        value={selected}\r\n                        onChange={(e: any) => setSelected(e.target.value)}\r\n                        className={classes.searchSelect}\r\n                        style={selected === \"none\" ? { color: grey[500] } : {}}\r\n                        defaultValue=\"\"\r\n                        fullWidth\r\n                      >\r\n                        <MenuItem\r\n                          value=\"none\"\r\n                          style={{ opacity: 0.87 }}\r\n                          disabled\r\n                        >\r\n                          {\"Select Data Set…\"}\r\n                        </MenuItem>\r\n                        {INIT_MENUS.map((item) => (\r\n                          <MenuItem value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    <Grid item md={8}></Grid>\r\n                    {Object.keys(traces).map((item) => (\r\n                      <Grid item md={6} key={item}>\r\n                        <Grid container spacing={3}>\r\n                          {traces[item].type === \"line\" && (\r\n                            <Grid item md={12}>\r\n                              <LineChartSection\r\n                                source={traces[item]}\r\n                                dataType={`coverage`}\r\n                              />\r\n                            </Grid>\r\n                          )}\r\n                          {traces[item].type === \"histogram\" && (\r\n                            <>\r\n                              <Grid item md={12}>\r\n                                <HistogramChartSection {...traces[item]} />\r\n                              </Grid>\r\n                              <Grid item md={12}>\r\n                                <BoxChartSection {...traces[item]} />\r\n                              </Grid>\r\n                            </>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                  <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item md={12}>\r\n                      <TerrestrialHeatMap />\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </Grid>\r\n      <CartPanel isOpen={isOpen} onClose={() => setIsOpen(false)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst TwoViewSection: React.FC<any> = (props: any) => {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => rows.map((row: any) => row[key]);\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    const inclination = parseInt(props.inc);\r\n    const new_plot_rows = plot_rows.filter((row: any) => row.inclination === inclination);\r\n    const new_surface_rows = surface_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, 'altitude'),\r\n          y: unpack(new_plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          color: 'rgb(23, 190, 207)'\r\n        },\r\n        {\r\n          x: unpack(new_surface_rows, 'altitude'),\r\n          y: unpack(new_surface_rows, 'value'),\r\n          name: 'Model curve',\r\n          mode: 'lines',\r\n          line: {\r\n            color: 'rgb(252, 154, 7)'\r\n          }\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          marker: {\r\n            color: 'red',\r\n            size: 10\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === false && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, 'altitude'),\r\n          y: unpack(new_plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          color: 'rgb(23, 190, 207)'\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: 'markers',\r\n          type: 'scatter'\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          marker: {\r\n            color: 'red',\r\n            size: 10\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === true && checked.show_scatter === false) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_surface_rows, 'altitude'),\r\n          y: unpack(new_surface_rows, 'value'),\r\n          name: 'Model curve',\r\n          mode: 'lines',\r\n          line: {\r\n            color: 'rgb(252, 154, 7)'\r\n          }\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: 'markers',\r\n          type: 'scatter'\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          marker: {\r\n            color: 'red',\r\n            size: 10\r\n          }\r\n        }\r\n      ];\r\n    } else if (checked.show_surface === false && checked.show_scatter === false) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: 'lines'\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: 'markers',\r\n          type: 'scatter'\r\n        },\r\n        {\r\n          x: [props.dot.x],\r\n          y: [props.dot.y],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter',\r\n          marker: {\r\n            color: 'red',\r\n            size: 10\r\n          }\r\n        }\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.inc, props.dot]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        showlegend: false,\r\n        hovermode: 'closest',\r\n        width: props.isChart\r\n          ? parseFloat(props.size.width.replace('px', '')) * 0.55\r\n          : parseFloat(props.size.width.replace('px', '')) * 0.4,\r\n        height: props.isChart\r\n          ? parseFloat(props.size.height.replace('px', '')) * 0.55\r\n          : parseFloat(props.size.height.replace('px', '')) * 0.3,\r\n        margin: {\r\n          l: 60,\r\n          r: 15,\r\n          b: 35,\r\n          t: 15\r\n        },\r\n        xaxis: {\r\n          title: `Altitude ${props.alt}(km), Inclination=${props.inc} deg`,\r\n          type: 'linear',\r\n          zeroline: false\r\n        },\r\n        yaxis: {\r\n          title: props.yAxisLabel,\r\n          type: 'linear',\r\n          zeroline: false\r\n        }\r\n      }}\r\n      onHover={(e: any) => (e.event.target.style.cursor = 'pointer')}\r\n      onUnhover={(e: any) => (e.event.target.style.cursor = 'crosshair')}\r\n      onClick={(e) => props.onClick(e)}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TwoViewSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst ThreeViewSection: React.FC<any> = (props: any) => {\r\n  const [config, setConfig] = useState([]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    if (props.checked.show_surface === true && props.checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(props.plot_rows, 'altitude'),\r\n          y: unpack(props.plot_rows, 'inclination'),\r\n          z: unpack(props.plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'rgb(23, 190, 207)',\r\n            size: 2\r\n          }\r\n        },\r\n        {\r\n          x: unpack(props.surface_rows, 'altitude'),\r\n          y: unpack(props.surface_rows, 'inclination'),\r\n          z: unpack(props.surface_rows, 'value'),\r\n          name: 'Model surface',\r\n          opacity: 0.3,\r\n          type: 'mesh3d',\r\n          color: 'rgb(252, 154, 7)'\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (\r\n      props.checked.show_surface === false &&\r\n      props.checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(props.plot_rows, 'altitude'),\r\n          y: unpack(props.plot_rows, 'inclination'),\r\n          z: unpack(props.plot_rows, 'value'),\r\n          name: 'Model data',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'rgb(23, 190, 207)',\r\n            size: 2\r\n          }\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (\r\n      props.checked.show_surface === true &&\r\n      props.checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(props.surface_rows, 'altitude'),\r\n          y: unpack(props.surface_rows, 'inclination'),\r\n          z: unpack(props.surface_rows, 'value'),\r\n          name: 'Model surface',\r\n          opacity: 0.3,\r\n          type: 'mesh3d',\r\n          color: 'rgb(252, 154, 7)'\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    } else if (\r\n      props.checked.show_surface === false &&\r\n      props.checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          type: 'mesh3d'\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          mode: 'markers',\r\n          type: 'scatter3d'\r\n        },\r\n        {\r\n          x: [parseFloat(props.alt)],\r\n          y: [parseFloat(props.inc)],\r\n          z: [parseFloat(props.value)],\r\n          name: 'User',\r\n          mode: 'markers',\r\n          type: 'scatter3d',\r\n          opacity: 1,\r\n          marker: {\r\n            color: 'red',\r\n            size: 5\r\n          }\r\n        }\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [\r\n    props.checked,\r\n    props.plot_rows,\r\n    props.surface_rows,\r\n    props.reset,\r\n    props.alt,\r\n    props.inc,\r\n    props.value\r\n  ]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        width: props.isChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.55\r\n          : Number(props.size.width.replace('px', '')) * 0.4,\r\n        height: props.isChart\r\n          ? Number(props.size.height.replace('px', '')) * 0.4\r\n          : Number(props.size.height.replace('px', '')) * 0.3,\r\n        margin: {\r\n          l: 0,\r\n          r: 0,\r\n          b: 0,\r\n          t: 0\r\n        },\r\n        scene: {\r\n          aspectratio: {\r\n            x: 0.6,\r\n            y: 0.6,\r\n            z: 0.6\r\n          },\r\n          camera: {\r\n            center: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 0\r\n            },\r\n            eye: {\r\n              x: 0.9,\r\n              y: 0.9,\r\n              z: 0.9\r\n            },\r\n            up: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 1\r\n            }\r\n          },\r\n          xaxis: {\r\n            title: 'Altitude (km)',\r\n            type: 'linear',\r\n            range: [Math.max(...unpack(props.surface_rows, 'altitude')), 0],\r\n            zeroline: false\r\n          },\r\n          yaxis: {\r\n            title: 'Inclination (deg)',\r\n            type: 'linear',\r\n            range: [90, 0],\r\n            zeroline: false\r\n          },\r\n          zaxis: {\r\n            title: props.zAxisLabel,\r\n            type: 'linear',\r\n            range: [\r\n              Math.min(...unpack(props.surface_rows, 'value')),\r\n              Math.max(...unpack(props.surface_rows, 'value'))\r\n            ],\r\n            zeroline: false\r\n          }\r\n        },\r\n        showlegend: false\r\n      }}\r\n      onClick={(e) => props.onClick(e)}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ThreeViewSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport Selection from \"../Select\";\r\n\r\ninterface IDataSource {\r\n  xTrace: number;\r\n  yTrace?: number;\r\n  avgTrace?: number;\r\n}\r\n\r\nconst DashAddon: React.FC<any> = (props: any) => {\r\n  const [dataSource, setDataSource] = useState<IDataSource[]>([]);\r\n  const [title, setTitle] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.source) {\r\n      let data: Array<any> = [];\r\n      let csvTitle: string = props.source.title.split(\" \").join(\"-\");\r\n\r\n      if (props.source.type === \"line\") {\r\n        data = props.source.xTraces.map((item: number, idx: number) => {\r\n          return {\r\n            xTrace: item,\r\n            yTrace: props.source.yTraces[idx],\r\n            avgTrace: props.source.avgTraces[idx],\r\n          };\r\n        });\r\n      } else {\r\n        data = props.source.xTraces.map((item: number) => {\r\n          return {\r\n            xTrace: item,\r\n          };\r\n        });\r\n      }\r\n      setTitle(csvTitle);\r\n      setDataSource(data);\r\n    }\r\n  }, [props.source]);\r\n\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid\r\n        container\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        <Grid item md={1}>\r\n          <IconButton\r\n            id={props.index}\r\n            onClick={(e) => {\r\n              props.onAnchorEl(e.currentTarget);\r\n              props.onIndex(e.currentTarget.id);\r\n            }}\r\n            style={{ padding: 0 }}\r\n          >\r\n            <DehazeIcon />\r\n          </IconButton>\r\n          <Selection\r\n            selected={props.selected}\r\n            anchorEl={props.anchorEl}\r\n            onAnchorEl={(value: any) => props.onAnchorEl(value)}\r\n            onSelected={(value: any) => props.onSelected(value)}\r\n          />\r\n        </Grid>\r\n        <Grid item md={10} />\r\n        <Grid item md={1}>\r\n          <IconButton\r\n            style={{\r\n              padding: 0,\r\n              position: \"absolute\",\r\n              right: 0,\r\n              top: 10,\r\n            }}\r\n            onClick={() => props.onSubChart(props.index)}\r\n          >\r\n            <LaunchIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            style={{\r\n              padding: 0,\r\n              position: \"absolute\",\r\n              right: 50,\r\n              top: 12,\r\n            }}\r\n          >\r\n            {props.source && (\r\n              <CSVLink\r\n                data={dataSource}\r\n                filename={`${title}-${Date.now()}.csv`}\r\n                className=\"btn btn-primary\"\r\n                target=\"_blank\"\r\n              >\r\n                <Typography component=\"p\" variant=\"body2\">\r\n                  {\"csv\"}\r\n                </Typography>\r\n              </CSVLink>\r\n            )}\r\n            {!props.source && (\r\n              <Typography component=\"p\" variant=\"body2\">\r\n                {\"csv\"}\r\n              </Typography>\r\n            )}\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DashAddon;\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst LineChartSection: React.FC<any> = (props: any) => {\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.source.xTraces,\r\n          y: props.source.yTraces,\r\n          name: 'Gap Event Duration',\r\n          type: 'scatter',\r\n          mode: 'lines+markers',\r\n          marker: { color: 'red' }\r\n        },\r\n        {\r\n          x: props.source.xTraces,\r\n          y: props.source.avgTraces,\r\n          name: 'Running Average',\r\n          type: 'scatter',\r\n          marker: { color: 'blue' }\r\n        }\r\n      ]}\r\n      layout={{\r\n        title: {\r\n          text: `<b>${props.source.title}</b>`,\r\n          font: {\r\n            family: 'Roboto',\r\n            size: 15\r\n          }\r\n        },\r\n        width: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.52\r\n          : Number(props.size.width.replace('px', '')) * 0.38,\r\n        height: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.33\r\n          : Number(props.size.height.replace('px', '')) * 0.3,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: 'h',\r\n          xanchor: 'center',\r\n          font: {\r\n            family: 'sans-serif',\r\n            size: 12,\r\n            color: '#000'\r\n          }\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        xaxis: {\r\n          title:\r\n            props.dataType === 'coverage' ? 'Coverage Event Number' : 'Gap Event Number',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        yaxis: {\r\n          title:\r\n            props.dataType === 'coverage'\r\n              ? 'Coverage Duration (Sec.)'\r\n              : 'Gap Duration (Sec.)',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        }\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineChartSection;\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst HistogramChartSection: React.FC<any> = (props: any) => {\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.source.xTraces,\r\n          name: 'Duration',\r\n          type: 'histogram'\r\n        }\r\n      ]}\r\n      layout={{\r\n        title: {\r\n          text: `<b>${props.source.title.split('_').join(' ')}</b>`,\r\n          font: {\r\n            family: 'Roboto',\r\n            size: 15\r\n          }\r\n        },\r\n        width: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.56\r\n          : Number(props.size.width.replace('px', '')) * 0.4,\r\n        height: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.33\r\n          : Number(props.size.height.replace('px', '')) * 0.3,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: 'h',\r\n          xanchor: 'center',\r\n          font: {\r\n            family: 'sans-serif',\r\n            size: 12,\r\n            color: '#000'\r\n          }\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        xaxis: {\r\n          title: 'Duration',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        yaxis: {\r\n          title: 'Occurances',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        }\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HistogramChartSection;\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst BoxChartSection: React.FC<any> = (props: any) => {\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          y: props.source.xTraces,\r\n          boxpoints: 'all',\r\n          name: '',\r\n          type: 'box'\r\n        }\r\n      ]}\r\n      layout={{\r\n        title: {\r\n          text: `<b>${props.source.title.split(' ')[0]} Statistics</b>`,\r\n          font: {\r\n            family: 'Roboto',\r\n            size: 15\r\n          }\r\n        },\r\n        width: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.56\r\n          : Number(props.size.width.replace('px', '')) * 0.38,\r\n        height: props.isSubChart\r\n          ? Number(props.size.width.replace('px', '')) * 0.33\r\n          : Number(props.size.height.replace('px', '')) * 0.3,\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        yaxis: {\r\n          title: 'Duration',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        }\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BoxChartSection;\r\n","import React from 'react';\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody\r\n} from '@material-ui/core';\r\nimport LineChartSection from '../line-chart-section';\r\nimport HistogramChartSection from '../histogram-chart-section';\r\nimport BoxChartSection from '../box-chart-section';\r\nimport { useWindowSize } from '../../../../../utils/util';\r\ninterface TRowAttribute {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nconst createData: (name: string, value: string) => TRowAttribute = (\r\n  name: string,\r\n  value: string\r\n) => {\r\n  return { name, value };\r\n};\r\n\r\nconst rows = [\r\n  createData('Average (sec)', 'xx'),\r\n  createData('Time-Averaged Gap', 'xx'),\r\n  createData('Median (sec)', 'xx'),\r\n  createData('Maximum (minutes)', 'xx'),\r\n  createData('Minimum (sec)', 'xx'),\r\n  createData('Average # Gaps Per Orbit', 'xx'),\r\n  createData('Average # Gaps Per Day', 'xx')\r\n];\r\n\r\nconst SelectedChartSection: React.FC<any> = (props: any) => {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <>\r\n      {props.id === 0 && (\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n            height: size.width ? (props.isSubChart ? '100%' : size.width * 0.11) : '100%',\r\n            overflow: 'auto'\r\n          }}\r\n        >\r\n          <Grid item md={10}>\r\n            <Typography variant=\"h6\" style={{ textAlign: 'center' }}>\r\n              {`Key Metrics`}\r\n            </Typography>\r\n            <Table aria-label=\"simple table\" size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{`Gap Statistic`}</TableCell>\r\n                  <TableCell>{`Value`}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row: any) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell>{row.value}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {props.id === 1 && (\r\n        <LineChartSection\r\n          source={props.data}\r\n          dataType={props.dataType}\r\n          size={props.size}\r\n          isSubChart={props.isSubChart}\r\n        />\r\n      )}\r\n      {props.id === 2 && (\r\n        <HistogramChartSection\r\n          source={props.data}\r\n          size={props.size}\r\n          isSubChart={props.isSubChart}\r\n        />\r\n      )}\r\n      {props.id === 3 && (\r\n        <BoxChartSection\r\n          source={props.data}\r\n          size={props.size}\r\n          isSubChart={props.isSubChart}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectedChartSection;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  CssBaseline,\r\n  DialogTitle as MuiDialogTitle,\r\n  Typography,\r\n  IconButton,\r\n  DialogContent,\r\n  Slide\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\nimport DashAddon from '../../../../components/Button/DashAddon';\r\nimport SelectedChartSection from './selected-chart-section';\r\nimport { MENU_ITEMS } from '../../../../constants';\r\nimport useStyles from '../../../../utils/styles';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ChartsLibsSection: React.FC<any> = (props: {\r\n  dataSet: string;\r\n  size: { width: string; height: string };\r\n  traces: any;\r\n  dataType: string;\r\n}) => {\r\n  const [selected, setSelected] = useState<number[]>([1, 2, 3]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [subChart, setSubChart] = useState<number | null>(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [index, setIndex] = useState<number>(0);\r\n  const classes = useStyles();\r\n\r\n  const handleSelected = (id: any) => {\r\n    setSelected(\r\n      selected.map((item: any, idx: any) => {\r\n        if (idx === Number(index)) item = id;\r\n        return item;\r\n      })\r\n    );\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selected.map((item: number, idx: number) => {\r\n        let dset = MENU_ITEMS[props.dataSet][item].dataset;\r\n\r\n        return (\r\n          <Grid\r\n            item\r\n            md={6}\r\n            key={item}\r\n            style={{\r\n              paddingLeft: '2rem',\r\n              paddingRight: idx % 2 === 0 ? '2rem' : '0.8rem'\r\n            }}\r\n          >\r\n            <Card style={{ height: `calc(${props.size.height} * 0.4)` }}>\r\n              <CardContent>\r\n                <DashAddon\r\n                  type={1}\r\n                  selected={selected}\r\n                  anchorEl={anchorEl}\r\n                  index={idx}\r\n                  source={\r\n                    props.traces[dset] && Object.keys(props.traces[dset]).length > 0\r\n                      ? props.traces[dset]\r\n                      : null\r\n                  }\r\n                  onIndex={(value: any) => setIndex(value)}\r\n                  onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                  onSelected={(value: any) => handleSelected(value)}\r\n                  onSubChart={(value: any) => {\r\n                    setSubChart(value);\r\n                    setIsOpen(true);\r\n                  }}\r\n                />\r\n                <Grid item md={12}>\r\n                  {props.traces[dset] && Object.keys(props.traces[dset]).length > 0 && (\r\n                    <SelectedChartSection\r\n                      id={item}\r\n                      size={props.size}\r\n                      data={props.traces[dset]}\r\n                      dataType={props.dataType}\r\n                      isSubChart={false}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })}\r\n      {selected.length % 2 === 0 && <Grid item md={6} />}\r\n      {subChart !== null && (\r\n        <Dialog\r\n          open={isOpen}\r\n          TransitionComponent={Transition}\r\n          onClose={() => setIsOpen(false)}\r\n          PaperProps={{\r\n            style: {\r\n              height: Number(props.size.width.replace('px', '')) * 0.42,\r\n              maxWidth: Number(props.size.width.replace('px', '')) * 0.6,\r\n              minWidth: Number(props.size.width.replace('px', '')) * 0.6\r\n            }\r\n          }}\r\n        >\r\n          <CssBaseline />\r\n          <MuiDialogTitle>\r\n            <Typography component=\"strong\" variant=\"h6\">\r\n              {MENU_ITEMS[props.dataSet][subChart].name}\r\n            </Typography>\r\n            <IconButton\r\n              aria-label=\"Close\"\r\n              className={classes.dialogCloseBtn}\r\n              onClick={() => setIsOpen(false)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </MuiDialogTitle>\r\n          <hr />\r\n          <DialogContent>\r\n            {props.traces[MENU_ITEMS[props.dataSet][selected[subChart]].dataset] &&\r\n              Object.keys(\r\n                props.traces[MENU_ITEMS[props.dataSet][selected[subChart]].dataset]\r\n              ).length > 0 && (\r\n                <SelectedChartSection\r\n                  id={selected[subChart]}\r\n                  size={props.size}\r\n                  dataType={props.dataType}\r\n                  isSubChart={true}\r\n                  data={\r\n                    props.traces[MENU_ITEMS[props.dataSet][selected[subChart]].dataset]\r\n                  }\r\n                />\r\n              )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChartsLibsSection;\r\n","import MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport const Accordion = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0\r\n    },\r\n    '&:before': {\r\n      display: 'none'\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto'\r\n    }\r\n  },\r\n  expanded: {}\r\n})(MuiAccordion);\r\n\r\nexport const AccordionSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    minHeight: 20,\r\n    '&$expanded': {\r\n      minHeight: 20\r\n    }\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0'\r\n    }\r\n  },\r\n  expanded: {}\r\n})(MuiAccordionSummary);\r\n\r\nexport const AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiAccordionDetails);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Slide,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport { createSystem } from '../../../../../../API';\r\n\r\ninterface ISystemDialogProps {\r\n  isOpen: boolean;\r\n  onClose(): void;\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CreateSystemSection: React.FC<ISystemDialogProps> = (props) => {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  const handleClick = () => {\r\n    createSystem({ system: value });\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={() => props.onClose()}\r\n      aria-labelledby=\"input-system-slide-title\"\r\n      aria-describedby=\"input-system-slide-description\"\r\n    >\r\n      <DialogContent>\r\n        <TextField\r\n          id=\"input-system\"\r\n          label=\"System\"\r\n          onChange={(e) => setValue(e.currentTarget.value)}\r\n          required\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.onClose()} color=\"primary\">\r\n          {`Cancel`}\r\n        </Button>\r\n        <Button onClick={handleClick} color=\"primary\" disabled={value.length < 3}>\r\n          {`Ok`}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreateSystemSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport { Accordion, AccordionSummary, AccordionDetails } from '../custom-accordion';\r\nimport CreateSystemSection from '../create-system-section';\r\nimport useStyles from '../../../../../../utils/styles';\r\nimport {\r\n  getModifySystems,\r\n  getModifyVersions,\r\n  getModifyAttrVersions,\r\n  createVersion\r\n} from '../../../../../../API';\r\n\r\ninterface ISystemDetailsProps {\r\n  expanded: string;\r\n  system: number;\r\n  onChange(param: string): void;\r\n  onChangeSystem(param: number): void;\r\n}\r\n\r\ninterface ISystem {\r\n  SYSTEM_ID: number;\r\n  SYSTEM_NAME: string;\r\n}\r\n\r\ninterface IVersion {\r\n  SYSTEM_VERSION: number;\r\n}\r\n\r\ninterface IAttrVersion {\r\n  SYSTEM_ATTRIBUTE_VERSION_ID: number;\r\n}\r\n\r\nconst SystemDetailsSection: React.FC<ISystemDetailsProps> = (props) => {\r\n  const [systems, setSystems] = useState<ISystem[]>([]);\r\n  const [isSystemOpen, setIsSystemOpen] = useState<boolean>(false);\r\n  const [version, setVersion] = useState<number>(-1);\r\n  const [versions, setVersions] = useState<IVersion[]>([]);\r\n  const [attrVersion, setAttrVersion] = useState<number>(-1);\r\n  const [attrVersions, setAttrVersions] = useState<IAttrVersion[]>([]);\r\n  const classes: Record<string, string> = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchSystem();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const name = systems.find((item) => item.SYSTEM_ID === props.system)?.SYSTEM_NAME;\r\n\r\n    if (props.system > 0 && name)\r\n      getModifyVersions({ system_id: props.system, system_name: name })\r\n        .then((res) => {\r\n          setVersions(res.data);\r\n          setVersion(res.data.length > 0 ? res.data[0].SYSTEM_VERSION : -1);\r\n        })\r\n        .catch(() => setVersions([]));\r\n  }, [props.system, systems]);\r\n\r\n  useEffect(() => {\r\n    if (props.system > 0 && version > 0)\r\n      getModifyAttrVersions({ system: props.system, version })\r\n        .then((res) => {\r\n          setAttrVersions(res.data);\r\n          setAttrVersion(\r\n            res.data.length > 0 ? res.data[0].SYSTEM_ATTRIBUTE_VERSION_ID : -1\r\n          );\r\n        })\r\n        .catch(() => setAttrVersions([]));\r\n  }, [props.system, version, versions, systems]);\r\n\r\n  const fetchSystem = () => {\r\n    getModifySystems()\r\n      .then((res) => {\r\n        setSystems(res.data);\r\n        props.onChangeSystem(res.data.length > 0 ? res.data[0].SYSTEM_ID : -1);\r\n      })\r\n      .catch(() => setSystems([]));\r\n  };\r\n\r\n  const handleCreateVersion = () => {\r\n    const name = systems.find((item) => item.SYSTEM_ID === props.system)?.SYSTEM_NAME;\r\n    name && createVersion({ system_id: props.system, system_name: name });\r\n    fetchSystem();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Accordion\r\n        square\r\n        expanded={props.expanded === 'panel1'}\r\n        onChange={() => props.onChange('panel1')}\r\n      >\r\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n          <Typography>{'1. System Details'}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n            <Grid item md={8}>\r\n              <Typography style={{ fontSize: '14px' }}>\r\n                {'a. Select the applicable system or enter new to enter a new system'}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.formControl}\r\n                fullWidth\r\n              >\r\n                <InputLabel>{`System`}</InputLabel>\r\n                <Select\r\n                  value={props.system}\r\n                  label=\"System\"\r\n                  defaultValue=\"\"\r\n                  onChange={(e: any) => props.onChangeSystem(e.target.value as number)}\r\n                >\r\n                  <MenuItem value={-1} disabled>{`Choose System`}</MenuItem>\r\n                  {systems.map((item: ISystem) => (\r\n                    <MenuItem\r\n                      value={item.SYSTEM_ID}\r\n                      key={`${item.SYSTEM_NAME}-${item.SYSTEM_ID}`}\r\n                    >\r\n                      {item.SYSTEM_NAME}\r\n                    </MenuItem>\r\n                  ))}\r\n                  <MenuItem value={-2} onClick={() => setIsSystemOpen(true)}>\r\n                    {`New`}\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n              <Typography style={{ fontSize: '14px' }}>\r\n                {`b. Select the applicable system version or select new for a new \\\r\n              version to be automatically assigned.`}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.formControl}\r\n                fullWidth\r\n              >\r\n                <InputLabel>{`Version`}</InputLabel>\r\n                <Select\r\n                  value={version}\r\n                  label=\"Version\"\r\n                  defaultValue=\"\"\r\n                  onChange={(e) => setVersion(e.target.value as number)}\r\n                >\r\n                  <MenuItem value={-1} disabled>{`Choose Version`}</MenuItem>\r\n                  {versions.map((item: IVersion) => (\r\n                    <MenuItem\r\n                      value={item.SYSTEM_VERSION}\r\n                      key={`version-${props.system}-${item.SYSTEM_VERSION}`}\r\n                    >\r\n                      {item.SYSTEM_VERSION}\r\n                    </MenuItem>\r\n                  ))}\r\n                  {systems.length > 0 && (\r\n                    <MenuItem value={-2} onClick={handleCreateVersion}>\r\n                      {`New`}\r\n                    </MenuItem>\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n              <Typography style={{ fontSize: '14px' }}>\r\n                {'c. Select the applicable CART attribute version.'}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.formControl}\r\n                fullWidth\r\n              >\r\n                <InputLabel>{`Attribute Version`}</InputLabel>\r\n                <Select\r\n                  value={attrVersion}\r\n                  label=\"Attribute Version\"\r\n                  defaultValue=\"\"\r\n                  onChange={(e) => setAttrVersion(e.target.value as number)}\r\n                >\r\n                  <MenuItem value={-1} disabled>{`Choose Attribute Version`}</MenuItem>\r\n                  {attrVersions.map((item: IAttrVersion) => (\r\n                    <MenuItem\r\n                      value={item.SYSTEM_ATTRIBUTE_VERSION_ID}\r\n                      key={`attr-version-${props.system}-${version}-${item.SYSTEM_ATTRIBUTE_VERSION_ID}`}\r\n                    >\r\n                      {item.SYSTEM_ATTRIBUTE_VERSION_ID}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      {isSystemOpen && (\r\n        <CreateSystemSection\r\n          isOpen={isSystemOpen}\r\n          onClose={() => setIsSystemOpen(false)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SystemDetailsSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { Accordion, AccordionSummary, AccordionDetails } from '../custom-accordion';\r\nimport useStyles from '../../../../../../utils/styles';\r\nimport { getModifyModels, createModel } from '../../../../../../API';\r\n\r\ninterface IModelDetailsProps {\r\n  expanded: string;\r\n  system: number;\r\n  onChange(parameter: string): void;\r\n}\r\n\r\ninterface IModel {\r\n  MODEL_ID: number;\r\n  BEAM_TYPE_STK: string;\r\n}\r\n\r\nconst ModelDetailsSection: React.FC<IModelDetailsProps> = (props) => {\r\n  const [model, setModel] = useState<number>(-1);\r\n  const [models, setModels] = useState<IModel[]>([]);\r\n  const [isNew, setIsNew] = useState<boolean>(false);\r\n  const classes: Record<string, string> = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchModels();\r\n  }, [props.system]);\r\n\r\n  const fetchModels = () => {\r\n    getModifyModels({ system: props.system })\r\n      .then((res) => {\r\n        setModels(res.data);\r\n        setModel(res.data.length > 0 ? res.data[0].MODEL_ID : -1);\r\n      })\r\n      .catch(() => setModels([]));\r\n  };\r\n\r\n  const handleCreateModel = () => {\r\n    const beam = models.find((item) => item.MODEL_ID === model)?.BEAM_TYPE_STK;\r\n    beam && createModel({ system_id: props.system, beam });\r\n    fetchModels();\r\n    setIsNew(true);\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      square\r\n      expanded={props.expanded === 'panel2'}\r\n      onChange={() => props.onChange('panel2')}\r\n    >\r\n      <AccordionSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\">\r\n        <Typography>{'2. Model Details'}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n          <Grid item md={8}>\r\n            <Typography style={{ fontSize: '14px' }}>\r\n              {`a. Select the applicable model ID or select new for a new  version to \\\r\n              be automatically assigned.`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              fullWidth\r\n            >\r\n              <InputLabel>{`Model`}</InputLabel>\r\n              <Select\r\n                value={model}\r\n                label=\"Model\"\r\n                defaultValue=\"\"\r\n                onChange={(e) => setModel(e.target.value as number)}\r\n              >\r\n                <MenuItem value={-1} disabled>{`Choose Model`}</MenuItem>\r\n                {models.map((item: IModel) => (\r\n                  <MenuItem value={item.MODEL_ID} key={`${item.MODEL_ID}`}>\r\n                    {item.MODEL_ID}\r\n                  </MenuItem>\r\n                ))}\r\n                <MenuItem value={-2} onClick={handleCreateModel}>\r\n                  {`New`}\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={8}>\r\n            <Typography style={{ fontSize: '14px' }}>\r\n              {`b. Download new model for uploading to Bit Bucket.`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <Button name=\"load_model\" size=\"small\" variant=\"outlined\" disabled={!isNew}>\r\n              {'Load Model'}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ModelDetailsSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from '@material-ui/core';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { Accordion, AccordionSummary, AccordionDetails } from '../custom-accordion';\r\nimport useStyles from '../../../../../../utils/styles';\r\nimport { uploadFile } from '../../../../../../API';\r\n\r\ninterface IUploadedItem {\r\n  name: string;\r\n  size: number;\r\n}\r\n\r\ninterface IModelDetailsProps {\r\n  expanded: string;\r\n  uploadedItems: IUploadedItem[];\r\n  onChangeUploadedItems(name: string, size: number): void;\r\n  onChange(param: string): void;\r\n}\r\n\r\nconst NewDataSection: React.FC<IModelDetailsProps> = (props) => {\r\n  const classes: Record<string, string> = useStyles();\r\n\r\n  const handleUploadFile = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    event.preventDefault();\r\n    const element: HTMLElement | null = document.getElementById('upload');\r\n    element && element.click();\r\n  };\r\n\r\n  const handleUploadedFile = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    event.preventDefault();\r\n    const element = document.getElementById('upload') as HTMLInputElement;\r\n    const files: FileList | null = element?.files;\r\n\r\n    if (files && files[0]) {\r\n      const formData = new FormData();\r\n      formData.append('upload', files[0]);\r\n\r\n      props.onChangeUploadedItems(files[0].name, files[0].size);\r\n      uploadFile(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      square\r\n      expanded={props.expanded === 'panel3'}\r\n      onChange={() => props.onChange('panel3')}\r\n    >\r\n      <AccordionSummary aria-controls=\"panel3d-content\" id=\"panel3d-header\">\r\n        <Typography>{'3. New Data'}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n          <Grid item md={9}>\r\n            <Typography style={{ fontSize: '14px' }}>\r\n              {`a. Data to be downloaded (Select files or drop files in square)`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <Button\r\n              name=\"file_select_btn\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              onClick={handleUploadFile}\r\n            >\r\n              {'Select Files'}\r\n            </Button>\r\n            <input\r\n              id=\"upload\"\r\n              type=\"file\"\r\n              accept=\"*\"\r\n              onChange={handleUploadedFile}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <Box\r\n              border={1}\r\n              style={{ height: '6rem', borderColor: blue[500], overflow: 'auto' }}\r\n            >\r\n              <Table size=\"small\" aria-label=\"uploaded files table\">\r\n                <TableBody>\r\n                  {props.uploadedItems.map((row: IUploadedItem) => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.size}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default NewDataSection;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Slide,\r\n  IconButton,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport SystemDetailsSection from './system-details-section';\r\nimport ModelDetailsSection from './model-details-section';\r\nimport useStyles from '../../../../../utils/styles';\r\nimport NewDataSection from './new-data-section';\r\nimport { processScripts } from '../../../../../API';\r\n\r\ninterface IModifyDialogProps {\r\n  isOpen: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface IUploadedItem {\r\n  name: string;\r\n  size: number;\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ModifyDialog: React.FC<IModifyDialogProps> = (props) => {\r\n  const [system, setSystem] = useState<number>(-1);\r\n  const [expanded, setExpanded] = useState<string>('panel1');\r\n  const [uploadedItems, setUploadedItems] = useState<IUploadedItem[]>([]);\r\n  const classes: Record<string, string> = useStyles();\r\n\r\n  const handleChangeUploadedItems = (name: string, size: number) => {\r\n    setUploadedItems((prevState) => [...prevState, { name, size }]);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    processScripts({ files: uploadedItems });\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={() => props.onClose()}\r\n      aria-labelledby=\"modify-slide-title\"\r\n      aria-describedby=\"modify-slide-description\"\r\n      classes={{ paper: classes.dialogModify }}\r\n    >\r\n      <DialogTitle\r\n        disableTypography\r\n        style={{ backgroundColor: blue[700], color: '#fff', fontSize: 20 }}\r\n      >\r\n        {`Add or Modify Data`}\r\n        <IconButton\r\n          onClick={() => props.onClose()}\r\n          style={{ position: 'absolute', right: 10, padding: 0 }}\r\n        >\r\n          <HighlightOffIcon style={{ color: '#fff' }} />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n          <Grid item md={12}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item md={12}>\r\n                <SystemDetailsSection\r\n                  expanded={expanded}\r\n                  system={system}\r\n                  onChange={(value: string) => setExpanded(value)}\r\n                  onChangeSystem={(value: number) => setSystem(value)}\r\n                />\r\n              </Grid>\r\n              <Grid item md={12}>\r\n                <ModelDetailsSection\r\n                  system={system}\r\n                  expanded={expanded}\r\n                  onChange={(value: string) => setExpanded(value)}\r\n                />\r\n              </Grid>\r\n              <Grid item md={12}>\r\n                <NewDataSection\r\n                  expanded={expanded}\r\n                  uploadedItems={uploadedItems}\r\n                  onChangeUploadedItems={(name: string, size: number) =>\r\n                    handleChangeUploadedItems(name, size)\r\n                  }\r\n                  onChange={(value: string) => setExpanded(value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <div\r\n              style={{\r\n                width: '100%',\r\n                minHeight: '20vh',\r\n                backgroundColor: '#000'\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.onClose()} color=\"primary\">\r\n          {`Cancel`}\r\n        </Button>\r\n        <Button onClick={handleClick} color=\"primary\">\r\n          {`Process`}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModifyDialog;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Grid,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport DeleteSweepOutlinedIcon from '@material-ui/icons/DeleteSweepOutlined';\r\nimport ShopTwoOutlinedIcon from '@material-ui/icons/ShopTwoOutlined';\r\nimport { blue, grey } from '@material-ui/core/colors';\r\nimport useStyles from '../../../../utils/styles';\r\nimport { deleteAll, deleteRecord, migrate } from '../../../../API';\r\nimport ModifyDialog from './modify-dialog';\r\n\r\nconst HeaderSection: React.FC<any> = (props: any) => {\r\n  const [isModifyOpen, setIsModifyOpen] = useState<boolean>(false);\r\n  const classes: Record<string, string> = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Grid item md={12}>\r\n        <Grid\r\n          container\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={1}\r\n          style={{\r\n            backgroundColor: grey[300],\r\n            minHeight: '6vh'\r\n          }}\r\n        >\r\n          <Grid item md={2} style={{ marginLeft: 15 }}>\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n              <Grid item md={3}>\r\n                <IconButton onClick={() => setIsModifyOpen(true)}>\r\n                  <CloudUploadIcon\r\n                    fontSize=\"large\"\r\n                    style={{\r\n                      backgroundColor: blue[500],\r\n                      color: '#fff',\r\n                      padding: '0.3rem',\r\n                      borderRadius: 6\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item md={9}>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  className={classes.formControl}\r\n                  fullWidth\r\n                >\r\n                  <InputLabel id=\"database-select-label\">{`DataBase`}</InputLabel>\r\n                  <Select\r\n                    labelId=\"database-select-label\"\r\n                    id=\"database-select-outlined\"\r\n                    value={props.db}\r\n                    onChange={(e) => props.onSetDB(e.target.value)}\r\n                    defaultValue=\"\"\r\n                    label=\"DataBase\"\r\n                  >\r\n                    <MenuItem key=\"staging_db\" value=\"staging_db\">\r\n                      {`Staging Database`}\r\n                    </MenuItem>\r\n                    <MenuItem key=\"product_db\" value=\"product_db\">\r\n                      {`Production Database`}\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={1}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item md={4}>\r\n                <IconButton\r\n                  disabled={props.db === 'product_db'}\r\n                  onClick={() => {\r\n                    deleteRecord({\r\n                      system: props.system,\r\n                      version: props.version,\r\n                      alt: props.alt,\r\n                      inc: props.inc,\r\n                      fileId: props.fileId\r\n                    });\r\n                    props.onRefresh();\r\n                  }}\r\n                >\r\n                  <DeleteOutlinedIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <IconButton\r\n                  disabled={props.db === 'product_db'}\r\n                  onClick={() => {\r\n                    deleteAll({\r\n                      system: props.system,\r\n                      version: props.version\r\n                    });\r\n                    props.onRefresh();\r\n                  }}\r\n                >\r\n                  <DeleteSweepOutlinedIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <IconButton\r\n                  disabled={props.db === 'product_db'}\r\n                  onClick={() =>\r\n                    migrate({\r\n                      system: props.system,\r\n                      version: props.version\r\n                    })\r\n                  }\r\n                >\r\n                  <ShopTwoOutlinedIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={2}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              style={{ width: '50%' }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{`System`}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={props.system}\r\n                onChange={(e) => props.onSystem(e.target.value)}\r\n                defaultValue=\"\"\r\n                label=\"System\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {props.systems.map((item: any) => (\r\n                  <MenuItem key={item.system_name} value={item.system_id}>\r\n                    {item.system_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              style={{ width: '30%', marginLeft: 15 }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{`Version`}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={props.version}\r\n                onChange={(e) => props.onVersion(e.target.value)}\r\n                defaultValue=\"\"\r\n                label=\"Version\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {props.versions.map((item: any) => (\r\n                  <MenuItem key={`version_${item.versions}`} value={item.versions}>\r\n                    {item.versions}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={3} style={{ marginLeft: 15 }}>\r\n            <ToggleButtonGroup value={props.dataSet} onChange={(e) => props.onClick(e)}>\r\n              <ToggleButton\r\n                id=\"as_needed_handoff\"\r\n                name=\"coverage\"\r\n                value=\"as_needed_handoff\"\r\n                size=\"small\"\r\n              >\r\n                {`RF Coverage (%)`}\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                id=\"maximum_powee_handoff\"\r\n                name=\"gap\"\r\n                value=\"maximum_powee_handoff\"\r\n                size=\"small\"\r\n              >\r\n                {`No Coverage (%)`}\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {isModifyOpen && (\r\n        <ModifyDialog isOpen={isModifyOpen} onClose={() => setIsModifyOpen(false)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderSection;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Slide,\r\n  Dialog,\r\n  DialogContent,\r\n  CssBaseline,\r\n  DialogTitle as MuiDialogTitle,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport TwoViewSection from './two-view-section';\r\nimport ThreeViewSection from './three-view-section';\r\nimport ChartsLibsSection from './charts-libs-section';\r\nimport HeaderSection from './header-section';\r\nimport OptionAddon from '../../../components/Button/OptionAddon';\r\nimport {\r\n  getItems,\r\n  getSystems,\r\n  getSystemVersion,\r\n  getFileId,\r\n  changeDB\r\n} from '../../../API';\r\nimport useStyles from '../../../utils/styles';\r\n\r\ninterface IDot {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface ICount {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\ninterface IFileId {\r\n  id: number;\r\n}\r\n\r\nconst INIT_CHECK_STATUS = {\r\n  show_surface: true,\r\n  show_scatter: true\r\n};\r\n\r\nconst viewStyle = {\r\n  paddingLeft: '2rem',\r\n  paddingRight: '0.8rem'\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst AnalyzeRegressionSection: React.FC<any> = (props: any) => {\r\n  const [viewMethod, setViewMethod] = useState<string>('2d_view');\r\n  const [dataSet, setDataSet] = useState<string>('as_needed_handoff');\r\n  const [systems, setSystems] = useState<string[]>([]);\r\n  const [versions, setVersions] = useState<number[]>([]);\r\n  const [db, setDB] = useState<string>('staging_db');\r\n  const [dot, setDot] = useState<IDot>({ x: props.alt, y: props.value });\r\n  const [fileId, setFileId] = useState<IFileId[]>([]);\r\n  const [checked, setChecked] = useState(INIT_CHECK_STATUS);\r\n  const [traces, setTraces] = useState<any>({});\r\n  const [reset, setReset] = useState<boolean>(false);\r\n  const [count, setCount] = useState<ICount>({ width: '0px', height: '0px' });\r\n  const [isChart, setIsChart] = useState(false);\r\n  const classes = useStyles();\r\n  const chartEl = useRef<any>(null);\r\n  const plot_rows = props.data.plot_value;\r\n  const surface_rows: number[] = [];\r\n  const zAxisLabel = props.data.label;\r\n\r\n  useEffect(() => {\r\n    getSystems()\r\n      .then((res: any) => {\r\n        setSystems(res.data);\r\n        props.onSystem(res.data[1].system_id);\r\n      })\r\n      .catch((err: any) => setSystems([]));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.isRefresh]);\r\n\r\n  useEffect(() => {\r\n    if (fileId.length > 0) {\r\n      getItems({\r\n        dataType: props.dataType,\r\n        fileId: fileId,\r\n        version: props.version\r\n      })\r\n        .then((res) => {\r\n          Object.keys(res.data).forEach((el: string) => {\r\n            let ctype: string = res.data[el]['type'];\r\n            let gaps: number[] = [];\r\n            let durations: number[] = [];\r\n            let avgs: number[] = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === 'line') {\r\n              res.data[el]['data'].forEach((item: number[], idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[0]);\r\n                avgs.push(item[1]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: res.data[el]['title']\r\n                }\r\n              }));\r\n            } else if (ctype === 'histogram') {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: res.data[el]['data'],\r\n                  type: ctype,\r\n                  title: res.data[el]['title']\r\n                }\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n    }\r\n  }, [props.dataType, props.version, fileId]);\r\n\r\n  useEffect(() => {\r\n    let user_inclination: number | string =\r\n      props.inclination !== '' ? props.inclination : 30;\r\n\r\n    const params = {\r\n      user_altitude: dot.x,\r\n      user_inclination,\r\n      system: props.system,\r\n      version: props.version\r\n    };\r\n\r\n    getFileId(params)\r\n      .then((res: any) => setFileId(res.data))\r\n      .catch(() => setFileId([]));\r\n  }, [props.inclination]);\r\n\r\n  useEffect(() => {\r\n    changeDB({ database: db }).catch((err) => setDB('staging_db'));\r\n  }, [db]);\r\n\r\n  useEffect(() => {\r\n    if (props.system !== '') {\r\n      getSystemVersion({ system: props.system })\r\n        .then((res: any) => {\r\n          setVersions(res.data);\r\n          props.onVersion(res.data[0].versions);\r\n        })\r\n        .catch((err: any) => setVersions([]));\r\n    }\r\n  }, [props.system]);\r\n\r\n  useEffect(() => {\r\n    if (props.data.plot_value.length > 0)\r\n      setDot({\r\n        x: props.data.plot_value[0].altitude,\r\n        y: props.data.plot_value[0].value\r\n      });\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    if (chartEl) {\r\n      let size = window.getComputedStyle(chartEl.current);\r\n      setCount({ width: size.width, height: size.height });\r\n    }\r\n  }, [chartEl, traces]);\r\n\r\n  const handleCheck = (event: any) => {\r\n    const { name, checked } = event.currentTarget;\r\n    setChecked((prevState) => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const handleDataSetClick = (event: any) => {\r\n    event.preventDefault();\r\n    const { id, name } = event.currentTarget;\r\n\r\n    setDataSet(id);\r\n    props.onDataType(name);\r\n  };\r\n\r\n  const handleClick = (event: any) => {\r\n    if (event) {\r\n      const params = {\r\n        user_altitude: event.points[0].x,\r\n        user_inclination: props.inc,\r\n        system: props.system,\r\n        version: props.version\r\n      };\r\n\r\n      setDot({ x: event.points[0].x, y: event.points[0].y });\r\n      getFileId(params)\r\n        .then((res: any) => setFileId(res.data))\r\n        .catch((err: any) => setFileId([]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CardContent ref={chartEl} className={classes.cartCardContent}>\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n          <HeaderSection\r\n            db={db}\r\n            system={props.system}\r\n            systems={systems}\r\n            version={props.version}\r\n            versions={versions}\r\n            dataSet={dataSet}\r\n            alt={dot.x}\r\n            inc={props.inclination !== '' ? props.inclination : props.inc}\r\n            fileId={fileId}\r\n            onRefresh={() => props.onRefresh()}\r\n            onSetDB={(value: string) => setDB(value)}\r\n            onSystem={(value: number) => props.onSystem(value)}\r\n            onVersion={(value: number) => props.onVersion(value)}\r\n            onClick={handleDataSetClick}\r\n          />\r\n          <Grid item md={6} style={viewStyle}>\r\n            <Card style={{ height: `calc(${count.height} * 0.4)` }}>\r\n              <CardContent>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                  <Grid\r\n                    item\r\n                    md={12}\r\n                    style={{ textAlign: 'center', position: 'relative' }}\r\n                  >\r\n                    <Typography\r\n                      style={{\r\n                        fontSize: 15,\r\n                        fontWeight: 'bold'\r\n                      }}\r\n                    >\r\n                      {dataSet === 'as_needed_handoff'\r\n                        ? `RF Coverage (%)`\r\n                        : `No Coverage (%)`}\r\n                      {` vs. User Inclination`}\r\n                    </Typography>\r\n                    <OptionAddon\r\n                      source={props.data}\r\n                      dataSource={props.source}\r\n                      checked={checked}\r\n                      viewMethod={viewMethod}\r\n                      inc={props.inclination}\r\n                      incs={props.incs}\r\n                      isDash={true}\r\n                      onChecked={handleCheck}\r\n                      onChart={() => setIsChart(true)}\r\n                      resetPlot={() => setReset(!reset)}\r\n                      onInc={(value: any) => props.onInc(value)}\r\n                      onViewMethod={(e: any) => setViewMethod(e.currentTarget.name)}\r\n                    />\r\n                  </Grid>\r\n                  {viewMethod === '3d_view' ? (\r\n                    <Grid item md={12}>\r\n                      <ThreeViewSection\r\n                        data={props.source}\r\n                        equation={props.equation}\r\n                        maxAltitude={props.maxAltitude}\r\n                        alt={props.alt}\r\n                        inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                        value={props.value}\r\n                        reset={reset}\r\n                        isLegend={false}\r\n                        isSub={true}\r\n                        plot_rows={props.source.plot_value}\r\n                        surface_rows={surface_rows}\r\n                        zAxisLabel={zAxisLabel}\r\n                        checked={checked}\r\n                        size={count}\r\n                        isChart={false}\r\n                        onClick={handleClick}\r\n                      />\r\n                    </Grid>\r\n                  ) : (\r\n                    <Grid item md={12}>\r\n                      <TwoViewSection\r\n                        data={props.data}\r\n                        equation={props.equation}\r\n                        maxAltitude={props.maxAltitude}\r\n                        alt={dot.x}\r\n                        inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                        value={props.value}\r\n                        isLegend={false}\r\n                        isSub={true}\r\n                        plot_rows={plot_rows}\r\n                        surface_rows={surface_rows}\r\n                        yAxisLabel={zAxisLabel}\r\n                        dot={dot}\r\n                        size={count}\r\n                        checked={checked}\r\n                        isChart={false}\r\n                        onClick={handleClick}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          {fileId.length === 0 && <Grid item md={6} />}\r\n          {Object.keys(traces).length > 0 && (\r\n            <ChartsLibsSection\r\n              traces={traces}\r\n              dataSet={dataSet}\r\n              dataType={props.dataType}\r\n              size={count}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </CardContent>\r\n      {isChart && (\r\n        <Dialog\r\n          open={isChart}\r\n          TransitionComponent={Transition}\r\n          onClose={() => setIsChart(true)}\r\n          PaperProps={{\r\n            style: {\r\n              height: parseFloat(count.width.replace('px', '')) * 0.42,\r\n              maxWidth: parseFloat(count.width.replace('px', '')) * 0.6,\r\n              minWidth: parseFloat(count.width.replace('px', '')) * 0.6\r\n            }\r\n          }}\r\n        >\r\n          <CssBaseline />\r\n          <MuiDialogTitle>\r\n            <Typography component=\"strong\" variant=\"h6\">\r\n              {dataSet === 'as_needed_handoff' ? `RF Coverage (%)` : `No Coverage (%)`}\r\n              {` vs. User Inclination`}\r\n            </Typography>\r\n            <IconButton\r\n              aria-label=\"Close\"\r\n              className={classes.dialogCloseBtn}\r\n              onClick={() => setIsChart(false)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </MuiDialogTitle>\r\n          <hr />\r\n          <DialogContent>\r\n            {viewMethod === '3d_view' ? (\r\n              <Grid item md={12}>\r\n                <ThreeViewSection\r\n                  data={props.source}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                  value={props.value}\r\n                  reset={reset}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={props.source.plot_value}\r\n                  surface_rows={surface_rows}\r\n                  zAxisLabel={zAxisLabel}\r\n                  checked={checked}\r\n                  size={count}\r\n                  isChart={true}\r\n                  onClick={handleClick}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              <Grid item md={12}>\r\n                <TwoViewSection\r\n                  data={props.data}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inclination !== '' ? props.inclination : props.inc}\r\n                  value={props.value}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={plot_rows}\r\n                  surface_rows={surface_rows}\r\n                  yAxisLabel={zAxisLabel}\r\n                  dot={dot}\r\n                  size={count}\r\n                  checked={checked}\r\n                  isChart={true}\r\n                  onClick={handleClick}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyzeRegressionSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  CssBaseline,\r\n  Card,\r\n  CardHeader,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { getCartItems } from '../../API';\r\nimport useStyles from '../../utils/styles';\r\nimport { INIT_PARAMS } from '../../constants';\r\nimport AnalyzeRegressionSection from './analyze-regression-section';\r\n\r\nconst CartDashPanel: React.FC = () => {\r\n  const [source, setSource] = useState({});\r\n  const [dataSource, setDataSource] = useState({} as any);\r\n  const [system, setSystem] = useState<number>(4);\r\n  const [version, setVersion] = useState<number>(1);\r\n  const [inclination, setInclination] = useState<string>('');\r\n  const [incs, setIncs] = useState<Array<any>>([]);\r\n  const [dataType, setDataType] = useState<string>('coverage');\r\n  const [isRefresh, setIsRefresh] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [maxAltitude, setMaxAltitude] = useState(0);\r\n  const [text, setText] = useState<string>('');\r\n  const deepDive = 'system1/coverage';\r\n  const metric = deepDive.split('/')[1];\r\n  const missionType = 'orbital';\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setText('');\r\n    getCartItems({\r\n      type: missionType,\r\n      system: system,\r\n      version: version,\r\n      dataType\r\n    })\r\n      .then((res: any) => {\r\n        setSource(res.data.data);\r\n        setDataSource(res.data.data);\r\n        setMaxAltitude(res.data.maxAltitude);\r\n        setText(res.data.text);\r\n\r\n        // TODO: active when used\r\n        // setTerrestrial(res.data.terrestrial);\r\n        // setCoefficients(res.data.coefficients);\r\n\r\n        if (Object.keys(res.data.data).includes('plot_value')) {\r\n          let tmp = res.data.data.plot_value.map((item: any) => item['inclination']);\r\n          let uniqueArray: Array<any> = [...new Set(tmp)];\r\n          setIncs(uniqueArray.sort());\r\n        }\r\n\r\n        // TODO: this is for \"cart system\".\r\n        // setText(\r\n        //   props.equationsTex[system.replace(\" \", \"_\").toLowerCase()][metric](\r\n        //     data[\"coefficients\"][metric]\r\n        //   )\r\n        // );\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      });\r\n    setIsRefresh(false);\r\n  }, [system, version, dataType, isRefresh]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataSource).includes('plot_value')) {\r\n      let user_inclination: number | string = inclination !== '' ? inclination : 30;\r\n      let data = dataSource.plot_value.filter(\r\n        (item: any) => item.inclination === user_inclination\r\n      );\r\n      setSource((prevState: any) => ({ ...prevState, plot_value: data }));\r\n    }\r\n  }, [inclination]);\r\n\r\n  const equation = (inc: any, alt: any, metric: string) => {\r\n    // TODO: this is for \"cart system\".\r\n    // const altitude = parseFloat(alt);\r\n    // const inclination = parseFloat(inc);\r\n    // const coefs = coefficients[metric];\r\n    // const eqn = props.equations[system.replace(\" \", \"_\").toLowerCase()][metric];\r\n    // return eqn(coefs, altitude, inclination);\r\n    return inc;\r\n  };\r\n  \r\n  return (\r\n    <Grid container>\r\n      <Container component=\"main\" maxWidth=\"xl\">\r\n        <Card className={classes.cartCard}>\r\n          <CssBaseline />\r\n          <CardHeader\r\n            title={\r\n              <Typography component=\"h1\" variant=\"h5\" style={{ margin: 5 }}>\r\n                {`CAESAR Data Dashboard`}\r\n              </Typography>\r\n            }\r\n          />\r\n          {!isLoading &&\r\n            (missionType === 'orbital' ? (\r\n              <AnalyzeRegressionSection\r\n                equation={(x: any, y: any, m: any) => equation(x, y, m)}\r\n                maxAltitude={maxAltitude}\r\n                alt={INIT_PARAMS.altitude}\r\n                inc={INIT_PARAMS.inclination}\r\n                value={INIT_PARAMS.value}\r\n                data={source}\r\n                source={dataSource}\r\n                dataType={dataType}\r\n                selectedItem={metric}\r\n                text={text}\r\n                system={system}\r\n                version={version}\r\n                inclination={inclination}\r\n                incs={incs}\r\n                isRefresh={isRefresh}\r\n                onRefresh={() => setIsRefresh(true)}\r\n                onInc={(value: any) => setInclination(value)}\r\n                onSystem={(value: any) => setSystem(value)}\r\n                onVersion={(value: any) => setVersion(value)}\r\n                onDataType={(value: any) => setDataType(value)}\r\n              />\r\n            ) : (\r\n              <></>\r\n            ))}\r\n        </Card>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CartDashPanel;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n    Container,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    Typography,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\n\r\nfunction NoMatch() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <CssBaseline />\r\n            <Card className={classes.authcard}>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {`404 | Page not found :(`}\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <p>{`Maybe the page you are looking for has been removed, or you typed in the wrong URL`}</p>\r\n                </CardContent>\r\n                <Link to=\"/\" className={classes.link}>{`Back To Home`}</Link>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport ChartPanel from \"./pages/chart-panel\";\r\nimport CartDashPanel from \"./pages/cart-dash-panel\";\r\nimport NoMatch from \"./pages/auth-panel/NoMatch\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={CartDashPanel} />\r\n        <Route exact path=\"/home\" component={ChartPanel} />\r\n        <Route path=\"*\" component={NoMatch} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}