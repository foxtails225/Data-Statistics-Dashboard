{"version":3,"sources":["API.ts","utils/styles.ts","utils/util.ts","pages/chart-panel/line-chart-section/index.tsx","pages/chart-panel/histogram-chart-section/index.tsx","pages/chart-panel/box-chart-section/index.tsx","pages/chart-panel/terrestrial-heatmap-chart/index.tsx","pages/cart-panel/analyze-regression-section/two-view-section/index.tsx","pages/cart-panel/analyze-regression-section/three-view-section/index.tsx","components/Button/MinusAddon.tsx","constants/index.ts","components/Select/index.tsx","components/Button/PlusAddon.tsx","pages/cart-panel/analyze-regression-section/charts-libs-section/index.tsx","components/Button/OptionAddon.tsx","pages/cart-panel/analyze-regression-section/index.tsx","pages/cart-panel/index.tsx","pages/chart-panel/index.tsx","pages/auth-panel/NoMatch.tsx","App.tsx","index.tsx"],"names":["getItems","selected","a","params","axios","get","res","Error","getPlotItems","getCartItems","post","useStyles","makeStyles","theme","authcard","marginTop","minWidth","padding","spacing","link","paddingRight","color","textDecoration","chartCard","searchSelect","textAlignLast","tooltip","maxWidth","dialogDeep","height","dialogCloseBtn","position","right","top","palette","grey","zIndex","contentSection","backgroundColor","maxHeight","overflow","label","fontSize","useWindowSize","useState","width","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","LineChartSection","props","size","data","x","xTraces","y","yTraces","name","type","mode","marker","avgTraces","layout","title","showlegend","legend","orientation","xanchor","font","family","margin","l","b","r","t","pad","xaxis","titlefont","showgrid","zerolinecolor","zerolinewidth","yaxis","config","displayModeBar","HistogramChartSection","split","join","BoxChartSection","INIT_SOURCE","heatmap","intrpl","TerrestrialHeatMap","setMode","source","setSource","then","catch","Grid","container","justify","alignItems","item","md","z","zeroline","range","tickmode","tick0","dtick","lat","lon","mapbox","center","style","zoom","mapboxAccessToken","hoverinfo","Box","borderColor","border","borderRadius","Button","variant","onClick","e","currentTarget","marginRight","TwoViewSection","checked","setChecked","setConfig","plot_rows","surface_rows","unpack","rows","key","map","row","configData","inclination","parseInt","inc","new_plot_rows","filter","new_surface_rows","show_surface","show_scatter","line","alt","value","autosize","hovermode","yAxisLabel","onHover","event","target","cursor","onUnhover","onDoubleClick","ThreeViewSection","reset","setReset","opacity","parseFloat","scene","aspectratio","camera","eye","up","Math","max","zaxis","zAxisLabel","min","MinusAddon","IconButton","onSelected","id","Divider","MENU_ITEMS","as_needed_handoff","dataset","maximum_powee_handoff","Selection","Menu","anchorEl","keepMounted","open","Boolean","onClose","onAnchorEl","Constants","el","MenuItem","includes","PlusAddon","createData","ChartsLibsSection","setSelected","setAnchorEl","handleSelected","prevState","length","dataSet","Object","keys","traces","Fragment","textAlign","Typography","Table","aria-label","TableHead","TableRow","TableCell","TableBody","component","scope","sort","OptionAddon","isOpen","setIsOpen","classes","marginBottom","className","onViewMethod","fullWidth","flexItem","FormControlLabel","control","Checkbox","onChange","onChecked","Tooltip","gutterBottom","dangerouslySetInnerHTML","__html","placement","disabled","viewMethod","resetPlot","INIT_CHECK_STATUS","AnalyzeRegressionSection","setViewMethod","setDataSet","setLineType","setTraces","plot_value","ctype","gaps","durations","avgs","idx","push","handleDataSetClick","preventDefault","minHeight","marginLeft","equation","maxAltitude","isLegend","isSub","INIT_PARAMS","Transition","React","forwardRef","ref","Slide","direction","CartPanel","isLoading","setIsLoading","setTerrestrial","setMaxAltitude","setCoefficients","text","setText","metric","terrestrial","coefficients","Dialog","TransitionComponent","paper","CssBaseline","Close","DialogContent","dividers","paddingLeft","overflowX","m","selectedItem","INIT_MENUS","TabPanel","children","index","other","role","hidden","aria-labelledby","p","a11yProps","ChartPanel","tab","setTab","useTheme","Container","Card","CardHeader","action","CardContent","AppBar","Tabs","val","indicatorColor","textColor","Tab","axis","onChangeIndex","Select","NoMatch","to","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3f1fad9.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\n\r\n// const baseUrl: string = \"http://127.0.0.1:7000\";\r\n\r\nexport const getItems = async (selected: String) => {\r\n  const params = { selected };\r\n\r\n  try {\r\n    const res: AxiosResponse = await axios.get(\"/get-items\", {\r\n      params,\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getPlotItems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(\"/get-plot\");\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getCartItems = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post(\"/get-cart\", params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  authcard: {\r\n    marginTop: \"10vh\",\r\n    minWidth: \"30vw\",\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  link: {\r\n    paddingRight: theme.spacing(2),\r\n    color: \"#3385ff\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  chartCard: {\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  searchSelect: {\r\n    textAlignLast: \"center\",\r\n  },\r\n\r\n  tooltip: {\r\n    maxWidth: \"500px\",\r\n  },\r\n\r\n  dialogDeep: {\r\n    minWidth: \"40vw !important\",\r\n    height: \"90vh !important\",\r\n    maxWidth: \"40vw !important\",\r\n  },\r\n\r\n  dialogCloseBtn: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    zIndex: 100,\r\n  },\r\n\r\n  contentSection: {\r\n    backgroundColor: grey[500],\r\n    height: \"100%\",\r\n    maxHeight: \"55vh\",\r\n    overflow: \"auto\",\r\n  },\r\n\r\n  label: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined as any,\r\n    height: undefined as any,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction LineChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          y: props.yTraces,\r\n          name: \"Gap Event Duration\",\r\n          type: \"scatter\",\r\n          mode: \"lines+markers\",\r\n          marker: { color: \"red\" },\r\n        },\r\n        {\r\n          x: props.xTraces,\r\n          y: props.avgTraces,\r\n          name: \"Running Average\",\r\n          type: \"scatter\",\r\n          marker: { color: \"blue\" },\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title}</b>`,\r\n        width: size.width * 0.37,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Gap Event (Sequence)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Gap Duration (seconds)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LineChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction HistogramChartSection(props: any) {\r\n  const size = useWindowSize();\r\n  \r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          name: \"Duration\",\r\n          type: \"histogram\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split('_').join(' ')}</b>`,\r\n        width: size.width * 0.37,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Occurances\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HistogramChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction BoxChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          y: props.xTraces,\r\n          name: \"\",\r\n          type: \"box\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split(\" \")[0]} Statistics</b>`,\r\n        width: size.width * 0.37,\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        yaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BoxChartSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { Grid, Button, Box } from \"@material-ui/core\";\r\n\r\nimport { getPlotItems } from \"../../../API\";\r\n\r\nconst INIT_SOURCE = {\r\n  heatmap: {},\r\n  intrpl: {},\r\n};\r\n\r\nfunction TerrestrialHeatMap() {\r\n  const [mode, setMode] = useState(\"heatmap\");\r\n  const [source, setSource] = useState(INIT_SOURCE as any);\r\n\r\n  useEffect(() => {\r\n    getPlotItems()\r\n      .then((res: any) => {\r\n        setSource(res.data);\r\n      })\r\n      .catch(() => setSource(INIT_SOURCE));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        {mode === \"heatmap\" ? (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.heatmap.x,\r\n                    y: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.heatmap.x,\r\n                    lon: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"densitymapbox\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.intrpl.x,\r\n                    y: source.intrpl.y,\r\n                    z: source.intrpl.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.intrpl.x,\r\n                    lon: source.intrpl.x,\r\n                    z: source.intrpl.z,\r\n                    type: \"densitymapbox\",\r\n                    hoverinfo: \"skip\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n      <Grid item md={6}>\r\n        <Box\r\n          borderColor=\"primary.main\"\r\n          border={2}\r\n          borderRadius={5}\r\n          padding={2}\r\n          style={{ zIndex: 1000 }}\r\n        >\r\n          <Button\r\n            name=\"heatmap\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\", marginRight: \"4%\" }}\r\n          >\r\n            {\"Non-Interpolated\"}\r\n          </Button>\r\n          <Button\r\n            name=\"intrpl\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\" }}\r\n          >\r\n            {\"Interpolated\"}\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TerrestrialHeatMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nfunction TwoViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row: any) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    const inclination = parseInt(props.inc);\r\n    const new_plot_rows = plot_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    const new_surface_rows = surface_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"lines\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.inc]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        showlegend: false,\r\n        hovermode: \"closest\",\r\n        width: 550,\r\n        height: 400,\r\n        margin: {\r\n          l: 60,\r\n          r: 15,\r\n          b: 35,\r\n          t: 15,\r\n        },\r\n        xaxis: {\r\n          title: `Altitude (km), Inclination=${props.inc} deg`,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n        yaxis: {\r\n          title: props.yAxisLabel,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n      }}\r\n      onHover={(e: any) => (e.event.target.style.cursor = \"pointer\")}\r\n      onUnhover={(e: any) => (e.event.target.style.cursor = \"crosshair\")}\r\n      onClick={() => props.onClick()}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TwoViewSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nfunction ThreeViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [reset, setReset] = useState(false);\r\n  const [config, setConfig] = useState([]);\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setReset(!reset);\r\n  }, [props.reset]);\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, \"altitude\"),\r\n          y: unpack(plot_rows, \"inclination\"),\r\n          z: unpack(plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"rgb(23, 190, 207)\",\r\n            size: 2,\r\n          },\r\n        },\r\n        {\r\n          x: unpack(surface_rows, \"altitude\"),\r\n          y: unpack(surface_rows, \"inclination\"),\r\n          z: unpack(surface_rows, \"value\"),\r\n          name: \"Model surface\",\r\n          opacity: 0.3,\r\n          type: \"mesh3d\",\r\n          color: \"rgb(252, 154, 7)\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, \"altitude\"),\r\n          y: unpack(plot_rows, \"inclination\"),\r\n          z: unpack(plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"rgb(23, 190, 207)\",\r\n            size: 2,\r\n          },\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(surface_rows, \"altitude\"),\r\n          y: unpack(surface_rows, \"inclination\"),\r\n          z: unpack(surface_rows, \"value\"),\r\n          name: \"Model surface\",\r\n          opacity: 0.3,\r\n          type: \"mesh3d\",\r\n          color: \"rgb(252, 154, 7)\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          type: \"mesh3d\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n        },\r\n        {\r\n          x: [parseFloat(props.alt)],\r\n          y: [parseFloat(props.inc)],\r\n          z: [parseFloat(props.value)],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, reset]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        width: window.innerWidth * 0.4,\r\n        margin: {\r\n          l: 0,\r\n          r: 0,\r\n          b: 0,\r\n          t: 0,\r\n        },\r\n        scene: {\r\n          aspectratio: {\r\n            x: 0.6,\r\n            y: 0.6,\r\n            z: 0.6,\r\n          },\r\n          camera: {\r\n            center: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 0,\r\n            },\r\n            eye: {\r\n              x: 0.9,\r\n              y: 0.9,\r\n              z: 0.9,\r\n            },\r\n            up: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 1,\r\n            },\r\n          },\r\n          xaxis: {\r\n            title: \"Altitude (km)\",\r\n            type: \"linear\",\r\n            range: [Math.max(...unpack(surface_rows, \"altitude\")), 0],\r\n            zeroline: false,\r\n          },\r\n          yaxis: {\r\n            title: \"Inclination (deg)\",\r\n            type: \"linear\",\r\n            range: [90, 0],\r\n            zeroline: false,\r\n          },\r\n          zaxis: {\r\n            title: props.zAxisLabel,\r\n            type: \"linear\",\r\n            range: [\r\n              Math.min(...unpack(surface_rows, \"value\")),\r\n              Math.max(...unpack(surface_rows, \"value\")),\r\n            ],\r\n            zeroline: false,\r\n          },\r\n        },\r\n        showlegend: false,\r\n      }}\r\n      onClick={() => props.onClick()}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThreeViewSection;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\n\r\nfunction MinusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={() => props.onSelected(props.id)}>\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MinusAddon;\r\n","export const MENU_ITEMS = {\r\n  as_needed_handoff: [\r\n    { id: 1, dataset: \"coverage\", name: \"Key Metrics\" },\r\n    { id: 2, dataset: \"coverage\", name: \"Running Average\" },\r\n    { id: 3, dataset: \"coverage_histogram\", name: \"Distribution\" },\r\n    { id: 4, dataset: \"coverage_histogram\", name: \"Statistics Chart\" },\r\n  ],\r\n  maximum_powee_handoff: [\r\n    { id: 1, dataset: \"gap\", name: \"Key Metrics\" },\r\n    { id: 2, dataset: \"gap\", name: \"Running Average\" },\r\n    { id: 3, dataset: \"gap_histogram\", name: \"Distribution\" },\r\n    { id: 4, dataset: \"gap_histogram\", name: \"Statistics Chart\" },\r\n  ],\r\n};\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\nimport * as Constants from \"../../constants\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nfunction Selection(props: any) {\r\n  return (\r\n    <Menu\r\n      anchorEl={props.anchorEl}\r\n      keepMounted\r\n      open={Boolean(props.anchorEl)}\r\n      onClose={() => props.onAnchorEl(null)}\r\n    >\r\n      {Constants.MENU_ITEMS[\"as_needed_handoff\"].map((el: any) => (\r\n        <MenuItem\r\n          id={el.id}\r\n          key={el.id}\r\n          onClick={() => props.onSelected(el.id)}\r\n          style={{ backgroundColor: props.selected.includes(el.id) ? grey[300] : \"\" }}\r\n        >\r\n          {el.name}\r\n        </MenuItem>\r\n      ))}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport { Grid, IconButton, Divider } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Selection from \"../Select\";\r\n\r\nfunction PlusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={(e) => props.onAnchorEl(e.currentTarget)}>\r\n            <AddCircleOutlineIcon />\r\n          </IconButton>\r\n          <Selection\r\n            selected={props.selected}\r\n            anchorEl={props.anchorEl}\r\n            onAnchorEl={(value: any) => props.onAnchorEl(value)}\r\n            onSelected={(value: any) => props.onSelected(value)}\r\n          />\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PlusAddon;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\n\r\nimport MinusAddon from \"../../../../components/Button/MinusAddon\";\r\nimport PlusAddon from \"../../../../components/Button/PlusAddon\";\r\nimport LineChartSection from \"../../../chart-panel/line-chart-section\";\r\nimport HistogramChartSection from \"../../../chart-panel/histogram-chart-section\";\r\nimport BoxChartSection from \"../../../chart-panel/box-chart-section\";\r\nimport * as Constants from \"../../../../constants\";\r\nimport useStyles from \"../../../../utils/styles\";\r\n\r\nfunction createData(name: String, value: String) {\r\n  return { name, value };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Average (sec)\", \"xx\"),\r\n  createData(\"Time-Averaged Gap\", \"xx\"),\r\n  createData(\"Median (sec)\", \"xx\"),\r\n  createData(\"Maximum (minutes)\", \"xx\"),\r\n  createData(\"Minimum (sec)\", \"xx\"),\r\n  createData(\"Average # Gaps Per Orbit\", \"xx\"),\r\n  createData(\"Average # Gaps Per Day\", \"xx\"),\r\n];\r\n\r\nfunction ChartsLibsSection(props: any) {\r\n  const [selected, setSelected] = useState([] as any);\r\n  const [anchorEl, setAnchorEl] = useState(null as any);\r\n\r\n  const handleSelected = (id: any, type: string) => {\r\n    if (!selected.includes(id) && type === \"add\") {\r\n      setSelected((prevState: any) => [...prevState, id]);\r\n    } else if (type === \"remove\") {\r\n      setSelected(selected.filter((item: any) => item !== id));\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selected.length === 0 && (\r\n        <PlusAddon\r\n          selected={selected}\r\n          anchorEl={anchorEl}\r\n          onAnchorEl={(value: any) => setAnchorEl(value)}\r\n          onSelected={(value: any) => handleSelected(value, \"add\")}\r\n        />\r\n      )}\r\n      {\r\n        // @ts-ignore\r\n        Constants.MENU_ITEMS[props.dataSet].map(\r\n          (item: any) =>\r\n            Object.keys(props.traces).includes(item.dataset) &&\r\n            selected.includes(item.id) && (\r\n              <React.Fragment key={item.id}>\r\n                <MinusAddon\r\n                  id={item.id}\r\n                  selected={selected}\r\n                  anchorEl={anchorEl}\r\n                  onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                  onSelected={(value: any) => handleSelected(value, \"remove\")}\r\n                />\r\n                <Grid item md={12}>\r\n                  {item.id === 1 && (\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                      <Grid item md={10} style={{ textAlign: \"center\" }}>\r\n                        <Typography variant=\"h6\">{`Key Metrics`}</Typography>\r\n                      </Grid>\r\n                      <Grid item md={10}>\r\n                        <Table aria-label=\"simple table\" size=\"small\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell>{`Gap Statistic`}</TableCell>\r\n                              <TableCell>{`Value`}</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {rows.map((row: any) => (\r\n                              <TableRow key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.name}\r\n                                </TableCell>\r\n                                <TableCell>{row.value}</TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  {item.id === 2 && (\r\n                    <LineChartSection {...props.traces[item.dataset]} />\r\n                  )}\r\n                  {item.id === 3 && (\r\n                    <HistogramChartSection {...props.traces[item.dataset]} />\r\n                  )}\r\n                  {item.id === 4 && (\r\n                    <BoxChartSection {...props.traces[item.dataset]} />\r\n                  )}\r\n                </Grid>\r\n                {selected.sort()[selected.length - 1] === item.id && (\r\n                  <PlusAddon\r\n                    selected={selected}\r\n                    anchorEl={anchorEl}\r\n                    onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                    onSelected={(value: any) => handleSelected(value, \"add\")}\r\n                  />\r\n                )}\r\n              </React.Fragment>\r\n            )\r\n        )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartsLibsSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Tooltip,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\n\r\nfunction OptionAddon(props: any) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ marginBottom: 10 }}\r\n    >\r\n      <Grid item md={4}></Grid>\r\n      <Grid item md={8}>\r\n        <Typography component=\"p\" style={{ textAlign: \"end\" }}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            className=\"mt-2 mb-2\"\r\n            style={{ fontSize: 14 }}\r\n          >\r\n            {`Graph Options`}\r\n            {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          </IconButton>\r\n        </Typography>\r\n      </Grid>\r\n      {isOpen && (\r\n        <Grid item md={12} style={{ marginRight: 5 }}>\r\n          <Box\r\n            borderColor=\"primary.main\"\r\n            border={2}\r\n            borderRadius={5}\r\n            padding={2}\r\n          >\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n              <Grid item md={3}>\r\n                <Grid\r\n                  container\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item md={5}>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"2d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                      fullWidth\r\n                    >\r\n                      {\"2D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={7} />\r\n                  <Grid item md={5}>\r\n                    <Button\r\n                      name=\"3d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                      fullWidth\r\n                    >\r\n                      {\"3D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={7} />\r\n                </Grid>\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={5}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"show_surface\"\r\n                      checked={props.checked.show_surface}\r\n                      size=\"small\"\r\n                      onChange={(e) => props.onChecked(e)}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  classes={{ label: classes.label }}\r\n                  label=\"Show Regression Model Surface\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"show_scatter\"\r\n                      checked={props.checked.show_scatter}\r\n                      size=\"small\"\r\n                      onChange={(e) => props.onChecked(e)}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  classes={{ label: classes.label }}\r\n                  label=\"Show Underlying Data\"\r\n                />\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={3}>\r\n                <Tooltip\r\n                  title={\r\n                    <Typography\r\n                      gutterBottom\r\n                      component=\"p\"\r\n                      variant=\"body1\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: \"Reset 3D plot\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  placement=\"top-start\"\r\n                  classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                  <span>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"Reset\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled={props.viewMethod === \"2d_view\" ? true : false}\r\n                      onClick={() => props.resetPlot()}\r\n                      fullWidth\r\n                    >\r\n                      {\"Reset\"}\r\n                    </Button>\r\n                  </span>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default OptionAddon;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MathJax from \"react-mathjax\";\r\n\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nimport TwoViewSection from \"./two-view-section\";\r\nimport ThreeViewSection from \"./three-view-section\";\r\nimport ChartsLibsSection from \"./charts-libs-section\";\r\nimport OptionAddon from \"../../../components/Button/OptionAddon\";\r\nimport { getItems } from \"../../../API\";\r\n\r\nconst INIT_CHECK_STATUS = {\r\n  show_surface: true,\r\n  show_scatter: true,\r\n};\r\n\r\nfunction AnalyzeRegressionSection(props: any) {\r\n  const [viewMethod, setViewMethod] = useState(\"2d_view\");\r\n  const [dataSet, setDataSet] = useState(\"as_needed_handoff\" as any);\r\n  const [lineType, setLineType] = useState(\"coverage\" as any);\r\n  const [checked, setChecked] = useState(INIT_CHECK_STATUS);\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [reset, setReset] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n  const plot_rows = props.data.plot_value;\r\n  const surface_rows: Array<any> = [];\r\n  const zAxisLabel = props.data.label;\r\n\r\n  useEffect(() => {\r\n    getItems(dataSet)\r\n      .then((res) => {\r\n        Object.keys(res.data).map((el) => {\r\n          let ctype: String = res.data[el][\"type\"];\r\n          let gaps: Array<any> = [];\r\n          let durations: Array<any> = [];\r\n          let avgs: Array<any> = [];\r\n\r\n          // Detect chart type and set Traces\r\n          if (ctype === \"line\") {\r\n            res.data[el][\"data\"].map((item: Array<any>, idx: number) => {\r\n              gaps.push(idx + 1);\r\n              durations.push(item[0]);\r\n              avgs.push(item[1]);\r\n            });\r\n\r\n            setTraces((prevState: any) => ({\r\n              ...prevState,\r\n              [el]: {\r\n                xTraces: gaps,\r\n                yTraces: durations,\r\n                avgTraces: avgs,\r\n                type: ctype,\r\n                title: res.data[el][\"title\"],\r\n              },\r\n            }));\r\n          } else if (ctype === \"histogram\") {\r\n            setTraces((prevState: any) => ({\r\n              ...prevState,\r\n              [el]: {\r\n                xTraces: res.data[el][\"data\"],\r\n                type: ctype,\r\n                title: res.data[el][\"title\"],\r\n              },\r\n            }));\r\n          }\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setTraces({});\r\n      });\r\n  }, [dataSet]);\r\n\r\n  const handleCheck = (event: any) => {\r\n    const { name, checked } = event.currentTarget;\r\n    setChecked((prevState) => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const handleDataSetClick = (event: any) => {\r\n    event.preventDefault();\r\n    const { id, name } = event.currentTarget;\r\n    setDataSet(id);\r\n    setLineType(name);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n      <Grid item md={12}>\r\n        <Grid\r\n          container\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={1}\r\n          style={{ backgroundColor: grey[200], minHeight: \"10vh\" }}\r\n        >\r\n          <Grid item md={3}>\r\n            <Button\r\n              id=\"as_needed_handoff\"\r\n              name=\"coverage\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={handleDataSetClick}\r\n              style={{ marginLeft: \"15px\" }}\r\n              fullWidth\r\n            >\r\n              {`RF Coverage (%)`}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item md={2}>\r\n            <Button\r\n              id=\"maximum_powee_handoff\"\r\n              name=\"gap\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={handleDataSetClick}\r\n              style={{ marginLeft: \"15px\" }}\r\n              fullWidth\r\n            >\r\n              {`Gap (%)`}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item md={12} style={{ textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\">\r\n          {dataSet === \"as_needed_handoff\"\r\n            ? `RF Coverage (%) vs. User Inclination`\r\n            : `GAP (%) vs. User Inclination`}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item md={12} style={{ marginLeft: \"15px\" }}>\r\n        <OptionAddon\r\n          checked={checked}\r\n          viewMethod={viewMethod}\r\n          onChecked={handleCheck}\r\n          resetPlot={() => setReset(!reset)}\r\n          onViewMethod={(e: any) => setViewMethod(e.currentTarget.name)}\r\n        />\r\n      </Grid>\r\n\r\n      {/* FIXME: check at the process of cart integration.\r\n      <Grid item md={12} style={{ zIndex: 1000 }}>\r\n        <MathJax.Provider>\r\n          <MathJax.Node formula={props.text} />\r\n        </MathJax.Provider>\r\n      </Grid> */}\r\n      \r\n      <Grid item md={12} style={{ marginLeft: \"15px\" }}>\r\n        <Grid container justify=\"center\" spacing={2}>\r\n          {viewMethod === \"3d_view\" ? (\r\n            <Grid item md={12}>\r\n              <ThreeViewSection\r\n                data={props.data}\r\n                equation={props.equation}\r\n                maxAltitude={props.maxAltitude}\r\n                alt={props.alt}\r\n                inc={props.inc}\r\n                value={props.value}\r\n                reset={reset}\r\n                isLegend={false}\r\n                isSub={true}\r\n                plot_rows={plot_rows}\r\n                surface_rows={surface_rows}\r\n                zAxisLabel={zAxisLabel}\r\n                checked={checked}\r\n                onClick={() => setSelected(true)}\r\n              />\r\n            </Grid>\r\n          ) : (\r\n            <Grid item md={12}>\r\n              <TwoViewSection\r\n                data={props.data}\r\n                equation={props.equation}\r\n                maxAltitude={props.maxAltitude}\r\n                alt={props.alt}\r\n                inc={props.inc}\r\n                value={props.value}\r\n                isLegend={false}\r\n                isSub={true}\r\n                plot_rows={plot_rows}\r\n                surface_rows={surface_rows}\r\n                yAxisLabel={zAxisLabel}\r\n                checked={checked}\r\n                onClick={() => setSelected(true)}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      {selected && <></>}\r\n      <ChartsLibsSection traces={traces} dataSet={dataSet} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AnalyzeRegressionSection;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CssBaseline,\r\n  Slide,\r\n  Typography,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nimport { getCartItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport AnalyzeRegressionSection from \"./analyze-regression-section\";\r\n\r\nconst INIT_PARAMS = {\r\n  altitude: 300,\r\n  availabilityThreshold: 0.999,\r\n  dataVolumeNeed: 0.1,\r\n  gapThreshold: 6,\r\n  inclination: 30,\r\n  latitude: 30,\r\n  launchYear: 2030,\r\n  longitude: 30,\r\n  navAccuracyNeed: 20,\r\n  powerAmplifier: 1,\r\n  value: 100,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction CartPanel(props: any) {\r\n  const [source, setSource] = useState({} as any);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [terrestrial, setTerrestrial] = useState({});\r\n  const [maxAltitude, setMaxAltitude] = useState(0);\r\n  const [coefficients, setCoefficients] = useState({} as any);\r\n  const [text, setText] = useState(\"\");\r\n  const deepDive = \"system1/coverage\";\r\n  const metric = deepDive.split(\"/\")[1];\r\n  const missionType = \"orbital\";\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setText(\"\");\r\n    getCartItems({ type: missionType })\r\n      .then((res: any) => {\r\n        setTerrestrial(res.data.terrestrial);\r\n        setSource(res.data.data);\r\n        setMaxAltitude(res.data.maxAltitude);\r\n        setCoefficients(res.data.coefficients);\r\n        setText(res.data.text);\r\n\r\n        // FIXME: there is no real data for it.\r\n        //\r\n        // setText(\r\n        //   props.equationsTex[system.replace(\" \", \"_\").toLowerCase()][metric](\r\n        //     data[\"coefficients\"][metric]\r\n        //   )\r\n        // );\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const equation = (inc: any, alt: any, metric: string) => {\r\n    // FIXME: activate in integration of cart.\r\n    //\r\n    // const altitude = parseFloat(alt);\r\n    // const inclination = parseFloat(inc);\r\n\r\n    // const coefs = coefficients[metric];\r\n    // const eqn = props.equations[system.replace(\" \", \"_\").toLowerCase()][metric];\r\n\r\n    // return eqn(coefs, altitude, inclination);\r\n    return inc;\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      onClose={() => props.onClose()}\r\n      classes={{ paper: classes.dialogDeep }}\r\n    >\r\n      <CssBaseline />\r\n      <MuiDialogTitle>\r\n        <Typography component=\"strong\" variant=\"h6\">\r\n          {\"Cart Integration Panel\"}\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"Close\"\r\n          className={classes.dialogCloseBtn}\r\n          onClick={() => props.onClose()}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </MuiDialogTitle>\r\n      <DialogContent\r\n        dividers={true}\r\n        style={{ paddingRight: 0, paddingLeft: 0, overflowX: \"hidden\" }}\r\n      >\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={12}>\r\n            {!isLoading &&\r\n              (missionType === \"orbital\" ? (\r\n                <AnalyzeRegressionSection\r\n                  equation={(x: any, y: any, m: any) => equation(x, y, m)}\r\n                  maxAltitude={maxAltitude}\r\n                  alt={INIT_PARAMS.altitude}\r\n                  inc={INIT_PARAMS.inclination}\r\n                  value={INIT_PARAMS.value}\r\n                  data={source}\r\n                  selectedItem={metric}\r\n                  text={text}\r\n                />\r\n              ) : (\r\n                <></>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default CartPanel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  CssBaseline,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Tab,\r\n  Tabs,\r\n  AppBar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { getItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport LineChartSection from \"./line-chart-section\";\r\nimport HistogramChartSection from \"./histogram-chart-section\";\r\nimport BoxChartSection from \"./box-chart-section\";\r\nimport TerrestrialHeatMap from \"./terrestrial-heatmap-chart\";\r\nimport CartPanel from \"../cart-panel\";\r\n\r\nconst INIT_MENUS = [\r\n  { id: \"as_needed_handoff\", name: \"Power below threshold handoff\" },\r\n  { id: \"maximum_powee_handoff\", name: \"Maximum power immediate handoff\" },\r\n];\r\n\r\nconst TabPanel = (props: any) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction ChartPanel() {\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selected, setSelected] = useState(\"none\");\r\n  const [tab, setTab] = useState(0);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (selected !== \"none\")\r\n      getItems(selected)\r\n        .then((res) => {\r\n          Object.keys(res.data).map((el) => {\r\n            let ctype: String = res.data[el][\"type\"];\r\n            let gaps: Array<any> = [];\r\n            let durations: Array<any> = [];\r\n            let avgs: Array<any> = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === \"line\") {\r\n              res.data[el][\"data\"].map((item: Array<any>, idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[0]);\r\n                avgs.push(item[1]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            } else if (ctype === \"histogram\") {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: res.data[el][\"data\"],\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n  }, [selected]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Container component=\"main\" maxWidth=\"lg\">\r\n          <CssBaseline />\r\n          <Card className={classes.chartCard}>\r\n            <CardHeader\r\n              title={\r\n                <Typography component=\"h1\" variant=\"h5\" className=\"m-3\">\r\n                  {`CART Data Statistics Dashboard (Prototype)`}\r\n                </Typography>\r\n              }\r\n              action={\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setIsOpen(true)}\r\n                >\r\n                  {\"Open Chart\"}\r\n                </Button>\r\n              }\r\n            />\r\n            <CardContent className=\"ml-3 mr-3\">\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={tab}\r\n                  onChange={(e, val) => setTab(val)}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"fullWidth\"\r\n                  aria-label=\"full width tabs example\"\r\n                >\r\n                  <Tab label=\"Data Statistics Dashboard\" {...a11yProps(0)} />\r\n                  <Tab label=\"Heat Map\" {...a11yProps(1)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews\r\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={tab}\r\n                onChangeIndex={(index: any) => setTab(index)}\r\n              >\r\n                <TabPanel value={tab} index={0}>\r\n                  <Grid\r\n                    container\r\n                    spacing={3}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item md={4}>\r\n                      <Select\r\n                        name=\"\"\r\n                        value={selected}\r\n                        onChange={(e: any) => setSelected(e.target.value)}\r\n                        className={classes.searchSelect}\r\n                        style={selected === \"none\" ? { color: grey[500] } : {}}\r\n                        fullWidth\r\n                      >\r\n                        <MenuItem\r\n                          value=\"none\"\r\n                          style={{ opacity: 0.87 }}\r\n                          disabled\r\n                        >\r\n                          {\"Select Data Set…\"}\r\n                        </MenuItem>\r\n                        {INIT_MENUS.map((item) => (\r\n                          <MenuItem value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    <Grid item md={8}></Grid>\r\n                    {Object.keys(traces).map((item) => (\r\n                      <Grid item md={6} key={item}>\r\n                        <Grid container spacing={3}>\r\n                          {traces[item].type === \"line\" && (\r\n                            <Grid item md={12}>\r\n                              <LineChartSection {...traces[item]} />\r\n                            </Grid>\r\n                          )}\r\n                          {traces[item].type === \"histogram\" && (\r\n                            <>\r\n                              <Grid item md={12}>\r\n                                <HistogramChartSection {...traces[item]} />\r\n                              </Grid>\r\n                              <Grid item md={12}>\r\n                                <BoxChartSection {...traces[item]} />\r\n                              </Grid>\r\n                            </>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                  <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item md={12}>\r\n                      <TerrestrialHeatMap />\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </Grid>\r\n      <CartPanel isOpen={isOpen} onClose={() => setIsOpen(false)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartPanel;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n    Container,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    Typography,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\n\r\nfunction NoMatch() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <CssBaseline />\r\n            <Card className={classes.authcard}>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {`404 | Page not found :(`}\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <p>{`Maybe the page you are looking for has been removed, or you typed in the wrong URL`}</p>\r\n                </CardContent>\r\n                <Link to=\"/\" className={classes.link}>{`Back To Home`}</Link>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport ChartPanel from \"./pages/chart-panel\";\r\nimport NoMatch from \"./pages/auth-panel/NoMatch\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={ChartPanel} />\r\n        <Route path=\"*\" component={NoMatch} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}