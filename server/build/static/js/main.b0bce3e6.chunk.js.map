{"version":3,"sources":["pages/chart-panel/index.tsx","pages/chart-panel/terrestrial-heatmap-chart/index.tsx","pages/cart-panel/index.tsx","pages/cart-panel/analyze-regression-section/index.tsx","pages/cart-panel/analyze-regression-section/two-view-section/index.tsx","pages/cart-panel/analyze-regression-section/three-view-section/index.tsx","components/Button/optionAddon.tsx","components/Button/minusAddon.tsx","constants/index.ts","components/Select/index.tsx","components/Button/plusAddon.tsx","pages/cart-panel/analyze-regression-section/charts-libs-section/index.tsx","pages/auth-panel/NoMatch.tsx","App.tsx","index.tsx","utils/styles.ts","API.ts","utils/util.ts","pages/chart-panel/line-chart-section/index.tsx","pages/chart-panel/histogram-chart-section/index.tsx","pages/chart-panel/box-chart-section/index.tsx"],"names":["INIT_MENUS","id","name","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","p","a11yProps","ChartPanel","useState","traces","setTraces","isOpen","setIsOpen","selected","setSelected","tab","setTab","theme","useTheme","classes","useStyles","useEffect","getItems","then","res","data","eval","Object","keys","map","el","ctype","gaps","durations","avgs","item","idx","push","prevState","xTraces","yTraces","avgTraces","type","title","catch","container","component","maxWidth","className","chartCard","variant","action","color","onClick","position","onChange","e","val","indicatorColor","textColor","aria-label","label","axis","direction","onChangeIndex","spacing","justify","alignItems","md","target","searchSelect","style","grey","fullWidth","opacity","disabled","key","onClose","INIT_SOURCE","heatmap","intrpl","TerrestrialHeatMap","mode","setMode","source","setSource","getPlotItems","x","y","z","layout","width","height","xaxis","zeroline","range","tickmode","tick0","dtick","yaxis","lat","lon","mapbox","center","zoom","config","mapboxAccessToken","hoverinfo","borderColor","border","borderRadius","padding","zIndex","size","currentTarget","marginRight","INIT_PARAMS","Transition","React","forwardRef","ref","CartPanel","isLoading","setIsLoading","setTerrestrial","maxAltitude","setMaxAltitude","setCoefficients","text","setText","metric","split","getCartItems","terrestrial","coefficients","open","TransitionComponent","paper","dialogDeep","dialogCloseBtn","dividers","paddingRight","overflowX","equation","m","alt","inc","selectedItem","INIT_CHECK_STATUS","show_surface","show_scatter","createData","rows","AnalyzeRegressionSection","viewMethod","setViewMethod","dataSet","setDataSet","lineType","setLineType","checked","setChecked","reset","setReset","plot_rows","plot_value","surface_rows","zAxisLabel","handleCheck","event","handleDataSetClick","preventDefault","onChecked","resetPlot","onViewMethod","Provider","Node","formula","isLegend","isSub","yAxisLabel","row","scope","isTable","TwoViewSection","setConfig","unpack","configData","inclination","parseInt","new_plot_rows","filter","new_surface_rows","line","marker","autosize","showlegend","hovermode","margin","l","r","b","t","onHover","cursor","onUnhover","onDoubleClick","ThreeViewSection","parseFloat","window","innerWidth","scene","aspectratio","camera","eye","up","Math","max","zaxis","min","OptionAddon","marginBottom","textAlign","fontSize","orientation","flexItem","control","gutterBottom","dangerouslySetInnerHTML","__html","placement","tooltip","MinusAddon","Grid","IconButton","onSelected","Divider","MENU_ITEMS","as_needed_handoff","dataset","maximum_powee_handoff","Selection","Menu","anchorEl","keepMounted","Boolean","onAnchorEl","Constants","MenuItem","PlusAddon","Select","ChartsLibsSection","setAnchorEl","handleSelected","includes","length","Fragment","sort","NoMatch","Container","CssBaseline","Card","authcard","CardHeader","Typography","CardContent","to","link","App","exact","path","ReactDOM","render","document","getElementById","makeStyles","marginTop","minWidth","textDecoration","textAlignLast","right","top","palette","contentSection","backgroundColor","maxHeight","overflow","baseUrl","a","params","axios","get","Error","post","useWindowSize","undefined","windowSize","setWindowSize","handleResize","innerHeight","addEventListener","removeEventListener","LineChartSection","toUpperCase","legend","xanchor","font","family","pad","titlefont","showgrid","zerolinecolor","zerolinewidth","displayModeBar","HistogramChartSection","join","BoxChartSection"],"mappings":"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","file":"static/js/main.b0bce3e6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  CssBaseline,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Tab,\r\n  Tabs,\r\n  AppBar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { getItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport LineChartSection from \"./line-chart-section\";\r\nimport HistogramChartSection from \"./histogram-chart-section\";\r\nimport BoxChartSection from \"./box-chart-section\";\r\nimport TerrestrialHeatMap from \"./terrestrial-heatmap-chart\";\r\nimport CartPanel from \"../cart-panel\";\r\n\r\nconst INIT_MENUS = [\r\n  { id: \"as_needed_handoff\", name: \"Power below threshold handoff\" },\r\n  { id: \"maximum_powee_handoff\", name: \"Maximum power immediate handoff\" },\r\n];\r\n\r\nconst TabPanel = (props: any) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction ChartPanel() {\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selected, setSelected] = useState(\"none\");\r\n  const [tab, setTab] = useState(0);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (selected !== \"none\")\r\n      getItems(selected)\r\n        .then((res) => {\r\n          let data = eval(\"[\" + res.data + \"]\")[0];\r\n\r\n          Object.keys(data).map((el) => {\r\n            let ctype: String = data[el][\"type\"];\r\n            let gaps: Array<any> = [];\r\n            let durations: Array<any> = [];\r\n            let avgs: Array<any> = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === \"line\") {\r\n              data[el][\"data\"].map((item: Array<any>, idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[3]);\r\n                avgs.push(item[4]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: data[el][\"title\"],\r\n                },\r\n              }));\r\n            } else if (ctype === \"histogram\") {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: data[el][\"data\"],\r\n                  type: ctype,\r\n                  title: data[el][\"title\"],\r\n                },\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n  }, [selected]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Container component=\"main\" maxWidth=\"lg\">\r\n          <CssBaseline />\r\n          <Card className={classes.chartCard}>\r\n            <CardHeader\r\n              title={\r\n                <Typography component=\"h1\" variant=\"h5\" className=\"m-3\">\r\n                  {`CART Data Statistics Dashboard (Prototype)`}\r\n                </Typography>\r\n              }\r\n              action={\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setIsOpen(true)}\r\n                >\r\n                  {\"Open Chart\"}\r\n                </Button>\r\n              }\r\n            />\r\n            <CardContent className=\"ml-3 mr-3\">\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={tab}\r\n                  onChange={(e, val) => setTab(val)}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"fullWidth\"\r\n                  aria-label=\"full width tabs example\"\r\n                >\r\n                  <Tab label=\"Data Statistics Dashboard\" {...a11yProps(0)} />\r\n                  <Tab label=\"Heat Map\" {...a11yProps(1)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews\r\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={tab}\r\n                onChangeIndex={(index: any) => setTab(index)}\r\n              >\r\n                <TabPanel value={tab} index={0}>\r\n                  <Grid\r\n                    container\r\n                    spacing={3}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item md={4}>\r\n                      <Select\r\n                        name=\"\"\r\n                        value={selected}\r\n                        onChange={(e: any) => setSelected(e.target.value)}\r\n                        className={classes.searchSelect}\r\n                        style={selected === \"none\" ? { color: grey[500] } : {}}\r\n                        fullWidth\r\n                      >\r\n                        <MenuItem\r\n                          value=\"none\"\r\n                          style={{ opacity: 0.87 }}\r\n                          disabled\r\n                        >\r\n                          {\"Select Data Set…\"}\r\n                        </MenuItem>\r\n                        {INIT_MENUS.map((item) => (\r\n                          <MenuItem value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    <Grid item md={8}></Grid>\r\n                    {Object.keys(traces).map((item) => (\r\n                      <Grid item md={6} key={item}>\r\n                        <Grid container spacing={3}>\r\n                          {traces[item].type === \"line\" && (\r\n                            <Grid item md={12}>\r\n                              <LineChartSection {...traces[item]} />\r\n                            </Grid>\r\n                          )}\r\n                          {traces[item].type === \"histogram\" && (\r\n                            <>\r\n                              <Grid item md={12}>\r\n                                <HistogramChartSection {...traces[item]} />\r\n                              </Grid>\r\n                              <Grid item md={12}>\r\n                                <BoxChartSection {...traces[item]} />\r\n                              </Grid>\r\n                            </>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                  <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item md={12}>\r\n                      <TerrestrialHeatMap />\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </Grid>\r\n      <CartPanel isOpen={isOpen} onClose={() => setIsOpen(false)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartPanel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { Grid, Button, Box } from \"@material-ui/core\";\r\n\r\nimport { getPlotItems } from \"../../../API\";\r\n\r\nconst INIT_SOURCE = {\r\n  heatmap: {},\r\n  intrpl: {},\r\n};\r\n\r\nfunction TerrestrialHeatMap() {\r\n  const [mode, setMode] = useState(\"heatmap\");\r\n  const [source, setSource] = useState(INIT_SOURCE as any);\r\n\r\n  useEffect(() => {\r\n    getPlotItems()\r\n      .then((res: any) => {\r\n        setSource(res.data);\r\n      })\r\n      .catch(() => setSource(INIT_SOURCE));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        {mode === \"heatmap\" ? (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.heatmap.x,\r\n                    y: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.heatmap.x,\r\n                    lon: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"densitymapbox\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.intrpl.x,\r\n                    y: source.intrpl.y,\r\n                    z: source.intrpl.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.intrpl.x,\r\n                    lon: source.intrpl.x,\r\n                    z: source.intrpl.z,\r\n                    type: \"densitymapbox\",\r\n                    hoverinfo: \"skip\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n      <Grid item md={6}>\r\n        <Box\r\n          borderColor=\"primary.main\"\r\n          border={2}\r\n          borderRadius={5}\r\n          padding={2}\r\n          style={{ zIndex: 1000 }}\r\n        >\r\n          <Button\r\n            name=\"heatmap\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\", marginRight: \"4%\" }}\r\n          >\r\n            {\"Non-Interpolated\"}\r\n          </Button>\r\n          <Button\r\n            name=\"intrpl\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\" }}\r\n          >\r\n            {\"Interpolated\"}\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TerrestrialHeatMap;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CssBaseline,\r\n  Slide,\r\n  Typography,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nimport { getCartItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport AnalyzeRegressionSection from \"./analyze-regression-section\";\r\n\r\nconst INIT_PARAMS = {\r\n  altitude: 300,\r\n  availabilityThreshold: 0.999,\r\n  dataVolumeNeed: 0.1,\r\n  gapThreshold: 6,\r\n  inclination: 30,\r\n  latitude: 30,\r\n  launchYear: 2030,\r\n  longitude: 30,\r\n  navAccuracyNeed: 20,\r\n  powerAmplifier: 1,\r\n  value: 100,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction CartPanel(props: any) {\r\n  const [source, setSource] = useState({} as any);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [terrestrial, setTerrestrial] = useState({});\r\n  const [maxAltitude, setMaxAltitude] = useState(0);\r\n  const [coefficients, setCoefficients] = useState({} as any);\r\n  const [text, setText] = useState(\"\");\r\n  const deepDive = \"system1/coverage\";\r\n  const metric = deepDive.split(\"/\")[1];\r\n  const missionType = \"orbital\";\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setText(\"\");\r\n    getCartItems({ type: missionType })\r\n      .then((res: any) => {\r\n        setTerrestrial(res.data.terrestrial);\r\n        setSource(res.data.data);\r\n        setMaxAltitude(res.data.maxAltitude);\r\n        setCoefficients(res.data.coefficients);\r\n        setText(res.data.text);\r\n\r\n        // FIXME: there is no real data for it.\r\n        //\r\n        // setText(\r\n        //   props.equationsTex[system.replace(\" \", \"_\").toLowerCase()][metric](\r\n        //     data[\"coefficients\"][metric]\r\n        //   )\r\n        // );\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const equation = (inc: any, alt: any, metric: string) => {\r\n    // FIXME: activate in integration of cart.\r\n    //\r\n    // const altitude = parseFloat(alt);\r\n    // const inclination = parseFloat(inc);\r\n\r\n    // const coefs = coefficients[metric];\r\n    // const eqn = props.equations[system.replace(\" \", \"_\").toLowerCase()][metric];\r\n\r\n    // return eqn(coefs, altitude, inclination);\r\n    return inc;\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      onClose={() => props.onClose()}\r\n      classes={{ paper: classes.dialogDeep }}\r\n    >\r\n      <CssBaseline />\r\n      <MuiDialogTitle>\r\n        <Typography component=\"strong\" variant=\"h6\">\r\n          {\"Cart Integration Panel\"}\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"Close\"\r\n          className={classes.dialogCloseBtn}\r\n          onClick={() => props.onClose()}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </MuiDialogTitle>\r\n      <DialogContent\r\n        dividers={true}\r\n        style={{ paddingRight: 0, overflowX: \"hidden\" }}\r\n      >\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={12}>\r\n            {!isLoading &&\r\n              (missionType === \"orbital\" ? (\r\n                <AnalyzeRegressionSection\r\n                  equation={(x: any, y: any, m: any) => equation(x, y, m)}\r\n                  maxAltitude={maxAltitude}\r\n                  alt={INIT_PARAMS.altitude}\r\n                  inc={INIT_PARAMS.inclination}\r\n                  value={INIT_PARAMS.value}\r\n                  data={source}\r\n                  selectedItem={metric}\r\n                  text={text}\r\n                />\r\n              ) : (\r\n                <></>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default CartPanel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MathJax from \"react-mathjax\";\r\n\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport TwoViewSection from \"./two-view-section\";\r\nimport ThreeViewSection from \"./three-view-section\";\r\nimport ChartsLibsSection from \"./charts-libs-section\";\r\nimport useStyles from \"../../../utils/styles\";\r\nimport OptionAddon from \"../../../components/Button/optionAddon\";\r\nimport { getItems } from \"../../../API\";\r\n\r\nconst INIT_CHECK_STATUS = {\r\n  show_surface: true,\r\n  show_scatter: true,\r\n};\r\n\r\nfunction createData(name: String, value: String) {\r\n  return { name, value };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Average (sec)\", \"xx\"),\r\n  createData(\"Time-Averaged Gap\", \"xx\"),\r\n  createData(\"Median (sec)\", \"xx\"),\r\n  createData(\"Maximum (minutes)\", \"xx\"),\r\n  createData(\"Minimum (sec)\", \"xx\"),\r\n  createData(\"Average # Gaps Per Orbit\", \"xx\"),\r\n  createData(\"Average # Gaps Per Day\", \"xx\"),\r\n];\r\n\r\nfunction AnalyzeRegressionSection(props: any) {\r\n  const [viewMethod, setViewMethod] = useState(\"2d_view\");\r\n  const [dataSet, setDataSet] = useState(\"as_needed_handoff\" as any);\r\n  const [lineType, setLineType] = useState(\"coverage\" as any);\r\n  const [checked, setChecked] = useState(INIT_CHECK_STATUS);\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [reset, setReset] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n  const plot_rows = props.data.plot_value;\r\n  const surface_rows: Array<any> = [];\r\n  const zAxisLabel = props.data.label;\r\n\r\n  useEffect(() => {\r\n    getItems(dataSet)\r\n      .then((res) => {\r\n        let data = eval(\"[\" + res.data + \"]\")[0];\r\n\r\n        Object.keys(data).map((el) => {\r\n          let ctype: String = data[el][\"type\"];\r\n          let gaps: Array<any> = [];\r\n          let durations: Array<any> = [];\r\n          let avgs: Array<any> = [];\r\n\r\n          // Detect chart type and set Traces\r\n          if (ctype === \"line\") {\r\n            data[el][\"data\"].map((item: Array<any>, idx: number) => {\r\n              gaps.push(idx + 1);\r\n              durations.push(item[3]);\r\n              avgs.push(item[4]);\r\n            });\r\n\r\n            setTraces((prevState: any) => ({\r\n              ...prevState,\r\n              [el]: {\r\n                xTraces: gaps,\r\n                yTraces: durations,\r\n                avgTraces: avgs,\r\n                type: ctype,\r\n                title: data[el][\"title\"],\r\n              },\r\n            }));\r\n          } else if (ctype === \"histogram\") {\r\n            setTraces((prevState: any) => ({\r\n              ...prevState,\r\n              [el]: {\r\n                xTraces: data[el][\"data\"],\r\n                type: ctype,\r\n                title: data[el][\"title\"],\r\n              },\r\n            }));\r\n          }\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setTraces({});\r\n      });\r\n  }, [dataSet]);\r\n\r\n  const handleCheck = (event: any) => {\r\n    const { name, checked } = event.currentTarget;\r\n    setChecked((prevState) => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const handleDataSetClick = (event: any) => {\r\n    event.preventDefault();\r\n    const { id, name } = event.currentTarget;\r\n    setDataSet(id);\r\n    setLineType(name);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n      <Grid item md={4}>\r\n        <Button\r\n          id=\"as_needed_handoff\"\r\n          name=\"coverage\"\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          onClick={handleDataSetClick}\r\n        >\r\n          {`RF Coverage Statistics`}\r\n        </Button>\r\n      </Grid>\r\n      <Grid item md={4}>\r\n        <Button\r\n          id=\"maximum_powee_handoff\"\r\n          name=\"gap\"\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          onClick={handleDataSetClick}\r\n        >\r\n          {`Coverage Gap Statistics`}\r\n        </Button>\r\n      </Grid>\r\n      <Grid item md={3} />\r\n      <Grid item md={12}>\r\n        <Divider style={{ paddingRight: \"24px\" }} />\r\n        <OptionAddon\r\n          checked={checked}\r\n          viewMethod={viewMethod}\r\n          onChecked={handleCheck}\r\n          resetPlot={() => setReset(!reset)}\r\n          onViewMethod={(e: any) => setViewMethod(e.currentTarget.name)}\r\n        />\r\n      </Grid>\r\n      <Grid item md={12} style={{ zIndex: 1000 }}>\r\n        <MathJax.Provider>\r\n          <MathJax.Node formula={props.text} />\r\n        </MathJax.Provider>\r\n      </Grid>\r\n      <Grid item md={12}>\r\n        <Grid container justify=\"center\" spacing={2}>\r\n          {viewMethod === \"3d_view\" ? (\r\n            <Grid item md={12}>\r\n              <ThreeViewSection\r\n                data={props.data}\r\n                equation={props.equation}\r\n                maxAltitude={props.maxAltitude}\r\n                alt={props.alt}\r\n                inc={props.inc}\r\n                value={props.value}\r\n                reset={reset}\r\n                isLegend={false}\r\n                isSub={true}\r\n                plot_rows={plot_rows}\r\n                surface_rows={surface_rows}\r\n                zAxisLabel={zAxisLabel}\r\n                checked={checked}\r\n                onClick={() => setSelected(true)}\r\n              />\r\n            </Grid>\r\n          ) : (\r\n            <Grid item md={12}>\r\n              <TwoViewSection\r\n                data={props.data}\r\n                equation={props.equation}\r\n                maxAltitude={props.maxAltitude}\r\n                alt={props.alt}\r\n                inc={props.inc}\r\n                value={props.value}\r\n                isLegend={false}\r\n                isSub={true}\r\n                plot_rows={plot_rows}\r\n                surface_rows={surface_rows}\r\n                yAxisLabel={zAxisLabel}\r\n                checked={checked}\r\n                onClick={() => setSelected(true)}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      {selected && (\r\n        <Grid item md={10}>\r\n          <Table aria-label=\"simple table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>{`Gap Statistic`}</TableCell>\r\n                <TableCell>{`Value`}</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row: any) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell>{row.value}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Grid>\r\n      )}\r\n      <ChartsLibsSection isTable={selected} traces={traces} dataSet={dataSet} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AnalyzeRegressionSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nfunction TwoViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row: any) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    const inclination = parseInt(props.inc);\r\n    const new_plot_rows = plot_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    const new_surface_rows = surface_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"lines\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.inc]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        showlegend: false,\r\n        hovermode: \"closest\",\r\n        width: 550,\r\n        height: 400,\r\n        margin: {\r\n          l: 60,\r\n          r: 15,\r\n          b: 35,\r\n          t: 15,\r\n        },\r\n        xaxis: {\r\n          title: `Altitude (km), Inclination=${props.inc} deg`,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n        yaxis: {\r\n          title: props.yAxisLabel,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n      }}\r\n      onHover={(e: any) => (e.event.target.style.cursor = \"pointer\")}\r\n      onUnhover={(e: any) => (e.event.target.style.cursor = \"crosshair\")}\r\n      onClick={() => props.onClick()}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TwoViewSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nfunction ThreeViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [reset, setReset] = useState(false);\r\n  const [config, setConfig] = useState([]);\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setReset(!reset);\r\n  }, [props.reset]);\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, \"altitude\"),\r\n          y: unpack(plot_rows, \"inclination\"),\r\n          z: unpack(plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"rgb(23, 190, 207)\",\r\n            size: 2,\r\n          },\r\n        },\r\n        {\r\n          x: unpack(surface_rows, \"altitude\"),\r\n          y: unpack(surface_rows, \"inclination\"),\r\n          z: unpack(surface_rows, \"value\"),\r\n          name: \"Model surface\",\r\n          opacity: 0.3,\r\n          type: \"mesh3d\",\r\n          color: \"rgb(252, 154, 7)\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, \"altitude\"),\r\n          y: unpack(plot_rows, \"inclination\"),\r\n          z: unpack(plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"rgb(23, 190, 207)\",\r\n            size: 2,\r\n          },\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(surface_rows, \"altitude\"),\r\n          y: unpack(surface_rows, \"inclination\"),\r\n          z: unpack(surface_rows, \"value\"),\r\n          name: \"Model surface\",\r\n          opacity: 0.3,\r\n          type: \"mesh3d\",\r\n          color: \"rgb(252, 154, 7)\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          type: \"mesh3d\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n        },\r\n        {\r\n          x: [parseFloat(props.alt)],\r\n          y: [parseFloat(props.inc)],\r\n          z: [parseFloat(props.value)],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, reset]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        width: window.innerWidth * 0.4,\r\n        margin: {\r\n          l: 0,\r\n          r: 0,\r\n          b: 0,\r\n          t: 0,\r\n        },\r\n        scene: {\r\n          aspectratio: {\r\n            x: 0.6,\r\n            y: 0.6,\r\n            z: 0.6,\r\n          },\r\n          camera: {\r\n            center: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 0,\r\n            },\r\n            eye: {\r\n              x: 0.9,\r\n              y: 0.9,\r\n              z: 0.9,\r\n            },\r\n            up: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 1,\r\n            },\r\n          },\r\n          xaxis: {\r\n            title: \"Altitude (km)\",\r\n            type: \"linear\",\r\n            range: [Math.max(...unpack(surface_rows, \"altitude\")), 0],\r\n            zeroline: false,\r\n          },\r\n          yaxis: {\r\n            title: \"Inclination (deg)\",\r\n            type: \"linear\",\r\n            range: [90, 0],\r\n            zeroline: false,\r\n          },\r\n          zaxis: {\r\n            title: props.zAxisLabel,\r\n            type: \"linear\",\r\n            range: [\r\n              Math.min(...unpack(surface_rows, \"value\")),\r\n              Math.max(...unpack(surface_rows, \"value\")),\r\n            ],\r\n            zeroline: false,\r\n          },\r\n        },\r\n        showlegend: false,\r\n      }}\r\n      onClick={() => props.onClick()}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThreeViewSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Tooltip,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\n\r\nfunction OptionAddon(props: any) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ marginBottom: 10 }}\r\n    >\r\n      <Grid item md={4}></Grid>\r\n      <Grid item md={8}>\r\n        <Typography component=\"p\" style={{ textAlign: \"end\" }}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            className=\"mt-2 mb-2\"\r\n            style={{ fontSize: 14 }}\r\n          >\r\n            {`Graph Options`}\r\n            {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          </IconButton>\r\n        </Typography>\r\n      </Grid>\r\n      {isOpen && (\r\n        <Grid item md={12} style={{ marginRight: 5 }}>\r\n          <Box\r\n            borderColor=\"primary.main\"\r\n            border={2}\r\n            borderRadius={5}\r\n            padding={2}\r\n          >\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n              <Grid item md={2}>\r\n                <Grid\r\n                  container\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item md={12}>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"2d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                    >\r\n                      {\"2D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={12}>\r\n                    <Button\r\n                      name=\"3d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                    >\r\n                      {\"3D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"show_surface\"\r\n                      checked={props.checked.show_surface}\r\n                      size=\"small\"\r\n                      onChange={(e) => props.onChecked(e)}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  classes={{ label: classes.label }}\r\n                  label=\"Show Regression Model Surface\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"show_scatter\"\r\n                      checked={props.checked.show_scatter}\r\n                      size=\"small\"\r\n                      onChange={(e) => props.onChecked(e)}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  classes={{ label: classes.label }}\r\n                  label=\"Show Underlying Data\"\r\n                />\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={3}>\r\n                <Tooltip\r\n                  title={\r\n                    <Typography\r\n                      gutterBottom\r\n                      component=\"p\"\r\n                      variant=\"body1\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: \"Reset 3D plot\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  placement=\"top-start\"\r\n                  classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                  <span>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"Reset\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled={props.viewMethod === \"2d_view\" ? true : false}\r\n                      onClick={() => props.resetPlot()}\r\n                      fullWidth\r\n                    >\r\n                      {\"Reset\"}\r\n                    </Button>\r\n                  </span>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default OptionAddon;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\n\r\nfunction MinusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={() => props.onSelected(props.id)}>\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MinusAddon;\r\n","export const MENU_ITEMS = {\r\n  as_needed_handoff: [\r\n    { id: 1, dataset: \"coverage\", name: \"Running Average\" },\r\n    { id: 2, dataset: \"coverage_histogram\", name: \"Distribution\" },\r\n    { id: 3, dataset: \"coverage_histogram\", name: \"Statistics Chart\" },\r\n  ],\r\n  maximum_powee_handoff: [\r\n    { id: 1, dataset: \"gap\", name: \"Running Average\" },\r\n    { id: 2, dataset: \"gap_histogram\", name: \"Distribution\" },\r\n    { id: 3, dataset: \"gap_histogram\", name: \"Statistics Chart\" },\r\n  ],\r\n};\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\nimport * as Constants from \"../../constants\";\r\n\r\nfunction Selection(props: any) {\r\n  return (\r\n    <Menu\r\n      anchorEl={props.anchorEl}\r\n      keepMounted\r\n      open={Boolean(props.anchorEl)}\r\n      onClose={() => props.onAnchorEl(null)}\r\n    >\r\n      {Constants.MENU_ITEMS[\"as_needed_handoff\"].map((el: any) => (\r\n        <MenuItem\r\n          id={el.id}\r\n          key={el.id}\r\n          onClick={() => props.onSelected(el.id)}\r\n        >\r\n          {el.name}\r\n        </MenuItem>\r\n      ))}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport { Grid, IconButton, Divider } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Selection from \"../Select\";\r\n\r\nfunction PlusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={(e) => props.onAnchorEl(e.currentTarget)}>\r\n            <AddCircleOutlineIcon />\r\n          </IconButton>\r\n          <Selection\r\n            anchorEl={props.anchorEl}\r\n            onAnchorEl={(value: any) => props.onAnchorEl(value)}\r\n            onSelected={(value: any) => props.onSelected(value)}\r\n          />\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PlusAddon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport MinusAddon from \"../../../../components/Button/minusAddon\";\r\nimport PlusAddon from \"../../../../components/Button/plusAddon\";\r\nimport LineChartSection from \"../../../chart-panel/line-chart-section\";\r\nimport HistogramChartSection from \"../../../chart-panel/histogram-chart-section\";\r\nimport BoxChartSection from \"../../../chart-panel/box-chart-section\";\r\nimport * as Constants from \"../../../../constants\";\r\nimport useStyles from \"../../../../utils/styles\";\r\n\r\nfunction ChartsLibsSection(props: any) {\r\n  const [selected, setSelected] = useState([] as any);\r\n  const [anchorEl, setAnchorEl] = useState(null as any);\r\n  const classes = useStyles();\r\n\r\n  const handleSelected = (id: any, type: string) => {\r\n    if (!selected.includes(id) && type === \"add\") {\r\n      setSelected((prevState: any) => [...prevState, id]);\r\n    } else if (type === \"remove\") {\r\n      setSelected(selected.filter((item: any) => item !== id));\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isTable && selected.length === 0 && (\r\n        <PlusAddon\r\n          selected={selected}\r\n          anchorEl={anchorEl}\r\n          onAnchorEl={(value: any) => setAnchorEl(value)}\r\n          onSelected={(value: any) => handleSelected(value, \"add\")}\r\n        />\r\n      )}\r\n      {\r\n        // @ts-ignore\r\n        Constants.MENU_ITEMS[props.dataSet].map(\r\n          (item: any) =>\r\n            Object.keys(props.traces).includes(item.dataset) &&\r\n            selected.includes(item.id) && (\r\n              <React.Fragment key={item.id}>\r\n                <MinusAddon\r\n                  id={item.id}\r\n                  selected={selected}\r\n                  anchorEl={anchorEl}\r\n                  onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                  onSelected={(value: any) => handleSelected(value, \"remove\")}\r\n                />\r\n                <Grid item md={12}>\r\n                  {item.id === 1 && (\r\n                    <LineChartSection {...props.traces[item.dataset]} />\r\n                  )}\r\n                  {item.id === 2 && (\r\n                    <HistogramChartSection {...props.traces[item.dataset]} />\r\n                  )}\r\n                  {item.id === 3 && (\r\n                    <BoxChartSection {...props.traces[item.dataset]} />\r\n                  )}\r\n                </Grid>\r\n                {selected.sort()[selected.length - 1] === item.id && (\r\n                  <PlusAddon\r\n                    selected={selected}\r\n                    anchorEl={anchorEl}\r\n                    onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                    onSelected={(value: any) => handleSelected(value, \"add\")}\r\n                  />\r\n                )}\r\n              </React.Fragment>\r\n            )\r\n        )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartsLibsSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n    Container,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    Typography,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\n\r\nfunction NoMatch() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <CssBaseline />\r\n            <Card className={classes.authcard}>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {`404 | Page not found :(`}\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <p>{`Maybe the page you are looking for has been removed, or you typed in the wrong URL`}</p>\r\n                </CardContent>\r\n                <Link to=\"/\" className={classes.link}>{`Back To Home`}</Link>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport ChartPanel from \"./pages/chart-panel\";\r\nimport NoMatch from \"./pages/auth-panel/NoMatch\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={ChartPanel} />\r\n        <Route path=\"*\" component={NoMatch} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  authcard: {\r\n    marginTop: \"10vh\",\r\n    minWidth: \"30vw\",\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  link: {\r\n    paddingRight: theme.spacing(2),\r\n    color: \"#3385ff\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  chartCard: {\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  searchSelect: {\r\n    textAlignLast: \"center\",\r\n  },\r\n\r\n  tooltip: {\r\n    maxWidth: \"500px\",\r\n  },\r\n\r\n  dialogDeep: {\r\n    minWidth: \"700px !important\",\r\n    height: \"90vh !important\",\r\n    maxWidth: \"700px !important\",\r\n  },\r\n\r\n  dialogCloseBtn: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    zIndex: 100,\r\n  },\r\n\r\n  contentSection: {\r\n    backgroundColor: grey[500],\r\n    height: \"100%\",\r\n    maxHeight: \"55vh\",\r\n    overflow: \"auto\",\r\n  },\r\n\r\n  label: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\nconst baseUrl: string = \"http://127.0.0.1:7000\";\r\n\r\nexport const getItems = async (selected: String) => {\r\n  const params = { selected };\r\n\r\n  try {\r\n    const res: AxiosResponse = await axios.get(baseUrl + \"/get-items\", {\r\n      params,\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getPlotItems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(baseUrl + \"/get-plot\");\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getCartItems = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.post(baseUrl + \"/get-cart\", params);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined as any,\r\n    height: undefined as any,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction LineChartSection(props: any) {\r\n  const size = useWindowSize();\r\n  \r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          y: props.yTraces,\r\n          name: \"Gap Event Duration\",\r\n          type: \"scatter\",\r\n          mode: \"lines+markers\",\r\n          marker: { color: \"red\" },\r\n        },\r\n        {\r\n          x: props.xTraces,\r\n          y: props.avgTraces,\r\n          name: \"Running Average\",\r\n          type: \"scatter\",\r\n          marker: { color: \"blue\" },\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: props.title.toUpperCase(),\r\n        width: size.width * 0.35,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Gap Event (Sequence)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Gap Duration (seconds)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LineChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction HistogramChartSection(props: any) {\r\n  const size = useWindowSize();\r\n  \r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          name: \"Duration\",\r\n          type: \"histogram\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: props.title.toUpperCase().split('_').join(' '),\r\n        width: size.width * 0.35,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Occurances\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HistogramChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction BoxChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          y: props.xTraces,\r\n          name: \"\",\r\n          type: \"box\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `${props.title.toUpperCase().split(\" \")[0]} STATISTICS`,\r\n        width: size.width * 0.35,\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        yaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BoxChartSection;\r\n"],"sourceRoot":""}