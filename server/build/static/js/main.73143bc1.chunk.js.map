{"version":3,"sources":["API.ts","utils/styles.ts","utils/util.ts","pages/chart-panel/line-chart-section/index.tsx","pages/chart-panel/histogram-chart-section/index.tsx","pages/chart-panel/box-chart-section/index.tsx","pages/chart-panel/terrestrial-heatmap-chart/index.tsx","pages/cart-dashboard-panel/analyze-regression-section/two-view-section/index.tsx","pages/cart-dashboard-panel/analyze-regression-section/three-view-section/index.tsx","components/Button/MinusAddon.tsx","constants/index.ts","components/Select/index.tsx","components/Button/PlusAddon.tsx","pages/cart-dashboard-panel/analyze-regression-section/charts-libs-section/line-chart-section/index.tsx","pages/cart-dashboard-panel/analyze-regression-section/charts-libs-section/histogram-chart-section/index.tsx","pages/cart-dashboard-panel/analyze-regression-section/charts-libs-section/box-chart-section/index.tsx","pages/cart-dashboard-panel/analyze-regression-section/charts-libs-section/selected-chart-section/index.tsx","pages/cart-dashboard-panel/analyze-regression-section/charts-libs-section/index.tsx","pages/cart-dashboard-panel/analyze-regression-section/header-section/index.tsx","components/Button/OptionAddon.tsx","pages/cart-dashboard-panel/analyze-regression-section/index.tsx","pages/cart-dashboard-panel/index.tsx","pages/cart-panel/analyze-regression-section/two-view-section/index.tsx","pages/cart-panel/analyze-regression-section/three-view-section/index.tsx","pages/cart-panel/analyze-regression-section/charts-libs-section/selected-chart-section/index.tsx","pages/cart-panel/analyze-regression-section/charts-libs-section/index.tsx","pages/cart-panel/analyze-regression-section/index.tsx","pages/cart-panel/index.tsx","pages/chart-panel/index.tsx","pages/auth-panel/NoMatch.tsx","App.tsx","index.tsx"],"names":["getItems","data","a","params","selected","dataSet","version","axios","get","res","Error","getPlotItems","getCartItems","getSystems","getSystemVersion","useStyles","makeStyles","theme","authcard","marginTop","minWidth","padding","spacing","link","paddingRight","color","textDecoration","chartCard","searchSelect","textAlignLast","tooltip","maxWidth","dialogDeep","height","backgroundColor","palette","grey","dashDialogDeep","dialogCloseBtn","position","right","top","zIndex","contentSection","maxHeight","overflow","label","fontSize","dashCard","minHeight","formControl","margin","useWindowSize","useState","width","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","LineChartSection","props","size","x","xTraces","y","yTraces","name","type","mode","marker","avgTraces","layout","title","showlegend","legend","orientation","xanchor","font","family","l","b","r","t","pad","xaxis","titlefont","showgrid","zerolinecolor","zerolinewidth","yaxis","config","displayModeBar","HistogramChartSection","split","join","BoxChartSection","INIT_SOURCE","heatmap","intrpl","TerrestrialHeatMap","setMode","source","setSource","then","catch","Grid","container","justify","alignItems","item","md","z","zeroline","range","tickmode","tick0","dtick","lat","lon","mapbox","center","style","zoom","mapboxAccessToken","hoverinfo","Box","borderColor","border","borderRadius","Button","variant","onClick","e","currentTarget","marginRight","TwoViewSection","checked","setChecked","setConfig","plot_rows","surface_rows","unpack","rows","key","map","row","configData","inclination","parseInt","inc","new_plot_rows","filter","new_surface_rows","show_surface","show_scatter","line","alt","value","autosize","hovermode","yAxisLabel","onHover","event","target","cursor","onUnhover","onDoubleClick","ThreeViewSection","reset","setReset","opacity","parseFloat","scene","aspectratio","camera","eye","up","Math","max","zaxis","zAxisLabel","min","MinusAddon","IconButton","onSelected","id","Divider","MENU_ITEMS","as_needed_handoff","dataset","maximum_powee_handoff","Selection","Menu","anchorEl","keepMounted","open","Boolean","onClose","onAnchorEl","Constants","el","MenuItem","includes","PlusAddon","createData","SelectedChartSection","textAlign","Typography","Table","aria-label","TableHead","TableRow","TableCell","TableBody","component","scope","ChartsLibsSection","setSelected","setAnchorEl","classes","handleSelected","prevState","length","idx","paddingLeft","Card","className","CardContent","traces","HeaderSection","marginLeft","FormControl","fullWidth","InputLabel","Select","labelId","system","onChange","onSystem","disabled","systems","system_name","system_id","onVersion","versions","OptionAddon","isOpen","setIsOpen","marginBottom","onViewMethod","flexItem","FormControlLabel","control","Checkbox","onChecked","Tooltip","gutterBottom","dangerouslySetInnerHTML","__html","placement","viewMethod","resetPlot","INIT_CHECK_STATUS","AnalyzeRegressionSection","setViewMethod","setDataSet","setSystems","setVersions","setLineType","setTraces","plot_value","Object","keys","ctype","gaps","durations","avgs","push","err","preventDefault","equation","maxAltitude","isLegend","isSub","INIT_PARAMS","Transition","React","forwardRef","ref","Slide","direction","CartDashBoardPanel","setSystem","setVersion","setIsLoading","setTerrestrial","setMaxAltitude","setCoefficients","text","setText","metric","terrestrial","coefficients","Dialog","TransitionComponent","paper","CssBaseline","Close","DialogContent","dividers","overflowX","m","selectedItem","Fragment","handleDataSetClick","CartPanel","isLoading","INIT_MENUS","TabPanel","children","index","other","role","hidden","aria-labelledby","p","a11yProps","ChartPanel","isOpenDash","setIsOpenDash","tab","setTab","useTheme","Container","CardHeader","action","AppBar","Tabs","val","indicatorColor","textColor","Tab","axis","onChangeIndex","NoMatch","to","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73143bc1.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\n\r\n// const baseUrl: string = \"http://127.0.0.1:7000\";\r\n\r\nexport const getItems = async (data: any) => {\r\n  const params = { selected: data.dataSet, version: data.version };\r\n\r\n  try {\r\n    const res: AxiosResponse = await axios.get(\"/get-items\", {\r\n      params,\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getPlotItems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(\"/get-plot\");\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getCartItems = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(\"/get-cart\", {\r\n      params,\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getSystems = async () => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(\"/get-systems\");\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getSystemVersion = async (params: Object) => {\r\n  try {\r\n    const res: AxiosResponse = await axios.get(\r\n      \"/get-system-version\",\r\n      { params }\r\n    );\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  authcard: {\r\n    marginTop: \"10vh\",\r\n    minWidth: \"30vw\",\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  link: {\r\n    paddingRight: theme.spacing(2),\r\n    color: \"#3385ff\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  chartCard: {\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  searchSelect: {\r\n    textAlignLast: \"center\",\r\n  },\r\n\r\n  tooltip: {\r\n    maxWidth: \"500px\",\r\n  },\r\n\r\n  dialogDeep: {\r\n    minWidth: \"43vw !important\",\r\n    height: \"90vh !important\",\r\n    maxWidth: \"40vw !important\",\r\n    backgroundColor: theme.palette.grey[100],\r\n  },\r\n\r\n  dashDialogDeep: {\r\n    minWidth: \"80vw !important\",\r\n    height: \"98vh !important\",\r\n    maxWidth: \"80vw !important\",\r\n    backgroundColor: theme.palette.grey[100],\r\n  },\r\n\r\n  dialogCloseBtn: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    zIndex: 100,\r\n  },\r\n\r\n  contentSection: {\r\n    backgroundColor: grey[500],\r\n    height: \"100%\",\r\n    maxHeight: \"55vh\",\r\n    overflow: \"auto\",\r\n  },\r\n\r\n  label: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  dashCard: {\r\n    minHeight: '32vh !important'\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    // minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined as any,\r\n    height: undefined as any,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction LineChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          y: props.yTraces,\r\n          name: \"Gap Event Duration\",\r\n          type: \"scatter\",\r\n          mode: \"lines+markers\",\r\n          marker: { color: \"red\" },\r\n        },\r\n        {\r\n          x: props.xTraces,\r\n          y: props.avgTraces,\r\n          name: \"Running Average\",\r\n          type: \"scatter\",\r\n          marker: { color: \"blue\" },\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title}</b>`,\r\n        width: size.width * 0.37,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Gap Event (Sequence)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Gap Duration (seconds)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LineChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction HistogramChartSection(props: any) {\r\n  const size = useWindowSize();\r\n  \r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          name: \"Duration\",\r\n          type: \"histogram\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split('_').join(' ')}</b>`,\r\n        width: size.width * 0.37,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Occurances\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HistogramChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../utils/util\";\r\n\r\nfunction BoxChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          y: props.xTraces,\r\n          name: \"\",\r\n          type: \"box\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split(\" \")[0]} Statistics</b>`,\r\n        width: size.width * 0.37,\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        yaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BoxChartSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { Grid, Button, Box } from \"@material-ui/core\";\r\n\r\nimport { getPlotItems } from \"../../../API\";\r\n\r\nconst INIT_SOURCE = {\r\n  heatmap: {},\r\n  intrpl: {},\r\n};\r\n\r\nfunction TerrestrialHeatMap() {\r\n  const [mode, setMode] = useState(\"heatmap\");\r\n  const [source, setSource] = useState(INIT_SOURCE as any);\r\n\r\n  useEffect(() => {\r\n    getPlotItems()\r\n      .then((res: any) => {\r\n        setSource(res.data);\r\n      })\r\n      .catch(() => setSource(INIT_SOURCE));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        {mode === \"heatmap\" ? (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.heatmap.x,\r\n                    y: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.heatmap.x,\r\n                    lon: source.heatmap.y,\r\n                    z: source.heatmap.z,\r\n                    type: \"densitymapbox\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    x: source.intrpl.x,\r\n                    y: source.intrpl.y,\r\n                    z: source.intrpl.z,\r\n                    type: \"heatmap\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  xaxis: {\r\n                    title: \"Longitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-180, 180],\r\n                    tickmode: \"linear\",\r\n                    tick0: -180,\r\n                    dtick: 40,\r\n                  },\r\n                  yaxis: {\r\n                    title: \"Latitude (deg)\",\r\n                    zeroline: false,\r\n                    range: [-90, 90],\r\n                    tickmode: \"linear\",\r\n                    tick0: -90,\r\n                    dtick: 30,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Plot\r\n                data={[\r\n                  {\r\n                    lat: source.intrpl.x,\r\n                    lon: source.intrpl.x,\r\n                    z: source.intrpl.z,\r\n                    type: \"densitymapbox\",\r\n                    hoverinfo: \"skip\",\r\n                  },\r\n                ]}\r\n                layout={{\r\n                  width: 500,\r\n                  height: 500,\r\n                  title: \"\",\r\n                  mapbox: {\r\n                    center: { lon: 60, lat: 30 },\r\n                    style: \"outdoors\",\r\n                    zoom: 2,\r\n                  },\r\n                }}\r\n                config={{\r\n                  mapboxAccessToken:\r\n                    \"pk.eyJ1IjoicmxhZm9udGFpbmUiLCJhIjoiY2tpMG82ZjNiMHZ3NjJxcDV1cjAzaTJ4eCJ9.VJSnQNJxiJK-jixU6KaFYQ\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n      <Grid item md={6}>\r\n        <Box\r\n          borderColor=\"primary.main\"\r\n          border={2}\r\n          borderRadius={5}\r\n          padding={2}\r\n          style={{ zIndex: 1000 }}\r\n        >\r\n          <Button\r\n            name=\"heatmap\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\", marginRight: \"4%\" }}\r\n          >\r\n            {\"Non-Interpolated\"}\r\n          </Button>\r\n          <Button\r\n            name=\"intrpl\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={(e) => setMode(e.currentTarget.name)}\r\n            style={{ width: \"48%\" }}\r\n          >\r\n            {\"Interpolated\"}\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TerrestrialHeatMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useWindowSize } from \"../../../../utils/util\";\r\n\r\nfunction TwoViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const size = useWindowSize();\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n  \r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row: any) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    const inclination = parseInt(props.inc);\r\n    const new_plot_rows = plot_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    const new_surface_rows = surface_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"lines\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.inc]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        showlegend: false,\r\n        hovermode: \"closest\",\r\n        width: size.width * 0.3,\r\n        height: size.width * 0.08,\r\n        margin: {\r\n          l: 60,\r\n          r: 15,\r\n          b: 35,\r\n          t: 15,\r\n        },\r\n        xaxis: {\r\n          title: `Altitude (km), Inclination=${props.inc} deg`,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n        yaxis: {\r\n          title: props.yAxisLabel,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n      }}\r\n      onHover={(e: any) => (e.event.target.style.cursor = \"pointer\")}\r\n      onUnhover={(e: any) => (e.event.target.style.cursor = \"crosshair\")}\r\n      onClick={() => props.onClick()}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TwoViewSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useWindowSize } from \"../../../../utils/util\";\r\n\r\nfunction ThreeViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [reset, setReset] = useState(false);\r\n  const [config, setConfig] = useState([]);\r\n  const size = useWindowSize();\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setReset(!reset);\r\n  }, [props.reset]);\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, \"altitude\"),\r\n          y: unpack(plot_rows, \"inclination\"),\r\n          z: unpack(plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"rgb(23, 190, 207)\",\r\n            size: 2,\r\n          },\r\n        },\r\n        {\r\n          x: unpack(surface_rows, \"altitude\"),\r\n          y: unpack(surface_rows, \"inclination\"),\r\n          z: unpack(surface_rows, \"value\"),\r\n          name: \"Model surface\",\r\n          opacity: 0.3,\r\n          type: \"mesh3d\",\r\n          color: \"rgb(252, 154, 7)\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, \"altitude\"),\r\n          y: unpack(plot_rows, \"inclination\"),\r\n          z: unpack(plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"rgb(23, 190, 207)\",\r\n            size: 2,\r\n          },\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(surface_rows, \"altitude\"),\r\n          y: unpack(surface_rows, \"inclination\"),\r\n          z: unpack(surface_rows, \"value\"),\r\n          name: \"Model surface\",\r\n          opacity: 0.3,\r\n          type: \"mesh3d\",\r\n          color: \"rgb(252, 154, 7)\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          type: \"mesh3d\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n        },\r\n        {\r\n          x: [parseFloat(props.alt)],\r\n          y: [parseFloat(props.inc)],\r\n          z: [parseFloat(props.value)],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, reset]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        width: size.width * 0.3,\r\n        height: size.width * 0.1,\r\n        margin: {\r\n          l: 0,\r\n          r: 0,\r\n          b: 0,\r\n          t: 0,\r\n        },\r\n        scene: {\r\n          aspectratio: {\r\n            x: 0.6,\r\n            y: 0.6,\r\n            z: 0.6,\r\n          },\r\n          camera: {\r\n            center: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 0,\r\n            },\r\n            eye: {\r\n              x: 0.9,\r\n              y: 0.9,\r\n              z: 0.9,\r\n            },\r\n            up: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 1,\r\n            },\r\n          },\r\n          xaxis: {\r\n            title: \"Altitude (km)\",\r\n            type: \"linear\",\r\n            range: [Math.max(...unpack(surface_rows, \"altitude\")), 0],\r\n            zeroline: false,\r\n          },\r\n          yaxis: {\r\n            title: \"Inclination (deg)\",\r\n            type: \"linear\",\r\n            range: [90, 0],\r\n            zeroline: false,\r\n          },\r\n          zaxis: {\r\n            title: props.zAxisLabel,\r\n            type: \"linear\",\r\n            range: [\r\n              Math.min(...unpack(surface_rows, \"value\")),\r\n              Math.max(...unpack(surface_rows, \"value\")),\r\n            ],\r\n            zeroline: false,\r\n          },\r\n        },\r\n        showlegend: false,\r\n      }}\r\n      onClick={() => props.onClick()}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThreeViewSection;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\n\r\nfunction MinusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={() => props.onSelected(props.id)}>\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MinusAddon;\r\n","export const MENU_ITEMS: any = {\r\n  as_needed_handoff: [\r\n    { id: 0, dataset: \"coverage\", name: \"Key Metrics\" },\r\n    { id: 1, dataset: \"coverage\", name: \"Running Average\" },\r\n    { id: 2, dataset: \"coverage_histogram\", name: \"Distribution\" },\r\n    { id: 3, dataset: \"coverage_histogram\", name: \"Statistics Chart\" },\r\n  ],\r\n  maximum_powee_handoff: [\r\n    { id: 0, dataset: \"gap\", name: \"Key Metrics\" },\r\n    { id: 1, dataset: \"gap\", name: \"Running Average\" },\r\n    { id: 2, dataset: \"gap_histogram\", name: \"Distribution\" },\r\n    { id: 3, dataset: \"gap_histogram\", name: \"Statistics Chart\" },\r\n  ],\r\n};\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\nimport * as Constants from \"../../constants\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nfunction Selection(props: any) {\r\n  return (\r\n    <Menu\r\n      anchorEl={props.anchorEl}\r\n      keepMounted\r\n      open={Boolean(props.anchorEl)}\r\n      onClose={() => props.onAnchorEl(null)}\r\n    >\r\n      {Constants.MENU_ITEMS[\"as_needed_handoff\"].map((el: any) => (\r\n        <MenuItem\r\n          id={el.id}\r\n          key={el.id}\r\n          onClick={() => props.onSelected(el.id)}\r\n          style={{ backgroundColor: props.selected.includes(el.id) ? grey[300] : \"\" }}\r\n        >\r\n          {el.name}\r\n        </MenuItem>\r\n      ))}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport { Grid, IconButton, Divider } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Selection from \"../Select\";\r\n\r\nfunction PlusAddon(props: any) {\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item style={{ width: \"4%\" }}>\r\n          <IconButton onClick={(e) => props.onAnchorEl(e.currentTarget)}>\r\n            <AddCircleOutlineIcon />\r\n          </IconButton>\r\n          <Selection\r\n            selected={props.selected}\r\n            anchorEl={props.anchorEl}\r\n            onAnchorEl={(value: any) => props.onAnchorEl(value)}\r\n            onSelected={(value: any) => props.onSelected(value)}\r\n          />\r\n        </Grid>\r\n        <Grid item md={11} style={{ width: \"96%\" }}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PlusAddon;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../../../utils/util\";\r\n\r\nfunction LineChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          y: props.yTraces,\r\n          name: \"Gap Event Duration\",\r\n          type: \"scatter\",\r\n          mode: \"lines+markers\",\r\n          marker: { color: \"red\" },\r\n        },\r\n        {\r\n          x: props.xTraces,\r\n          y: props.avgTraces,\r\n          name: \"Running Average\",\r\n          type: \"scatter\",\r\n          marker: { color: \"blue\" },\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title}</b>`,\r\n        width: size.width * 0.3,\r\n        height: size.width * 0.08,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Gap Event (Sequence)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Gap Duration (seconds)\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LineChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../../../utils/util\";\r\n\r\nfunction HistogramChartSection(props: any) {\r\n  const size = useWindowSize();\r\n  \r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.xTraces,\r\n          name: \"Duration\",\r\n          type: \"histogram\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split('_').join(' ')}</b>`,\r\n        width: size.width * 0.3,\r\n        height: size.width * 0.08,\r\n        showlegend: true,\r\n        legend: {\r\n          orientation: \"h\",\r\n          xanchor: \"center\",\r\n          font: {\r\n            family: \"sans-serif\",\r\n            size: 12,\r\n            color: \"#000\",\r\n          },\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        xaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n        yaxis: {\r\n          title: \"Occurances\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HistogramChartSection;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nimport { useWindowSize } from \"../../../../../utils/util\";\r\n\r\nfunction BoxChartSection(props: any) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          y: props.xTraces,\r\n          name: \"\",\r\n          type: \"box\",\r\n        },\r\n      ]}\r\n      layout={{\r\n        title: `<b>${props.title.split(\" \")[0]} Statistics</b>`,\r\n        width: size.width * 0.3,\r\n        height: size.width * 0.08,\r\n        margin: {\r\n          l: 60,\r\n          b: 0,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5,\r\n        },\r\n        yaxis: {\r\n          title: \"Duration\",\r\n          titlefont: {\r\n            size: 12,\r\n            color: \"#212529\",\r\n          },\r\n          showgrid: true,\r\n          zerolinecolor: \"#969696\",\r\n          zerolinewidth: 1,\r\n        },\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BoxChartSection;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\n\r\nimport LineChartSection from \"../line-chart-section\";\r\nimport HistogramChartSection from \"../histogram-chart-section\";\r\nimport BoxChartSection from \"../box-chart-section\";\r\n\r\nfunction createData(name: String, value: String) {\r\n  return { name, value };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Average (sec)\", \"xx\"),\r\n  createData(\"Time-Averaged Gap\", \"xx\"),\r\n  createData(\"Median (sec)\", \"xx\"),\r\n  createData(\"Maximum (minutes)\", \"xx\"),\r\n  createData(\"Minimum (sec)\", \"xx\"),\r\n  createData(\"Average # Gaps Per Orbit\", \"xx\"),\r\n  createData(\"Average # Gaps Per Day\", \"xx\"),\r\n];\r\n\r\nfunction SelectedChartSection(props: any) {\r\n  return (\r\n    <>\r\n      {props.id === 0 && (\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={10} style={{ textAlign: \"center\" }}>\r\n            <Typography variant=\"h6\">{`Key Metrics`}</Typography>\r\n          </Grid>\r\n          <Grid item md={10}>\r\n            <Table aria-label=\"simple table\" size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{`Gap Statistic`}</TableCell>\r\n                  <TableCell>{`Value`}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row: any) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell>{row.value}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {props.id === 1 && <LineChartSection {...props.data} />}\r\n      {props.id === 2 && <HistogramChartSection {...props.data} />}\r\n      {props.id === 3 && <BoxChartSection {...props.data} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectedChartSection;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Card, CardContent } from \"@material-ui/core\";\r\n\r\nimport MinusAddon from \"../../../../components/Button/MinusAddon\";\r\nimport PlusAddon from \"../../../../components/Button/PlusAddon\";\r\nimport SelectedChartSection from \"./selected-chart-section\";\r\nimport * as Constants from \"../../../../constants\";\r\nimport useStyles from \"../../../../utils/styles\";\r\n\r\nfunction ChartsLibsSection(props: any) {\r\n  const [selected, setSelected] = useState([] as any);\r\n  const [anchorEl, setAnchorEl] = useState(null as any);\r\n  const classes = useStyles();\r\n\r\n  const handleSelected = (id: any, type: string) => {\r\n    if (!selected.includes(id) && type === \"add\") {\r\n      setSelected((prevState: any) => [...prevState, id]);\r\n    } else if (type === \"remove\") {\r\n      setSelected(selected.filter((item: any) => item !== id));\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selected.length === 0 && (\r\n        <Grid item md={6}>\r\n          <PlusAddon\r\n            type={1}\r\n            selected={selected}\r\n            anchorEl={anchorEl}\r\n            onAnchorEl={(value: any) => setAnchorEl(value)}\r\n            onSelected={(value: any) => handleSelected(value, \"add\")}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {selected.map((item: any, idx: number) => (\r\n        <Grid\r\n          item\r\n          md={6}\r\n          key={item}\r\n          style={{\r\n            paddingLeft: \"2rem\",\r\n            paddingRight: idx % 2 === 0 ? \"2rem\" : \"0.8rem\",\r\n          }}\r\n        >\r\n          <Card className={classes.dashCard}>\r\n            <CardContent>\r\n              <MinusAddon\r\n                id={item}\r\n                type={1}\r\n                selected={selected}\r\n                anchorEl={anchorEl}\r\n                onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                onSelected={(value: any) => handleSelected(value, \"remove\")}\r\n              />\r\n              <Grid item md={12}>\r\n                <SelectedChartSection\r\n                  id={item}\r\n                  data={\r\n                    props.traces[\r\n                      Constants.MENU_ITEMS[props.dataSet][item].dataset\r\n                    ]\r\n                  }\r\n                />\r\n              </Grid>\r\n              {idx === selected.length - 1 && (\r\n                <PlusAddon\r\n                  type={1}\r\n                  selected={selected}\r\n                  anchorEl={anchorEl}\r\n                  onAnchorEl={(value: any) => setAnchorEl(value)}\r\n                  onSelected={(value: any) => handleSelected(value, \"add\")}\r\n                />\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n      {selected.length % 2 === 0 && <Grid item md={6} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartsLibsSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport useStyles from \"../../../../utils/styles\";\r\nimport {} from \"../../../../API\";\r\n\r\nfunction HeaderSection(props: any) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item md={12}>\r\n      <Grid\r\n        container\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n        style={{ backgroundColor: grey[300], minHeight: \"6vh\" }}\r\n      >\r\n        <Grid item md={3}>\r\n          <Button\r\n            id=\"as_needed_handoff\"\r\n            name=\"coverage\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            onClick={(e) => props.onClick(e)}\r\n            style={{ marginLeft: \"15px\" }}\r\n          >\r\n            {`RF Coverage (%)`}\r\n          </Button>\r\n          <Button\r\n            id=\"maximum_powee_handoff\"\r\n            name=\"gap\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            onClick={(e) => props.onClick(e)}\r\n            style={{ marginLeft: \"15px\" }}\r\n          >\r\n            {`Gap (%)`}\r\n          </Button>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.formControl}\r\n            fullWidth\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">{`System`}</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={props.system}\r\n              onChange={(e) => props.onSystem(e.target.value)}\r\n              label=\"System\"\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                <em>{`None`}</em>\r\n              </MenuItem>\r\n              {props.systems.map((item: any) => (\r\n                <MenuItem key={item.system_name} value={item.system_id}>\r\n                  {item.system_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.formControl}\r\n            fullWidth\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">{`Version`}</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={props.version}\r\n              onChange={(e) => props.onVersion(e.target.value)}\r\n              label=\"Version\"\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                <em>{`None`}</em>\r\n              </MenuItem>\r\n              {props.versions.map((item: any) => (\r\n                <MenuItem\r\n                  key={`version_${item.versions}`}\r\n                  value={item.versions}\r\n                >\r\n                  {item.versions}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={5} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default HeaderSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Tooltip,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\n\r\nfunction OptionAddon(props: any) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ marginBottom: 10 }}\r\n    >\r\n      <Grid item md={4}></Grid>\r\n      <Grid item md={8}>\r\n        <Typography component=\"p\" style={{ textAlign: \"end\" }}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            className=\"mt-2 mb-2\"\r\n            style={{ fontSize: 14 }}\r\n          >\r\n            {`Graph Options`}\r\n            {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          </IconButton>\r\n        </Typography>\r\n      </Grid>\r\n      {isOpen && (\r\n        <Grid item md={12} style={{ marginRight: 5 }}>\r\n          <Box\r\n            borderColor=\"primary.main\"\r\n            border={2}\r\n            borderRadius={5}\r\n            padding={2}\r\n          >\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n              <Grid item md={3}>\r\n                <Grid\r\n                  container\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item md={5}>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"2d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                      fullWidth\r\n                    >\r\n                      {\"2D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={7} />\r\n                  <Grid item md={5}>\r\n                    <Button\r\n                      name=\"3d_view\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onClick={(e) => props.onViewMethod(e)}\r\n                      fullWidth\r\n                    >\r\n                      {\"3D\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={7} />\r\n                </Grid>\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={5}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"show_surface\"\r\n                      checked={props.checked.show_surface}\r\n                      size=\"small\"\r\n                      onChange={(e) => props.onChecked(e)}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  classes={{ label: classes.label }}\r\n                  label=\"Show Regression Model Surface\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"show_scatter\"\r\n                      checked={props.checked.show_scatter}\r\n                      size=\"small\"\r\n                      onChange={(e) => props.onChecked(e)}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  classes={{ label: classes.label }}\r\n                  label=\"Show Underlying Data\"\r\n                />\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid item md={3}>\r\n                <Tooltip\r\n                  title={\r\n                    <Typography\r\n                      gutterBottom\r\n                      component=\"p\"\r\n                      variant=\"body1\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: \"Reset 3D plot\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  placement=\"top-start\"\r\n                  classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                  <span>\r\n                    <Button\r\n                      id={props.type}\r\n                      name=\"Reset\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled={props.viewMethod === \"2d_view\" ? true : false}\r\n                      onClick={() => props.resetPlot()}\r\n                      fullWidth\r\n                    >\r\n                      {\"Reset\"}\r\n                    </Button>\r\n                  </span>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default OptionAddon;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Typography, Card, CardContent } from \"@material-ui/core\";\r\nimport TwoViewSection from \"./two-view-section\";\r\nimport ThreeViewSection from \"./three-view-section\";\r\nimport ChartsLibsSection from \"./charts-libs-section\";\r\nimport HeaderSection from \"./header-section\";\r\nimport OptionAddon from \"../../../components/Button/OptionAddon\";\r\nimport useStyles from \"../../../utils/styles\";\r\nimport { getItems, getSystems, getSystemVersion } from \"../../../API\";\r\n\r\nconst INIT_CHECK_STATUS = {\r\n  show_surface: true,\r\n  show_scatter: true,\r\n};\r\n\r\nfunction AnalyzeRegressionSection(props: any) {\r\n  const [viewMethod, setViewMethod] = useState(\"2d_view\");\r\n  const [dataSet, setDataSet] = useState(\"as_needed_handoff\" as any);\r\n  const [systems, setSystems] = useState([] as any);\r\n  const [versions, setVersions] = useState([] as any);\r\n  const [lineType, setLineType] = useState(\"coverage\" as any);\r\n  const [checked, setChecked] = useState(INIT_CHECK_STATUS);\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [reset, setReset] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n  const plot_rows = props.data.plot_value;\r\n  const surface_rows: Array<any> = [];\r\n  const zAxisLabel = props.data.label;\r\n  const classes = useStyles();\r\n  \r\n  useEffect(() => {\r\n    if (props.version !== \"\") {\r\n      getItems({ dataSet, version: props.version })\r\n        .then((res) => {\r\n          Object.keys(res.data).map((el) => {\r\n            let ctype: String = res.data[el][\"type\"];\r\n            let gaps: Array<any> = [];\r\n            let durations: Array<any> = [];\r\n            let avgs: Array<any> = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === \"line\") {\r\n              res.data[el][\"data\"].map((item: Array<any>, idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[0]);\r\n                avgs.push(item[1]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            } else if (ctype === \"histogram\") {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: res.data[el][\"data\"],\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n    }\r\n  }, [dataSet, props.version]);\r\n\r\n  useEffect(() => {\r\n    getSystems()\r\n      .then((res: any) => setSystems(res.data))\r\n      .catch((err: any) => setSystems([]));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.system !== \"\") {\r\n      getSystemVersion({ system: props.system })\r\n        .then((res: any) => setVersions(res.data))\r\n        .catch((err: any) => setVersions([]));\r\n    }\r\n  }, [props.system]);\r\n\r\n  const handleCheck = (event: any) => {\r\n    const { name, checked } = event.currentTarget;\r\n    setChecked((prevState) => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const handleDataSetClick = (event: any) => {\r\n    event.preventDefault();\r\n    const { id, name } = event.currentTarget;\r\n    setDataSet(id);\r\n    setLineType(name);\r\n  };\r\n  \r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"flex-start\" spacing={2}>\r\n      <HeaderSection\r\n        system={props.system}\r\n        systems={systems}\r\n        version={props.version}\r\n        versions={versions}\r\n        onSystem={(value: any) => props.onSystem(value)}\r\n        onVersion={(value: any) => props.onVersion(value)}\r\n        onClick={handleDataSetClick}\r\n      />\r\n      <Grid item md={6} style={{ paddingLeft: \"2rem\" }}>\r\n        <Card className={classes.dashCard}>\r\n          <CardContent>\r\n            <Grid container justify=\"center\" spacing={2}>\r\n              <Grid item md={12} style={{ textAlign: \"center\" }}>\r\n                <Typography variant=\"h6\">\r\n                  {dataSet === \"as_needed_handoff\"\r\n                    ? `RF Coverage (%) vs. User Inclination`\r\n                    : `GAP (%) vs. User Inclination`}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item md={12} style={{ marginLeft: \"15px\", padding: 0 }}>\r\n                <OptionAddon\r\n                  checked={checked}\r\n                  viewMethod={viewMethod}\r\n                  onChecked={handleCheck}\r\n                  resetPlot={() => setReset(!reset)}\r\n                  onViewMethod={(e: any) => setViewMethod(e.currentTarget.name)}\r\n                />\r\n              </Grid>\r\n              {viewMethod === \"3d_view\" ? (\r\n                <Grid item md={12}>\r\n                  <ThreeViewSection\r\n                    data={props.data}\r\n                    equation={props.equation}\r\n                    maxAltitude={props.maxAltitude}\r\n                    alt={props.alt}\r\n                    inc={props.inc}\r\n                    value={props.value}\r\n                    reset={reset}\r\n                    isLegend={false}\r\n                    isSub={true}\r\n                    plot_rows={plot_rows}\r\n                    surface_rows={surface_rows}\r\n                    zAxisLabel={zAxisLabel}\r\n                    checked={checked}\r\n                    onClick={() => setSelected(true)}\r\n                  />\r\n                </Grid>\r\n              ) : (\r\n                <Grid item md={12}>\r\n                  <TwoViewSection\r\n                    data={props.data}\r\n                    equation={props.equation}\r\n                    maxAltitude={props.maxAltitude}\r\n                    alt={props.alt}\r\n                    inc={props.inc}\r\n                    value={props.value}\r\n                    isLegend={false}\r\n                    isSub={true}\r\n                    plot_rows={plot_rows}\r\n                    surface_rows={surface_rows}\r\n                    yAxisLabel={zAxisLabel}\r\n                    checked={checked}\r\n                    onClick={() => setSelected(true)}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      {selected && <></>}\r\n      <ChartsLibsSection traces={traces} dataSet={dataSet} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AnalyzeRegressionSection;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CssBaseline,\r\n  Slide,\r\n  Typography,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nimport { getCartItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport AnalyzeRegressionSection from \"./analyze-regression-section\";\r\n\r\nconst INIT_PARAMS = {\r\n  altitude: 300,\r\n  availabilityThreshold: 0.999,\r\n  dataVolumeNeed: 0.1,\r\n  gapThreshold: 6,\r\n  inclination: 30,\r\n  latitude: 30,\r\n  launchYear: 2030,\r\n  longitude: 30,\r\n  navAccuracyNeed: 20,\r\n  powerAmplifier: 1,\r\n  value: 100,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction CartDashBoardPanel(props: any) {\r\n  const [source, setSource] = useState({} as any);\r\n  const [system, setSystem] = useState(\"1\" as any);\r\n  const [version, setVersion] = useState(\"1\" as any);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [terrestrial, setTerrestrial] = useState({});\r\n  const [maxAltitude, setMaxAltitude] = useState(0);\r\n  const [coefficients, setCoefficients] = useState({} as any);\r\n  const [text, setText] = useState(\"\");\r\n  const deepDive = \"system1/coverage\";\r\n  const metric = deepDive.split(\"/\")[1];\r\n  const missionType = \"orbital\";\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setText(\"\");\r\n    setIsLoading(true);\r\n    getCartItems({ type: missionType, version, system })\r\n      .then((res: any) => {\r\n        setTerrestrial(res.data.terrestrial);\r\n        setSource(res.data.data.data);\r\n        setMaxAltitude(res.data.data.maxAltitude);\r\n        setCoefficients(res.data.data.coefficients);\r\n        setText(res.data.text);\r\n        setIsLoading(false);\r\n\r\n        // FIXME: there is no real data for it.\r\n        //\r\n        // setText(\r\n        //   props.equationsTex[system.replace(\" \", \"_\").toLowerCase()][metric](\r\n        //     data[\"coefficients\"][metric]\r\n        //   )\r\n        // );\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [system, version]);\r\n\r\n  const equation = (inc: any, alt: any, metric: string) => {\r\n    // FIXME: activate in integration of cart.\r\n    //\r\n    // const altitude = parseFloat(alt);\r\n    // const inclination = parseFloat(inc);\r\n\r\n    // const coefs = coefficients[metric];\r\n    // const eqn = props.equations[system.replace(\" \", \"_\").toLowerCase()][metric];\r\n\r\n    // return eqn(coefs, altitude, inclination);\r\n    return inc;\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      onClose={() => props.onClose()}\r\n      classes={{ paper: classes.dashDialogDeep }}\r\n    >\r\n      <CssBaseline />\r\n      <MuiDialogTitle>\r\n        <Typography component=\"strong\" variant=\"h6\">\r\n          {\"Cart Integration Panel\"}\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"Close\"\r\n          className={classes.dialogCloseBtn}\r\n          onClick={() => props.onClose()}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </MuiDialogTitle>\r\n      <DialogContent\r\n        dividers={true}\r\n        style={{ paddingRight: 0, paddingLeft: 0, overflowX: \"hidden\" }}\r\n      >\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={12}>\r\n            {Object.keys(source).length > 0 &&\r\n              (missionType === \"orbital\" ? (\r\n                <AnalyzeRegressionSection\r\n                  equation={(x: any, y: any, m: any) => equation(x, y, m)}\r\n                  maxAltitude={maxAltitude}\r\n                  alt={INIT_PARAMS.altitude}\r\n                  inc={INIT_PARAMS.inclination}\r\n                  value={INIT_PARAMS.value}\r\n                  data={source}\r\n                  selectedItem={metric}\r\n                  text={text}\r\n                  system={system}\r\n                  version={version}\r\n                  onSystem={(value: any) => setSystem(value)}\r\n                  onVersion={(value: any) => setVersion(value)}\r\n                />\r\n              ) : (\r\n                <></>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default CartDashBoardPanel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useWindowSize } from \"../../../../utils/util\";\r\n\r\nfunction TwoViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [config, setConfig] = useState([]);\r\n  const size: any = useWindowSize();\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row: any) {\r\n      return row[key];\r\n    });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    const inclination = parseInt(props.inc);\r\n    const new_plot_rows = plot_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    const new_surface_rows = surface_rows.filter(\r\n      (row: any) => row.inclination === inclination\r\n    );\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_plot_rows, \"altitude\"),\r\n          y: unpack(new_plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          color: \"rgb(23, 190, 207)\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(new_surface_rows, \"altitude\"),\r\n          y: unpack(new_surface_rows, \"value\"),\r\n          name: \"Model curve\",\r\n          mode: \"lines\",\r\n          line: {\r\n            color: \"rgb(252, 154, 7)\",\r\n          },\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"lines\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter\",\r\n          marker: {\r\n            color: \"red\",\r\n            size: 10,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, props.inc]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        showlegend: false,\r\n        hovermode: \"closest\",\r\n        width: size * 0.37,\r\n        height: size * 0.37,\r\n        margin: {\r\n          l: 60,\r\n          r: 15,\r\n          b: 35,\r\n          t: 15,\r\n        },\r\n        xaxis: {\r\n          title: `Altitude (km), Inclination=${props.inc} deg`,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n        yaxis: {\r\n          title: props.yAxisLabel,\r\n          type: \"linear\",\r\n          zeroline: false,\r\n        },\r\n      }}\r\n      onHover={(e: any) => (e.event.target.style.cursor = \"pointer\")}\r\n      onUnhover={(e: any) => (e.event.target.style.cursor = \"crosshair\")}\r\n      onClick={() => props.onClick()}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TwoViewSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useWindowSize } from \"../../../../utils/util\";\r\n\r\nfunction ThreeViewSection(props: any) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n  const [reset, setReset] = useState(false);\r\n  const [config, setConfig] = useState([]);\r\n  const size: any = useWindowSize();\r\n  const plot_rows = props.plot_rows;\r\n  const surface_rows = props.surface_rows;\r\n\r\n  useEffect(() => {\r\n    setReset(!reset);\r\n  }, [props.reset]);\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked);\r\n  }, [props.checked]);\r\n\r\n  const unpack = (rows: Array<any>, key: any) => {\r\n    return rows.map(function (row) {\r\n      return row[key];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let configData: any = [];\r\n    if (checked.show_surface === true && checked.show_scatter === true) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, \"altitude\"),\r\n          y: unpack(plot_rows, \"inclination\"),\r\n          z: unpack(plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"rgb(23, 190, 207)\",\r\n            size: 2,\r\n          },\r\n        },\r\n        {\r\n          x: unpack(surface_rows, \"altitude\"),\r\n          y: unpack(surface_rows, \"inclination\"),\r\n          z: unpack(surface_rows, \"value\"),\r\n          name: \"Model surface\",\r\n          opacity: 0.3,\r\n          type: \"mesh3d\",\r\n          color: \"rgb(252, 154, 7)\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === true\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(plot_rows, \"altitude\"),\r\n          y: unpack(plot_rows, \"inclination\"),\r\n          z: unpack(plot_rows, \"value\"),\r\n          name: \"Model data\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"rgb(23, 190, 207)\",\r\n            size: 2,\r\n          },\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === true &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: unpack(surface_rows, \"altitude\"),\r\n          y: unpack(surface_rows, \"inclination\"),\r\n          z: unpack(surface_rows, \"value\"),\r\n          name: \"Model surface\",\r\n          opacity: 0.3,\r\n          type: \"mesh3d\",\r\n          color: \"rgb(252, 154, 7)\",\r\n        },\r\n        {\r\n          x: [props.alt],\r\n          y: [props.inc],\r\n          z: [props.value],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    } else if (\r\n      checked.show_surface === false &&\r\n      checked.show_scatter === false\r\n    ) {\r\n      configData = [\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          type: \"mesh3d\",\r\n        },\r\n        {\r\n          x: [],\r\n          y: [],\r\n          z: [],\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n        },\r\n        {\r\n          x: [parseFloat(props.alt)],\r\n          y: [parseFloat(props.inc)],\r\n          z: [parseFloat(props.value)],\r\n          name: \"User\",\r\n          mode: \"markers\",\r\n          type: \"scatter3d\",\r\n          opacity: 1,\r\n          marker: {\r\n            color: \"red\",\r\n            size: 5,\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    setConfig(configData);\r\n  }, [checked, plot_rows, surface_rows, reset]);\r\n\r\n  return (\r\n    <Plot\r\n      data={config}\r\n      layout={{\r\n        autosize: true,\r\n        width: size * 0.37,\r\n        height: size * 0.37,\r\n        margin: {\r\n          l: 0,\r\n          r: 0,\r\n          b: 0,\r\n          t: 0,\r\n        },\r\n        scene: {\r\n          aspectratio: {\r\n            x: 0.6,\r\n            y: 0.6,\r\n            z: 0.6,\r\n          },\r\n          camera: {\r\n            center: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 0,\r\n            },\r\n            eye: {\r\n              x: 0.9,\r\n              y: 0.9,\r\n              z: 0.9,\r\n            },\r\n            up: {\r\n              x: 0,\r\n              y: 0,\r\n              z: 1,\r\n            },\r\n          },\r\n          xaxis: {\r\n            title: \"Altitude (km)\",\r\n            type: \"linear\",\r\n            range: [Math.max(...unpack(surface_rows, \"altitude\")), 0],\r\n            zeroline: false,\r\n          },\r\n          yaxis: {\r\n            title: \"Inclination (deg)\",\r\n            type: \"linear\",\r\n            range: [90, 0],\r\n            zeroline: false,\r\n          },\r\n          zaxis: {\r\n            title: props.zAxisLabel,\r\n            type: \"linear\",\r\n            range: [\r\n              Math.min(...unpack(surface_rows, \"value\")),\r\n              Math.max(...unpack(surface_rows, \"value\")),\r\n            ],\r\n            zeroline: false,\r\n          },\r\n        },\r\n        showlegend: false,\r\n      }}\r\n      onClick={() => props.onClick()}\r\n      onDoubleClick={() => props.onClick()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThreeViewSection;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\n\r\nimport LineChartSection from \"../../../../chart-panel/line-chart-section\";\r\nimport HistogramChartSection from \"../../../../chart-panel/histogram-chart-section\";\r\nimport BoxChartSection from \"../../../../chart-panel/box-chart-section\";\r\n\r\nfunction createData(name: String, value: String) {\r\n  return { name, value };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Average (sec)\", \"xx\"),\r\n  createData(\"Time-Averaged Gap\", \"xx\"),\r\n  createData(\"Median (sec)\", \"xx\"),\r\n  createData(\"Maximum (minutes)\", \"xx\"),\r\n  createData(\"Minimum (sec)\", \"xx\"),\r\n  createData(\"Average # Gaps Per Orbit\", \"xx\"),\r\n  createData(\"Average # Gaps Per Day\", \"xx\"),\r\n];\r\n\r\nfunction SelectedChartSection(props: any) {\r\n  return (\r\n    <>\r\n      {props.id === 0 && (\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={10} style={{ textAlign: \"center\" }}>\r\n            <Typography variant=\"h6\">{`Key Metrics`}</Typography>\r\n          </Grid>\r\n          <Grid item md={10}>\r\n            <Table aria-label=\"simple table\" size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{`Gap Statistic`}</TableCell>\r\n                  <TableCell>{`Value`}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row: any) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell>{row.value}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {props.id === 1 && <LineChartSection {...props.data} />}\r\n      {props.id === 2 && <HistogramChartSection {...props.data} />}\r\n      {props.id === 3 && <BoxChartSection {...props.data} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectedChartSection;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Card, CardContent } from \"@material-ui/core\";\r\n\r\nimport MinusAddon from \"../../../../components/Button/MinusAddon\";\r\nimport PlusAddon from \"../../../../components/Button/PlusAddon\";\r\nimport SelectedChartSection from \"./selected-chart-section\";\r\nimport * as Constants from \"../../../../constants\";\r\n\r\nfunction ChartsLibsSection(props: any) {\r\n  const [selected, setSelected] = useState([] as any);\r\n  const [anchorEl, setAnchorEl] = useState(null as any);\r\n\r\n  const handleSelected = (id: any, type: string) => {\r\n    if (!selected.includes(id) && type === \"add\") {\r\n      setSelected((prevState: any) => [...prevState, id]);\r\n    } else if (type === \"remove\") {\r\n      setSelected(selected.filter((item: any) => item !== id));\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selected.length === 0 && (\r\n        <PlusAddon\r\n          type={0}\r\n          selected={selected}\r\n          anchorEl={anchorEl}\r\n          onAnchorEl={(value: any) => setAnchorEl(value)}\r\n          onSelected={(value: any) => handleSelected(value, \"add\")}\r\n        />\r\n      )}\r\n      {selected.map((item: any, idx: number) => (\r\n        <React.Fragment key={item}>\r\n          <MinusAddon\r\n            id={item}\r\n            type={0}\r\n            selected={selected}\r\n            anchorEl={anchorEl}\r\n            onAnchorEl={(value: any) => setAnchorEl(value)}\r\n            onSelected={(value: any) => handleSelected(value, \"remove\")}\r\n          />\r\n          <Grid item md={12}>\r\n            <Card style={{ marginLeft: \"2.5rem\", marginRight: \"2.5rem\" }}>\r\n              <CardContent>\r\n                <SelectedChartSection\r\n                  id={item}\r\n                  data={\r\n                    props.traces[\r\n                      Constants.MENU_ITEMS[props.dataSet][item].dataset\r\n                    ]\r\n                  }\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          {idx === selected.length - 1 && (\r\n            <PlusAddon\r\n              type={0}\r\n              selected={selected}\r\n              anchorEl={anchorEl}\r\n              onAnchorEl={(value: any) => setAnchorEl(value)}\r\n              onSelected={(value: any) => handleSelected(value, \"add\")}\r\n            />\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartsLibsSection;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nimport TwoViewSection from \"./two-view-section\";\r\nimport ThreeViewSection from \"./three-view-section\";\r\nimport ChartsLibsSection from \"./charts-libs-section\";\r\nimport OptionAddon from \"../../../components/Button/OptionAddon\";\r\nimport { getItems, getSystems, getSystemVersion } from \"../../../API\";\r\nimport useStyles from \"../../../utils/styles\";\r\n\r\nconst INIT_CHECK_STATUS = {\r\n  show_surface: true,\r\n  show_scatter: true,\r\n};\r\n\r\nfunction AnalyzeRegressionSection(props: any) {\r\n  const [viewMethod, setViewMethod] = useState(\"2d_view\");\r\n  const [dataSet, setDataSet] = useState(\"as_needed_handoff\" as any);\r\n  const [systems, setSystems] = useState([] as any);\r\n  const [versions, setVersions] = useState([] as any);\r\n  const [lineType, setLineType] = useState(\"coverage\" as any);\r\n  const [checked, setChecked] = useState(INIT_CHECK_STATUS);\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [reset, setReset] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n  const classes = useStyles();\r\n  const plot_rows = props.data.plot_value;\r\n  const surface_rows: Array<any> = [];\r\n  const zAxisLabel = props.data.label;\r\n\r\n  useEffect(() => {\r\n    getItems(dataSet)\r\n      .then((res) => {\r\n        Object.keys(res.data).map((el) => {\r\n          let ctype: String = res.data[el][\"type\"];\r\n          let gaps: Array<any> = [];\r\n          let durations: Array<any> = [];\r\n          let avgs: Array<any> = [];\r\n\r\n          // Detect chart type and set Traces\r\n          if (ctype === \"line\") {\r\n            res.data[el][\"data\"].map((item: Array<any>, idx: number) => {\r\n              gaps.push(idx + 1);\r\n              durations.push(item[0]);\r\n              avgs.push(item[1]);\r\n            });\r\n\r\n            setTraces((prevState: any) => ({\r\n              ...prevState,\r\n              [el]: {\r\n                xTraces: gaps,\r\n                yTraces: durations,\r\n                avgTraces: avgs,\r\n                type: ctype,\r\n                title: res.data[el][\"title\"],\r\n              },\r\n            }));\r\n          } else if (ctype === \"histogram\") {\r\n            setTraces((prevState: any) => ({\r\n              ...prevState,\r\n              [el]: {\r\n                xTraces: res.data[el][\"data\"],\r\n                type: ctype,\r\n                title: res.data[el][\"title\"],\r\n              },\r\n            }));\r\n          }\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setTraces({});\r\n      });\r\n  }, [dataSet]);\r\n\r\n  useEffect(() => {\r\n    getSystems()\r\n      .then((res: any) => setSystems(res.data))\r\n      .catch((err: any) => setSystems([]));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.system !== \"\") {\r\n      getSystemVersion({ system: props.system })\r\n        .then((res: any) => setVersions(res.data))\r\n        .catch((err: any) => setVersions([]));\r\n    }\r\n  }, [props.system]);\r\n\r\n  const handleCheck = (event: any) => {\r\n    const { name, checked } = event.currentTarget;\r\n    setChecked((prevState) => ({ ...prevState, [name]: checked }));\r\n  };\r\n\r\n  const handleDataSetClick = (event: any) => {\r\n    event.preventDefault();\r\n    const { id, name } = event.currentTarget;\r\n    setDataSet(id);\r\n    setLineType(name);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n      <Grid item md={12}>\r\n        <Grid\r\n          container\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          style={{ backgroundColor: grey[300], minHeight: \"10vh\" }}\r\n        >\r\n          <Grid item md={3}>\r\n            <Button\r\n              id=\"as_needed_handoff\"\r\n              name=\"coverage\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={handleDataSetClick}\r\n              style={{ marginLeft: \"15px\" }}\r\n              fullWidth\r\n            >\r\n              {`RF Coverage (%)`}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item md={2}>\r\n            <Button\r\n              id=\"maximum_powee_handoff\"\r\n              name=\"gap\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={handleDataSetClick}\r\n              style={{ marginLeft: \"15px\" }}\r\n              fullWidth\r\n            >\r\n              {`Gap (%)`}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item md={3} style={{ marginLeft: \"15px\" }}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              fullWidth\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{`System`}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={props.system}\r\n                onChange={(e) => props.onSystem(e.target.value)}\r\n                label=\"System\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {systems.map((item: any) => (\r\n                  <MenuItem key={item.system_name} value={item.system_id}>\r\n                    {item.system_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.formControl}\r\n              fullWidth\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">{`Version`}</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={props.version}\r\n                onChange={(e) => props.onVersion(e.target.value)}\r\n                label=\"Version\"\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>{`None`}</em>\r\n                </MenuItem>\r\n                {versions.map((item: any) => (\r\n                  <MenuItem\r\n                    key={`version_${item.versions}`}\r\n                    value={item.versions}\r\n                  >\r\n                    {item.versions}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item md={12} style={{ textAlign: \"center\" }}>\r\n        <Typography variant=\"h6\">\r\n          {dataSet === \"as_needed_handoff\"\r\n            ? `RF Coverage (%) vs. User Inclination`\r\n            : `GAP (%) vs. User Inclination`}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item md={12} style={{ marginLeft: \"15px\" }}>\r\n        <OptionAddon\r\n          checked={checked}\r\n          viewMethod={viewMethod}\r\n          onChecked={handleCheck}\r\n          resetPlot={() => setReset(!reset)}\r\n          onViewMethod={(e: any) => setViewMethod(e.currentTarget.name)}\r\n        />\r\n      </Grid>\r\n\r\n      {/* FIXME: check at the process of cart integration.\r\n      <Grid item md={12} style={{ zIndex: 1000 }}>\r\n        <MathJax.Provider>\r\n          <MathJax.Node formula={props.text} />\r\n        </MathJax.Provider>\r\n      </Grid> */}\r\n\r\n      <Grid item md={12}>\r\n        <Card style={{ marginLeft: \"2.5rem\", marginRight: \"2.5rem\" }}>\r\n          <CardContent>\r\n            {viewMethod === \"3d_view\" ? (\r\n              <Grid item md={12}>\r\n                <ThreeViewSection\r\n                  data={props.data}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inc}\r\n                  value={props.value}\r\n                  reset={reset}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={plot_rows}\r\n                  surface_rows={surface_rows}\r\n                  zAxisLabel={zAxisLabel}\r\n                  checked={checked}\r\n                  onClick={() => setSelected(true)}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              <Grid item md={12}>\r\n                <TwoViewSection\r\n                  data={props.data}\r\n                  equation={props.equation}\r\n                  maxAltitude={props.maxAltitude}\r\n                  alt={props.alt}\r\n                  inc={props.inc}\r\n                  value={props.value}\r\n                  isLegend={false}\r\n                  isSub={true}\r\n                  plot_rows={plot_rows}\r\n                  surface_rows={surface_rows}\r\n                  yAxisLabel={zAxisLabel}\r\n                  checked={checked}\r\n                  onClick={() => setSelected(true)}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      {selected && <></>}\r\n      <ChartsLibsSection traces={traces} dataSet={dataSet} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AnalyzeRegressionSection;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CssBaseline,\r\n  Slide,\r\n  Typography,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nimport { getCartItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport AnalyzeRegressionSection from \"./analyze-regression-section\";\r\n\r\nconst INIT_PARAMS = {\r\n  altitude: 300,\r\n  availabilityThreshold: 0.999,\r\n  dataVolumeNeed: 0.1,\r\n  gapThreshold: 6,\r\n  inclination: 30,\r\n  latitude: 30,\r\n  launchYear: 2030,\r\n  longitude: 30,\r\n  navAccuracyNeed: 20,\r\n  powerAmplifier: 1,\r\n  value: 100,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction CartPanel(props: any) {\r\n  const [source, setSource] = useState({} as any);\r\n  const [system, setSystem] = useState(\"1\" as any);\r\n  const [version, setVersion] = useState(\"1\" as any);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [terrestrial, setTerrestrial] = useState({});\r\n  const [maxAltitude, setMaxAltitude] = useState(0);\r\n  const [coefficients, setCoefficients] = useState({} as any);\r\n  const [text, setText] = useState(\"\");\r\n  const deepDive = \"system1/coverage\";\r\n  const metric = deepDive.split(\"/\")[1];\r\n  const missionType = \"orbital\";\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setText(\"\");\r\n    getCartItems({ type: missionType, system: system, version: version })\r\n      .then((res: any) => {\r\n        setTerrestrial(res.data.terrestrial);\r\n        setSource(res.data.data.data);\r\n        setMaxAltitude(res.data.data.maxAltitude);\r\n        setCoefficients(res.data.data.coefficients);\r\n        setText(res.data.data.text);\r\n\r\n        // FIXME: there is no real data for it.\r\n        //\r\n        // setText(\r\n        //   props.equationsTex[system.replace(\" \", \"_\").toLowerCase()][metric](\r\n        //     data[\"coefficients\"][metric]\r\n        //   )\r\n        // );\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [system, version]);\r\n\r\n  const equation = (inc: any, alt: any, metric: string) => {\r\n    // FIXME: activate in integration of cart.\r\n    //\r\n    // const altitude = parseFloat(alt);\r\n    // const inclination = parseFloat(inc);\r\n\r\n    // const coefs = coefficients[metric];\r\n    // const eqn = props.equations[system.replace(\" \", \"_\").toLowerCase()][metric];\r\n\r\n    // return eqn(coefs, altitude, inclination);\r\n    return inc;\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      TransitionComponent={Transition}\r\n      onClose={() => props.onClose()}\r\n      classes={{ paper: classes.dialogDeep }}\r\n    >\r\n      <CssBaseline />\r\n      <MuiDialogTitle>\r\n        <Typography component=\"strong\" variant=\"h6\">\r\n          {\"Cart Integration Panel\"}\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"Close\"\r\n          className={classes.dialogCloseBtn}\r\n          onClick={() => props.onClose()}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </MuiDialogTitle>\r\n      <DialogContent\r\n        dividers={true}\r\n        style={{ paddingRight: 0, paddingLeft: 0, overflowX: \"hidden\" }}\r\n      >\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item md={12}>\r\n            {!isLoading &&\r\n              (missionType === \"orbital\" ? (\r\n                <AnalyzeRegressionSection\r\n                  equation={(x: any, y: any, m: any) => equation(x, y, m)}\r\n                  maxAltitude={maxAltitude}\r\n                  alt={INIT_PARAMS.altitude}\r\n                  inc={INIT_PARAMS.inclination}\r\n                  value={INIT_PARAMS.value}\r\n                  data={source}\r\n                  selectedItem={metric}\r\n                  text={text}\r\n                  system={system}\r\n                  version={version}\r\n                  onSystem={(value: any) => setSystem(value)}\r\n                  onVersion={(value: any) => setVersion(value)}\r\n                />\r\n              ) : (\r\n                <></>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default CartPanel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  CssBaseline,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Tab,\r\n  Tabs,\r\n  AppBar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { getItems } from \"../../API\";\r\nimport useStyles from \"../../utils/styles\";\r\nimport LineChartSection from \"./line-chart-section\";\r\nimport HistogramChartSection from \"./histogram-chart-section\";\r\nimport BoxChartSection from \"./box-chart-section\";\r\nimport TerrestrialHeatMap from \"./terrestrial-heatmap-chart\";\r\nimport CartDashBoardPanel from \"../cart-dashboard-panel\";\r\nimport CartPanel from \"../cart-panel\";\r\n\r\nconst INIT_MENUS = [\r\n  { id: \"as_needed_handoff\", name: \"Power below threshold handoff\" },\r\n  { id: \"maximum_powee_handoff\", name: \"Maximum power immediate handoff\" },\r\n];\r\n\r\nconst TabPanel = (props: any) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction ChartPanel() {\r\n  const [traces, setTraces] = useState({} as any);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenDash, setIsOpenDash] = useState(false);\r\n  const [selected, setSelected] = useState(\"none\");\r\n  const [tab, setTab] = useState(0);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (selected !== \"none\")\r\n      getItems(selected)\r\n        .then((res) => {\r\n          Object.keys(res.data).map((el) => {\r\n            let ctype: String = res.data[el][\"type\"];\r\n            let gaps: Array<any> = [];\r\n            let durations: Array<any> = [];\r\n            let avgs: Array<any> = [];\r\n\r\n            // Detect chart type and set Traces\r\n            if (ctype === \"line\") {\r\n              res.data[el][\"data\"].map((item: Array<any>, idx: number) => {\r\n                gaps.push(idx + 1);\r\n                durations.push(item[0]);\r\n                avgs.push(item[1]);\r\n              });\r\n\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: gaps,\r\n                  yTraces: durations,\r\n                  avgTraces: avgs,\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            } else if (ctype === \"histogram\") {\r\n              setTraces((prevState: any) => ({\r\n                ...prevState,\r\n                [el]: {\r\n                  xTraces: res.data[el][\"data\"],\r\n                  type: ctype,\r\n                  title: res.data[el][\"title\"],\r\n                },\r\n              }));\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setTraces({});\r\n        });\r\n  }, [selected]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Container component=\"main\" maxWidth=\"lg\">\r\n          <CssBaseline />\r\n          <Card className={classes.chartCard}>\r\n            <CardHeader\r\n              title={\r\n                <Typography component=\"h1\" variant=\"h5\" className=\"m-3\">\r\n                  {`CART Data Statistics Dashboard (Prototype)`}\r\n                </Typography>\r\n              }\r\n              action={\r\n                <>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => setIsOpenDash(true)}\r\n                    style={{ marginRight: 10 }}\r\n                  >\r\n                    {\"Open Dashboard\"}\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => setIsOpen(true)}\r\n                  >\r\n                    {\"Open Chart\"}\r\n                  </Button>\r\n                </>\r\n              }\r\n            />\r\n            <CardContent className=\"ml-3 mr-3\">\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={tab}\r\n                  onChange={(e, val) => setTab(val)}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"fullWidth\"\r\n                  aria-label=\"full width tabs example\"\r\n                >\r\n                  <Tab label=\"Data Statistics Dashboard\" {...a11yProps(0)} />\r\n                  <Tab label=\"Heat Map\" {...a11yProps(1)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews\r\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={tab}\r\n                onChangeIndex={(index: any) => setTab(index)}\r\n              >\r\n                <TabPanel value={tab} index={0}>\r\n                  <Grid\r\n                    container\r\n                    spacing={3}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item md={4}>\r\n                      <Select\r\n                        name=\"\"\r\n                        value={selected}\r\n                        onChange={(e: any) => setSelected(e.target.value)}\r\n                        className={classes.searchSelect}\r\n                        style={selected === \"none\" ? { color: grey[500] } : {}}\r\n                        fullWidth\r\n                      >\r\n                        <MenuItem\r\n                          value=\"none\"\r\n                          style={{ opacity: 0.87 }}\r\n                          disabled\r\n                        >\r\n                          {\"Select Data Set…\"}\r\n                        </MenuItem>\r\n                        {INIT_MENUS.map((item) => (\r\n                          <MenuItem value={item.id} key={item.id}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    <Grid item md={8}></Grid>\r\n                    {Object.keys(traces).map((item) => (\r\n                      <Grid item md={6} key={item}>\r\n                        <Grid container spacing={3}>\r\n                          {traces[item].type === \"line\" && (\r\n                            <Grid item md={12}>\r\n                              <LineChartSection {...traces[item]} />\r\n                            </Grid>\r\n                          )}\r\n                          {traces[item].type === \"histogram\" && (\r\n                            <>\r\n                              <Grid item md={12}>\r\n                                <HistogramChartSection {...traces[item]} />\r\n                              </Grid>\r\n                              <Grid item md={12}>\r\n                                <BoxChartSection {...traces[item]} />\r\n                              </Grid>\r\n                            </>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                  <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item md={12}>\r\n                      <TerrestrialHeatMap />\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </Grid>\r\n      <CartPanel isOpen={isOpen} onClose={() => setIsOpen(false)} />\r\n      <CartDashBoardPanel\r\n        isOpen={isOpenDash}\r\n        onClose={() => setIsOpenDash(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChartPanel;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n    Container,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    Typography,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../utils/styles\";\r\n\r\nfunction NoMatch() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <CssBaseline />\r\n            <Card className={classes.authcard}>\r\n                <CardHeader\r\n                    title={\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {`404 | Page not found :(`}\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <p>{`Maybe the page you are looking for has been removed, or you typed in the wrong URL`}</p>\r\n                </CardContent>\r\n                <Link to=\"/\" className={classes.link}>{`Back To Home`}</Link>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport ChartPanel from \"./pages/chart-panel\";\r\nimport NoMatch from \"./pages/auth-panel/NoMatch\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={ChartPanel} />\r\n        <Route path=\"*\" component={NoMatch} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}